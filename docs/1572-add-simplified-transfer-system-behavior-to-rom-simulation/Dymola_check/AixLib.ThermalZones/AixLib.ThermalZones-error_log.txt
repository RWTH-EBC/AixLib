
Error in model:  AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case600 
Check of <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case600">AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case600</a>
In call <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a>()
Error: Must supply value for argument 'traSysK' when calling function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> in idealHeaterCooler.zoneParam (model <a href="Modelica://AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI">AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI</a>).
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: For variable idealHeaterCooler.zoneParam
 declared in class <a href="Modelica://AixLib.DataBase.ThermalZones">AixLib.DataBase.ThermalZones</a>, /builds/EBC/EBC_all/github_ci/AixLib/AixLib/Utilities/Sources/HeaterCooler/PartialHeaterCoolerPI.mo at line 26, and used in component <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case600#$idealHeaterCooler:PartialHeaterCoolerPI">idealHeaterCooler.PartialHeaterCoolerPI</a>.
Type error in record binding:
  idealHeaterCooler.zoneParam = AixLib.DataBase.ThermalZones.ZoneRecordDummy();
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Errors detected in record bindings.
Check aborted.
Error: ERRORS have been issued.


Error in model:  AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case940 
Check of <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case940">AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case940</a>
In call <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a>()
Error: Must supply value for argument 'traSysK' when calling function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> in idealHeaterCooler.zoneParam (model <a href="Modelica://AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI">AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI</a>).
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: For variable idealHeaterCooler.zoneParam
 declared in class <a href="Modelica://AixLib.DataBase.ThermalZones">AixLib.DataBase.ThermalZones</a>, /builds/EBC/EBC_all/github_ci/AixLib/AixLib/Utilities/Sources/HeaterCooler/PartialHeaterCoolerPI.mo at line 26, and used in component <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case940#$idealHeaterCooler:PartialHeaterCoolerPI">idealHeaterCooler.PartialHeaterCoolerPI</a>.
Type error in record binding:
  idealHeaterCooler.zoneParam = AixLib.DataBase.ThermalZones.ZoneRecordDummy();
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Errors detected in record bindings.
Check aborted.
Error: ERRORS have been issued.


Error in model:  AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case220 
Check of <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case220">AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case220</a>
In call <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a>()
Error: Must supply value for argument 'traSysK' when calling function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> in idealHeaterCooler.zoneParam (model <a href="Modelica://AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI">AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI</a>).
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: For variable idealHeaterCooler.zoneParam
 declared in class <a href="Modelica://AixLib.DataBase.ThermalZones">AixLib.DataBase.ThermalZones</a>, /builds/EBC/EBC_all/github_ci/AixLib/AixLib/Utilities/Sources/HeaterCooler/PartialHeaterCoolerPI.mo at line 26, and used in component <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case220#$idealHeaterCooler:PartialHeaterCoolerPI">idealHeaterCooler.PartialHeaterCoolerPI</a>.
Type error in record binding:
  idealHeaterCooler.zoneParam = AixLib.DataBase.ThermalZones.ZoneRecordDummy();
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Errors detected in record bindings.
Check aborted.
Error: ERRORS have been issued.


Error in model:  AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case320 
Check of <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case320">AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case320</a>
In call <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a>()
Error: Must supply value for argument 'traSysK' when calling function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> in idealHeaterCooler.zoneParam (model <a href="Modelica://AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI">AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI</a>).
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: For variable idealHeaterCooler.zoneParam
 declared in class <a href="Modelica://AixLib.DataBase.ThermalZones">AixLib.DataBase.ThermalZones</a>, /builds/EBC/EBC_all/github_ci/AixLib/AixLib/Utilities/Sources/HeaterCooler/PartialHeaterCoolerPI.mo at line 26, and used in component <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case320#$idealHeaterCooler:PartialHeaterCoolerPI">idealHeaterCooler.PartialHeaterCoolerPI</a>.
Type error in record binding:
  idealHeaterCooler.zoneParam = AixLib.DataBase.ThermalZones.ZoneRecordDummy();
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Errors detected in record bindings.
Check aborted.
Error: ERRORS have been issued.


Error in model:  AixLib.ThermalZones.ReducedOrder.Examples.ThermalZoneAirExchange 
Check of <a href="Modelica://AixLib.ThermalZones.ReducedOrder.Examples.ThermalZoneAirExchange">AixLib.ThermalZones.ReducedOrder.Examples.ThermalZoneAirExchange</a>
Error: The following parameters don't have any value:
<a href="Modelica://AixLib.ThermalZones.ReducedOrder.Examples.ThermalZoneAirExchange#text$thermalZone.zoneParam:traSysFraCooRad">thermalZone.zoneParam.traSysFraCooRad</a>
<a href="Modelica://AixLib.ThermalZones.ReducedOrder.Examples.ThermalZoneAirExchange#text$thermalZone.zoneParam:traSysFraHeaRad">thermalZone.zoneParam.traSysFraHeaRad</a>
<a href="Modelica://AixLib.ThermalZones.ReducedOrder.Examples.ThermalZoneAirExchange#text$thermalZone.zoneParam:traSysK">thermalZone.zoneParam.traSysK</a>
<a href="Modelica://AixLib.ThermalZones.ReducedOrder.Examples.ThermalZoneAirExchange#text$thermalZone.zoneParam:traSysT">thermalZone.zoneParam.traSysT</a>
The model has the same number of unknowns and equations: 2010
The model could not be deduced to be symbolically well-posed.
The model has
  1849+29*thermalZone.zoneParam.nOrientations+thermalZone.ROM.volAir.dynBal.nPorts  +thermalZone.humanSenHeaDependent.productHeatOutput.nu+thermalZone.machinesSenHea.productHeatOutput.nu  +thermalZone.lights.productHeatOutput.nu+thermalZone.ventCont.optimalTemp.nin+  thermalZone.ventCont.optimalTemp.nout+thermalZone.ventCont.dEMA.nout+  thermalZone.ventCont.dEMA.ExpAVG.n+thermalZone.ventCont.dEMA.ExpAVG1.n+max([  size(internalGains.columns, 1); size(internalGains.offset, 1)])
scalar unknowns and
  1901+(if weaDat.pAtmSou == AixLib.BoundaryConditions.Types.DataSource.Parameter   then 1 else 0)+(if weaDat.TDewPoiSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TDryBulSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TBlaSkySou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.relHumSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.opaSkyCovSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.ceiHeiSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.totSkyCovSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winSpeSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winDirSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HInfHorSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HSou == AixLib.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HDifHor then 2 else 1)+(if weaDat.HSou == AixLib.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HGloHor then 2 else 1)+(if weaDat.HSou == AixLib.BoundaryConditions.Types.RadiationDataSource.  Input_HGloHor_HDifHor then 2 else 1)+max([size(internalGains.columns, 1); size  (internalGains.offset, 1)])+19*thermalZone.zoneParam.nOrientations+(if  not   thermalZone.eqAirTempWall.TGroundFromInput then 1 else 0)+thermalZone.ventCont.optimalTemp.nout  +thermalZone.ventCont.dEMA.ExpAVG.n+thermalZone.ventCont.dEMA.ExpAVG1.n+(if    not thermalZone.ROM.volAir.dynBal.use_mWat_flow then 1 else 0)+3*  thermalZone.ROM.volAir.dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  2010
Error: ERRORS have been issued.


Error in model:  AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case950 
Check of <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case950">AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case950</a>
In call <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a>()
Error: Must supply value for argument 'traSysK' when calling function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> in idealHeaterCooler.zoneParam (model <a href="Modelica://AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI">AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI</a>).
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: For variable idealHeaterCooler.zoneParam
 declared in class <a href="Modelica://AixLib.DataBase.ThermalZones">AixLib.DataBase.ThermalZones</a>, /builds/EBC/EBC_all/github_ci/AixLib/AixLib/Utilities/Sources/HeaterCooler/PartialHeaterCoolerPI.mo at line 26, and used in component <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case950#$idealHeaterCooler:PartialHeaterCoolerPI">idealHeaterCooler.PartialHeaterCoolerPI</a>.
Type error in record binding:
  idealHeaterCooler.zoneParam = AixLib.DataBase.ThermalZones.ZoneRecordDummy();
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Errors detected in record bindings.
Check aborted.
Error: ERRORS have been issued.


Error in model:  AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case240 
Check of <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case240">AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case240</a>
In call <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a>()
Error: Must supply value for argument 'traSysK' when calling function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> in idealHeaterCooler.zoneParam (model <a href="Modelica://AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI">AixLib.Utilities.Sources.HeaterCooler.PartialHeaterCoolerPI</a>).
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Error: For variable idealHeaterCooler.zoneParam
 declared in class <a href="Modelica://AixLib.DataBase.ThermalZones">AixLib.DataBase.ThermalZones</a>, /builds/EBC/EBC_all/github_ci/AixLib/AixLib/Utilities/Sources/HeaterCooler/PartialHeaterCoolerPI.mo at line 26, and used in component <a href="Modelica://AixLib.ThermalZones.HighOrder.Validation.ASHRAE140.Case240#$idealHeaterCooler:PartialHeaterCoolerPI">idealHeaterCooler.PartialHeaterCoolerPI</a>.
Type error in record binding:
  idealHeaterCooler.zoneParam = AixLib.DataBase.ThermalZones.ZoneRecordDummy();
Error: Wrong number of arguments in
AixLib.DataBase.ThermalZones.ZoneRecordDummy()
There should be 93 arguments.
The function is declared as:
function <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> 
  input  Modelica.Units.SI.Temperature Tx_0start  := 1E-15 "Initial temperature";
  input  Boolean withAirCap  := true "Consider capacity of indoor air";
  input  Modelica.Units.SI.Volume VAir  := 1E+60 "Air volume of the zone";
  input  Modelica.Units.SI.Area AZone  := 1E+60 "Net floor area of zone";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRad  := 1E-15 "Coefficient of heat transfer for linearized radiation exchange between walls";
  input  Modelica.Units.SI.Angle lat  := 1E-15 "Latitude of zone location";
  input  Integer nOrientations  := 1 "Number of total facades with different
   combination of tilt and orientation";
  input  Modelica.Units.SI.Area AWin[nOrientations]  := fill(1E-15, nOrientations) "Areas of windows by orientations";
  input  Modelica.Units.SI.Area ATransparent[nOrientations]  := fill(1E-15, nOrientations) "Areas of transparent (solar radiation transmittend) elements by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWin  := 1E-15 "Convective coefficient of heat transfer of windows (indoor)";
  input  Modelica.Units.SI.ThermalResistance RWin  := 1E+60 "Resistor for windows";
  input  Modelica.Units.SI.TransmissionCoefficient gWin  := 1E-15 "Total energy transmittance of windows";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer UWin  := 1E-15 "Thermal transmission coefficient of windows";
  input  Real ratioWinConRad  := 1E-15 "Ratio for windows between convective and radiative heat emission";
  input  Modelica.Units.SI.Area AExt[nOrientations]  := fill(1E+60, nOrientations) "Areas of exterior walls by orientations";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConExt  := 1E-15 "Convective coefficient of heat transfer for exterior walls (indoor)";
  input  Integer nExt  := 1 "Number of RC-elements of exterior walls";
  input  Modelica.Units.SI.ThermalResistance RExt[nExt]  := fill(1E+60, nExt) "Resistances of exterior walls, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RExtRem  := 1E+60 "Resistance of remaining resistor RExtRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CExt[nExt]  := fill(1E+60, nExt) "Heat capacities of exterior walls, from inside to outside";
  input  Modelica.Units.SI.Area AInt  := 1E+60 "Area of interior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConInt  := 1E-15 "Convective coefficient of heat transfer of interior walls (indoor)";
  input  Integer nInt  := 1 "Number of RC-elements of interior walls";
  input  Modelica.Units.SI.ThermalResistance RInt[nInt]  := fill(1E+60, nExt) "Resistances of interior wall, from port to center";
  input  Modelica.Units.SI.HeatCapacity CInt[nInt]  := fill(1E+60, nExt) "Heat capacities of interior walls, from port to center";
  input  Modelica.Units.SI.Area AFloor  := 1E+60 "Area of floor plate";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConFloor  := 1E-15 "Convective coefficient of heat transfer of floor plate (indoor)";
  input  Integer nFloor  := 1 "Number of RC-elements of floor plate";
  input  Modelica.Units.SI.ThermalResistance RFloor[nFloor]  := fill(1E+60, nFloor) "Resistances of floor plate, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RFloorRem  := 1E+60 "Resistance of remaining resistor RFloorRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CFloor[nFloor]  := fill(1E+60, nFloor) "Heat capacities of floor plate, from inside to outside";
  input  Modelica.Units.SI.Area ARoof  := 1E+60 "Area of roof";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoof  := 1E-15 "Convective coefficient of heat transfer of roof (indoor)";
  input  Integer nRoof  := 1 "Number of RC-elements of roof";
  input  Modelica.Units.SI.ThermalResistance RRoof[nRoof]  := fill(1E+60, nRoof) "Resistances of roof, from inside to outside";
  input  Modelica.Units.SI.ThermalResistance RRoofRem  := 1E+60 "Resistance of remaining resistor RRoofRem between capacity n and outside";
  input  Modelica.Units.SI.HeatCapacity CRoof[nRoof]  := fill(1E+60, nRoof) "Heat capacities of roof, from inside to outside";
  input  Integer nOrientationsRoof  := 1 "Number of orientations for roof";
  input  Modelica.Units.SI.Angle tiltRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Tilts of roof";
  input  Modelica.Units.SI.Angle aziRoof[nOrientationsRoof]  := fill(1E-15, nOrientationsRoof) "Azimuths of roof";
  input  Real wfRoof[nOrientationsRoof]  := fill(1E-15/nOrientationsRoof, nOrientationsRoof) "Weight factors of the roof";
  input  Modelica.Units.SI.Emissivity aRoof  := 1E-15 "Coefficient of absorption of roof (outdoor)";
  input  Modelica.Units.SI.Emissivity aExt  := 1E-15 "Coefficient of absorption of exterior walls (outdoor)";
  input  Modelica.Units.SI.Temperature TSoil  := 1E-15 "Temperature of soil";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWallOut  := 1E-15 "Exterior walls convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadWall  := 1E-15 "Coefficient of heat transfer for linearized radiation for exterior walls";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConWinOut  := 1E-15 "Windows' convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hConRoofOut  := 1E-15 "Roof's convective coefficient of heat transfer (outdoor)";
  input  Modelica.Units.SI.CoefficientOfHeatTransfer hRadRoof  := 1E-15 "Coefficient of heat transfer for linearized radiation for roof";
  input  Modelica.Units.SI.Angle tiltExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Tilts of exterior walls";
  input  Modelica.Units.SI.Angle aziExtWalls[nOrientations]  := fill(1E-15, nOrientations) "Azimuths of exterior walls";
  input  Real wfWall[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the walls";
  input  Real wfWin[nOrientations]  := fill(1/nOrientations, nOrientations) "Weight factors of the windows";
  input  Real wfGro  := 1E-15 "Weight factor of the ground";
  input  Real specificPeople  := 1E-15 "people per squaremeter";
  input  Real activityDegree  := 1E-15 "acitivity degree of people in met";
  input  Modelica.Units.SI.HeatFlowRate fixedHeatFlowRatePersons  := 1E-15 "Area specific heatflowrate by persons in case of temperature independent
    calculation";
  input  Real ratioConvectiveHeatPeople  := 1E-15 "Ratio of convective heat from overall heat output for people";
  input  Real internalGainsMoistureNoPeople  := 1E-15 "internal moisture production of plants, etc. except from people in g/(h mÂ²)";
  input  Real internalGainsMachinesSpecific  := 1E-15 "Heat Flux of machines";
  input  Real ratioConvectiveHeatMachines  := 1E-15 "Ratio of convective heat from overall heat output for machines";
  input  Modelica.Units.SI.HeatFlux lightingPowerSpecific  := 1E-15 "Heat flux of lighting";
  input  Real ratioConvectiveHeatLighting  := 1E-15 "Ratio of convective heat from overall heat output for lights";
  input  Boolean useConstantACHrate  := false "Choose if a constant infiltration rate is used";
  input  Real baseACH  := 1E-15 "Base ACH rate for ventilation controller";
  input  Real maxUserACH  := 1 "Additional ACH value for max. user activity";
  input  Real maxOverheatingACH[2]  := {1E+60, 1E-15} "Additional ACH value when overheating appears, transition range";
  input  Real maxSummerACH[3]  := {1E-15, 1E-15, 2E-15} "Additional ACH in summer, Tmin, Tmax";
  input  Real winterReduction[3]  := {1E-15, 1E-15, 2E-15} "Reduction factor of userACH for cold weather";
  input  Boolean withAHU  := false "Zone is connected to central air handling unit";
  input  Real minAHU  := 1E-15 "Minimum specific air flow supplied by the AHU";
  input  Real maxAHU  := 2E-15 "Maximum specific air flow supplied by the AHU";
  input  Real shadingFactor[nOrientations]  := fill(1, nOrientations) "Fc-Value: Factor representing how much of the actual solar irradiation goes through the sunblind and enters the window element, for the case, that the sunblind is activated. Defaults to 1, i.e. no shading is active. External sunblinds.";
  input  Real maxIrr[nOrientations]  := fill(0, nOrientations) "Threshold value above which the sunblind (external) becomes active for the whole zone. Threshold regards to the incoming irradiation level with the window direction. This value does not account for heat flux due to the outside temperature.";
  input  Real hHeat  := 2E-15 "Upper limit controller output";
  input  Real lHeat  := 1E-15 "Lower limit controller output";
  input  Real KRHeat  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNHeat  := 1E-15 "Time constant of the controller";
  input  Boolean HeaterOn  := false "Use heater component";
  input  Real hCool  := -1E-15 "Upper limit controller output";
  input  Real lCool  := -2E-15 "Lower limit controller output";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacOut  := 1E-15 "Factor for heat load calculation (part 1) , needs to be multiplied with (indoor set temperature - nominal outside temperature)";
  input  Modelica.Units.SI.ThermalConductance heaLoadFacGrd  := 1E-15 "Factor for heat load calculation, (part 2), needs to be multiplied with (indoor set temperature - nominal ground temperature)";
  input  Real KRCool  := 1E-15 "Gain of the controller";
  input  Modelica.Units.SI.Time TNCool  := 1E-15 "Time constant of the controller";
  input  Boolean CoolerOn  := false "Use chiller component";
  input  Modelica.Units.SI.Temperature TThresholdHeater  := 1E-15 "Threshold temperature below ideal heater is used";
  input  Modelica.Units.SI.Temperature TThresholdCooler  := 2E-15 "Threshold temperature above ideal cooler is used";
  input  Boolean withIdealThresholds  := false "Sets if the threshold temperatures for ideal heater and cooler should
        be used";
  input  Real traSysK  "Gain for PT1 for damped heating transfer";
  input  Modelica.Units.SI.Time traSysT  "Time Constant for PT1 for damped heating transfer";
  input  Real traSysFraHeaRad  "Fraction of heat transfer to radiation";
  input  Real traSysFraCooRad  "Fraction of cool transfer to radiation";
  output  <a href="Modelica://AixLib.DataBase.ThermalZones.ZoneRecordDummy">AixLib.DataBase.ThermalZones.ZoneRecordDummy</a> x_0out ;
end AixLib.DataBase.ThermalZones.ZoneRecordDummy;
Errors detected in record bindings.
Check aborted.
Error: ERRORS have been issued.

