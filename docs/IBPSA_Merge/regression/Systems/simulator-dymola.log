 = true


rCheck = checkModel("AixLib.Systems.HydraulicModules.Examples.ThrottlePump");
Check of AixLib.Systems.HydraulicModules.Examples.ThrottlePump
The model has the same number of unknowns and equations: 1392
The model could not be deduced to be symbolically well-posed.
The model has
  1366+ThrottlePump.PumpInterface.pump.vol.dynBal.nPorts+ThrottlePump.pipe1.simplePipe.vol[1].dynBal.nPorts  +ThrottlePump.pipe1.simplePipe.vol[2].dynBal.nPorts+ThrottlePump.pipe1.simplePipe.vol[3].dynBal.nPorts  +ThrottlePump.pipe2.simplePipe.vol[1].dynBal.nPorts+ThrottlePump.pipe2.simplePipe.vol[2].dynBal.nPorts  +ThrottlePump.pipe2.simplePipe.vol[3].dynBal.nPorts+ThrottlePump.pipe3.simplePipe.vol[1].dynBal.nPorts  +ThrottlePump.pipe3.simplePipe.vol[2].dynBal.nPorts+ThrottlePump.pipe3.simplePipe.vol[3].dynBal.nPorts  +ThrottlePump.pipe4.simplePipe.vol[1].dynBal.nPorts+ThrottlePump.pipe4.simplePipe.vol[2].dynBal.nPorts  +ThrottlePump.pipe4.simplePipe.vol[3].dynBal.nPorts
scalar unknowns and
  1291+(if boundary.use_Xi_in then 1 else (if boundary.use_X_in then 0 else 1))+(  if  not boundary.use_p_in then 1 else 0)+2*boundary.nPorts+(if  not   boundary.use_T_in then 1 else 0)+(if boundary1.use_Xi_in then 1 else (if   boundary1.use_X_in then 0 else 1))+(if  not boundary1.use_p_in then 1 else 0)+2  *boundary1.nPorts+(if  not boundary1.use_T_in then 1 else 0)+(if  not   ThrottlePump.PumpInterface.pump.vol.dynBal.use_mWat_flow then 1 else 0)+3*  ThrottlePump.PumpInterface.pump.vol.dynBal.nPorts+(if  not ThrottlePump.pipe1.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*ThrottlePump.pipe1.simplePipe.vol[1].dynBal.nPorts+(if  not   ThrottlePump.pipe1.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  ThrottlePump.pipe1.simplePipe.vol[2].dynBal.nPorts+(if  not ThrottlePump.pipe1.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*ThrottlePump.pipe1.simplePipe.vol[3].dynBal.nPorts+(if  not   ThrottlePump.pipe2.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  ThrottlePump.pipe2.simplePipe.vol[1].dynBal.nPorts+(if  not ThrottlePump.pipe2.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*ThrottlePump.pipe2.simplePipe.vol[2].dynBal.nPorts+(if  not   ThrottlePump.pipe2.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  ThrottlePump.pipe2.simplePipe.vol[3].dynBal.nPorts+(if  not ThrottlePump.pipe3.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*ThrottlePump.pipe3.simplePipe.vol[1].dynBal.nPorts+(if  not   ThrottlePump.pipe3.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  ThrottlePump.pipe3.simplePipe.vol[2].dynBal.nPorts+(if  not ThrottlePump.pipe3.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*ThrottlePump.pipe3.simplePipe.vol[3].dynBal.nPorts+(if  not   ThrottlePump.pipe4.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  ThrottlePump.pipe4.simplePipe.vol[1].dynBal.nPorts+(if  not ThrottlePump.pipe4.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*ThrottlePump.pipe4.simplePipe.vol[2].dynBal.nPorts+(if  not   ThrottlePump.pipe4.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  ThrottlePump.pipe4.simplePipe.vol[3].dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  1392
Check of AixLib.Systems.HydraulicModules.Examples.ThrottlePump successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/ThrottlePump.mos\",", "AixLib.Systems.HydraulicModules.Examples.ThrottlePump.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.HydraulicModules.Examples.ThrottlePump\",", "AixLib.Systems.HydraulicModules.Examples.ThrottlePump.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.HydraulicModules.Examples.ThrottlePump.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.HydraulicModules.Examples.ThrottlePump\\\");\",", "AixLib.Systems.HydraulicModules.Examples.ThrottlePump.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.HydraulicModules.Examples.ThrottlePump.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.HydraulicModules.Examples.ThrottlePump.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/ThrottlePump.mos");
simulateModel("AixLib.Systems.HydraulicModules.Examples.ThrottlePump", tolerance=1e-6, stopTime=600, resultFile="AixLib.Systems.HydraulicModules.Examples.ThrottlePump");
Translation of AixLib.Systems.HydraulicModules.Examples.ThrottlePump
The DAE has 1392 scalar unknowns and 1392 scalar equations.
 
Statistics
 
Original Model
  Number of components: 315
  Variables: 3775
  Constants: 68 (68 scalars)
  Parameters: 1849 (2020 scalars)
  Unknowns: 1858 (1446 scalars)
  Differentiated variables: 52 scalars
  Equations: 1374
  Nontrivial: 1075
Translated Model
  Constants: 1404 scalars
  Free parameters: 115 scalars
  Parameter depending: 729 scalars
  Outputs: 12 scalars
  Continuous time states: 39 scalars
  Time-varying variables: 310 scalars
  Alias variables: 976 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {5, 2, 5, 2, 5, 2, 5, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {14}
  Sizes after manipulation of the nonlinear systems: {1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {14, 1}
    Sizes after manipulation of the nonlinear systems: {1, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {14, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {1, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
ThrottlePump.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe1.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe1.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe1.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe1.simplePipe.vol[1].dynBal.U
ThrottlePump.pipe1.simplePipe.vol[2].dynBal.U
ThrottlePump.pipe1.simplePipe.vol[3].dynBal.U
ThrottlePump.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe2.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe2.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe2.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe2.simplePipe.vol[1].dynBal.U
ThrottlePump.pipe2.simplePipe.vol[2].dynBal.U
ThrottlePump.pipe2.simplePipe.vol[3].dynBal.U
ThrottlePump.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe3.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe3.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe3.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe3.simplePipe.vol[1].dynBal.U
ThrottlePump.pipe3.simplePipe.vol[2].dynBal.U
ThrottlePump.pipe3.simplePipe.vol[3].dynBal.U
ThrottlePump.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe4.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe4.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe4.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
ThrottlePump.pipe4.simplePipe.vol[1].dynBal.U
ThrottlePump.pipe4.simplePipe.vol[2].dynBal.U
ThrottlePump.pipe4.simplePipe.vol[3].dynBal.U
ThrottlePump.PT1_a1.y
ThrottlePump.PT1_a2.y
ThrottlePump.PT1_b1.y
ThrottlePump.PT1_b2.y
ThrottlePump.PumpInterface.pump.motSpe.y
ThrottlePump.PumpInterface.pump.vol.dynBal.U
ThrottlePump.senT_a1.T
ThrottlePump.senT_a2.T
ThrottlePump.senT_b1.T
ThrottlePump.senT_b2.T
ThrottlePump.valve.actPos.y
Finished
Finished
 = true


Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.HydraulicModules.Examples.ThrottlePump.translation.log"); = true


rCheck = checkModel("AixLib.Systems.ModularAHU.Validation.AHU2_Preheater");
Check of AixLib.Systems.ModularAHU.Validation.AHU2_Preheater
The model has the same number of unknowns and equations: 2560
The model could not be deduced to be symbolically well-posed.
The model has
  2475+max([size(combiTimeTable.columns, 1); size(combiTimeTable.offset, 1)])+  registerModule.hydraulicModule.valve.vol.dynBal.nPorts+registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.junc456.dynBal.nPorts+2*size(registerModule.hydraulicModule.PumpInterface.physics.maxMinTable.columns,   1)+2*registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n1+2*  registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.n+  registerModule.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts+2*  registerModule.dynamicHX.vol1[1].dynBal.nPorts+2*registerModule.dynamicHX.vol1[2].dynBal.nPorts  +2*registerModule.dynamicHX.vol1[3].dynBal.nPorts+2*registerModule.dynamicHX.vol1[4].dynBal.nPorts  +2*registerModule.dynamicHX.vol1[5].dynBal.nPorts+registerModule.dynamicHX.vol2[1].dynBal.nPorts  +registerModule.dynamicHX.vol2[2].dynBal.nPorts+registerModule.dynamicHX.vol2[3].dynBal.nPorts  +registerModule.dynamicHX.vol2[4].dynBal.nPorts+registerModule.dynamicHX.vol2[5].dynBal.nPorts
scalar unknowns and
  2315+(if boundaryWaterSource.use_Xi_in then 1 else (if boundaryWaterSource.use_X_in   then 0 else 1))+(if  not boundaryWaterSource.use_p_in then 1 else 0)+2*  boundaryWaterSource.nPorts+(if  not boundaryWaterSource.use_T_in then 1 else 0)  +(if boundaryWaterSink.use_Xi_in then 1 else (if boundaryWaterSink.use_X_in   then 0 else 1))+(if  not boundaryWaterSink.use_p_in then 1 else 0)+2*  boundaryWaterSink.nPorts+(if  not boundaryWaterSink.use_T_in then 1 else 0)+(  if boundaryAirSource.use_Xi_in then 2 else (if boundaryAirSource.use_X_in   then 1 else 3))+3*boundaryAirSource.nPorts+(if  not boundaryAirSource.use_m_flow_in   then 1 else 0)+(if  not boundaryAirSource.use_T_in then 1 else 0)+(if   boundaryAirSink.use_Xi_in then 2 else (if boundaryAirSink.use_X_in then 1   else 3))+3*boundaryAirSink.nPorts+(if  not boundaryAirSink.use_p_in then 1   else 0)+(if  not boundaryAirSink.use_T_in then 1 else 0)+max([size(  combiTimeTable.columns, 1); size(combiTimeTable.offset, 1)])+2*size(  registerModule.hydraulicModule.PumpInterface.physics.maxMinTable.columns, 1)+  registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n1+  registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.n+(if    not registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.junc456.dynBal.use_mWat_flow then 1   else 0)+3*registerModule.hydraulicModule.junc456.dynBal.nPorts+(if  not   registerModule.hydraulicModule.PumpInterface.physics.vol.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts  +(if  not registerModule.dynamicHX.vol1[1].dynBal.use_mWat_flow then 1 else 0)  +5*registerModule.dynamicHX.vol1[1].dynBal.nPorts+(if  not registerModule.dynamicHX.vol1[2].dynBal.use_mWat_flow   then 1 else 0)+5*registerModule.dynamicHX.vol1[2].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol1[3].dynBal.use_mWat_flow then 1 else 0)+5*  registerModule.dynamicHX.vol1[3].dynBal.nPorts+(if  not registerModule.dynamicHX.vol1[4].dynBal.use_mWat_flow   then 1 else 0)+5*registerModule.dynamicHX.vol1[4].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol1[5].dynBal.use_mWat_flow then 1 else 0)+5*  registerModule.dynamicHX.vol1[5].dynBal.nPorts+(if  not registerModule.dynamicHX.vol2[1].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.dynamicHX.vol2[1].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol2[2].dynBal.use_mWat_flow then 1 else 0)+3*  registerModule.dynamicHX.vol2[2].dynBal.nPorts+(if  not registerModule.dynamicHX.vol2[3].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.dynamicHX.vol2[3].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol2[4].dynBal.use_mWat_flow then 1 else 0)+3*  registerModule.dynamicHX.vol2[4].dynBal.nPorts+(if  not registerModule.dynamicHX.vol2[5].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.dynamicHX.vol2[5].dynBal.nPorts+(if  not   registerModule.hydraulicModule.valve.vol.dynBal.use_mWat_flow then 1 else 0)+3  *registerModule.hydraulicModule.valve.vol.dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  2560
Check of AixLib.Systems.ModularAHU.Validation.AHU2_Preheater successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Validation/AHU2_Preheater.mos\",", "AixLib.Systems.ModularAHU.Validation.AHU2_Preheater.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.ModularAHU.Validation.AHU2_Preheater\",", "AixLib.Systems.ModularAHU.Validation.AHU2_Preheater.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.ModularAHU.Validation.AHU2_Preheater.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.ModularAHU.Validation.AHU2_Preheater\\\");\",", "AixLib.Systems.ModularAHU.Validation.AHU2_Preheater.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.ModularAHU.Validation.AHU2_Preheater.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.ModularAHU.Validation.AHU2_Preheater.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Validation/AHU2_Preheater.mos");
simulateModel("AixLib.Systems.ModularAHU.Validation.AHU2_Preheater", tolerance=1e-6, outputInterval=1, stopTime=7200, resultFile="AixLib.Systems.ModularAHU.Validation.AHU2_Preheater");
Translation of AixLib.Systems.ModularAHU.Validation.AHU2_Preheater
The DAE has 2560 scalar unknowns and 2560 scalar equations.
 
Statistics
 
Original Model
  Number of components: 488
  Variables: 6459
  Constants: 130 (130 scalars)
  Parameters: 2913 (27381 scalars)
  Unknowns: 3416 (2669 scalars)
  Differentiated variables: 93 scalars
  Equations: 2640
  Nontrivial: 2037
Translated Model
  Constants: 2211 scalars
  Free parameters: 17979 scalars
  Parameter depending: 7653 scalars
  Outputs: 17 scalars
  Continuous time states: 67 scalars
  Time-varying variables: 667 scalars
  Alias variables: 1670 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 2, 2, 2, 2, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {18, 6, 6, 6, 6, 6, 6}
  Sizes after manipulation of the nonlinear systems: {2, 1, 1, 1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {18, 1}
    Sizes after manipulation of the nonlinear systems: {4, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {18, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
registerModule.dynamicHX.heatCapacitor[1].T
registerModule.dynamicHX.heatCapacitor[2].T
registerModule.dynamicHX.heatCapacitor[3].T
registerModule.dynamicHX.heatCapacitor[4].T
registerModule.dynamicHX.heatCapacitor[5].T
registerModule.dynamicHX.vol1[1].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[1].dynBal.U
registerModule.dynamicHX.vol1[2].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[2].dynBal.U
registerModule.dynamicHX.vol1[3].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[3].dynBal.U
registerModule.dynamicHX.vol1[4].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[4].dynBal.U
registerModule.dynamicHX.vol1[5].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[5].dynBal.U
registerModule.dynamicHX.vol2[1].dynBal.U
registerModule.dynamicHX.vol2[2].dynBal.U
registerModule.dynamicHX.vol2[3].dynBal.U
registerModule.dynamicHX.vol2[4].dynBal.U
registerModule.dynamicHX.vol2[5].dynBal.U
registerModule.hydraulicModule.junc456.dynBal.U
registerModule.hydraulicModule.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe1.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe1.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe2.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe2.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe3.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe3.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe4.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe4.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe5.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe5.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe6.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe6.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.PT1_a1.y
registerModule.hydraulicModule.PT1_a2.y
registerModule.hydraulicModule.PT1_b1.y
registerModule.hydraulicModule.PT1_b2.y
registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.x[1]
registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.x[2]
registerModule.hydraulicModule.senT_a1.T
registerModule.hydraulicModule.senT_a2.T
registerModule.hydraulicModule.senT_b1.T
registerModule.hydraulicModule.senT_b2.T
registerModule.hydraulicModule.valve.actPos.y
registerModule.hydraulicModule.valve.vol.dynBal.U
registerModule.PT1_airIn.y
registerModule.PT1_airOut.y
registerModule.senT_airIn.T
registerModule.senT_airOut.T
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.ModularAHU.Validation.AHU2_Preheater.translation.log"); = true


rCheck = checkModel("AixLib.Systems.HydraulicModules.Examples.Admix");
Check of AixLib.Systems.HydraulicModules.Examples.Admix
The model has the same number of unknowns and equations: 2084
The model could not be deduced to be symbolically well-posed.
The model has
  2040+Admix.valve.vol.dynBal.nPorts+Admix.pipe1.simplePipe.vol[1].dynBal.nPorts+  Admix.pipe1.simplePipe.vol[2].dynBal.nPorts+Admix.pipe1.simplePipe.vol[3].dynBal.nPorts  +Admix.pipe2.simplePipe.vol[1].dynBal.nPorts+Admix.pipe2.simplePipe.vol[2].dynBal.nPorts  +Admix.pipe2.simplePipe.vol[3].dynBal.nPorts+Admix.pipe3.simplePipe.vol[1].dynBal.nPorts  +Admix.pipe3.simplePipe.vol[2].dynBal.nPorts+Admix.pipe3.simplePipe.vol[3].dynBal.nPorts  +Admix.pipe4.simplePipe.vol[1].dynBal.nPorts+Admix.pipe4.simplePipe.vol[2].dynBal.nPorts  +Admix.pipe4.simplePipe.vol[3].dynBal.nPorts+Admix.pipe5.simplePipe.vol[1].dynBal.nPorts  +Admix.pipe5.simplePipe.vol[2].dynBal.nPorts+Admix.pipe5.simplePipe.vol[3].dynBal.nPorts  +Admix.pipe6.simplePipe.vol[1].dynBal.nPorts+Admix.pipe6.simplePipe.vol[2].dynBal.nPorts  +Admix.pipe6.simplePipe.vol[3].dynBal.nPorts+Admix.junc456.dynBal.nPorts+  Admix.PumpInterface.pump.vol.dynBal.nPorts
scalar unknowns and
  1921+(if boundary.use_Xi_in then 1 else (if boundary.use_X_in then 0 else 1))+(  if  not boundary.use_p_in then 1 else 0)+2*boundary.nPorts+(if  not   boundary.use_T_in then 1 else 0)+(if boundary1.use_Xi_in then 1 else (if   boundary1.use_X_in then 0 else 1))+(if  not boundary1.use_p_in then 1 else 0)+2  *boundary1.nPorts+(if  not boundary1.use_T_in then 1 else 0)+(if  not   Admix.pipe1.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Admix.pipe1.simplePipe.vol[1].dynBal.nPorts+(if  not Admix.pipe1.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Admix.pipe1.simplePipe.vol[2].dynBal.nPorts+(if  not   Admix.pipe1.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Admix.pipe1.simplePipe.vol[3].dynBal.nPorts+(if  not Admix.pipe2.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Admix.pipe2.simplePipe.vol[1].dynBal.nPorts+(if  not   Admix.pipe2.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Admix.pipe2.simplePipe.vol[2].dynBal.nPorts+(if  not Admix.pipe2.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Admix.pipe2.simplePipe.vol[3].dynBal.nPorts+(if  not   Admix.pipe3.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Admix.pipe3.simplePipe.vol[1].dynBal.nPorts+(if  not Admix.pipe3.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Admix.pipe3.simplePipe.vol[2].dynBal.nPorts+(if  not   Admix.pipe3.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Admix.pipe3.simplePipe.vol[3].dynBal.nPorts+(if  not Admix.pipe4.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Admix.pipe4.simplePipe.vol[1].dynBal.nPorts+(if  not   Admix.pipe4.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Admix.pipe4.simplePipe.vol[2].dynBal.nPorts+(if  not Admix.pipe4.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Admix.pipe4.simplePipe.vol[3].dynBal.nPorts+(if  not   Admix.pipe5.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Admix.pipe5.simplePipe.vol[1].dynBal.nPorts+(if  not Admix.pipe5.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Admix.pipe5.simplePipe.vol[2].dynBal.nPorts+(if  not   Admix.pipe5.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Admix.pipe5.simplePipe.vol[3].dynBal.nPorts+(if  not Admix.pipe6.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Admix.pipe6.simplePipe.vol[1].dynBal.nPorts+(if  not   Admix.pipe6.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Admix.pipe6.simplePipe.vol[2].dynBal.nPorts+(if  not Admix.pipe6.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Admix.pipe6.simplePipe.vol[3].dynBal.nPorts+(if  not   Admix.junc456.dynBal.use_mWat_flow then 1 else 0)+3*Admix.junc456.dynBal.nPorts  +(if  not Admix.PumpInterface.pump.vol.dynBal.use_mWat_flow then 1 else 0)+3*  Admix.PumpInterface.pump.vol.dynBal.nPorts+(if  not Admix.valve.vol.dynBal.use_mWat_flow   then 1 else 0)+3*Admix.valve.vol.dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  2084
Check of AixLib.Systems.HydraulicModules.Examples.Admix successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/Admix.mos\",", "AixLib.Systems.HydraulicModules.Examples.Admix.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.HydraulicModules.Examples.Admix\",", "AixLib.Systems.HydraulicModules.Examples.Admix.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.HydraulicModules.Examples.Admix.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.HydraulicModules.Examples.Admix\\\");\",", "AixLib.Systems.HydraulicModules.Examples.Admix.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.HydraulicModules.Examples.Admix.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.HydraulicModules.Examples.Admix.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/Admix.mos");
simulateModel("AixLib.Systems.HydraulicModules.Examples.Admix", tolerance=1e-6, stopTime=800, resultFile="AixLib.Systems.HydraulicModules.Examples.Admix");
Translation of AixLib.Systems.HydraulicModules.Examples.Admix
The DAE has 2084 scalar unknowns and 2084 scalar equations.
 
Statistics
 
Original Model
  Number of components: 467
  Variables: 5666
  Constants: 106 (106 scalars)
  Parameters: 2758 (2951 scalars)
  Unknowns: 2802 (2167 scalars)
  Differentiated variables: 76 scalars
  Equations: 2052
  Nontrivial: 1585
Translated Model
  Constants: 2087 scalars
  Free parameters: 163 scalars
  Parameter depending: 1050 scalars
  Outputs: 12 scalars
  Continuous time states: 55 scalars
  Time-varying variables: 469 scalars
  Alias variables: 1455 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {21}
  Sizes after manipulation of the nonlinear systems: {2}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {21, 1}
    Sizes after manipulation of the nonlinear systems: {4, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {21, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
Admix.junc456.dynBal.U
Admix.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
Admix.pipe1.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Admix.pipe1.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Admix.pipe1.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Admix.pipe1.simplePipe.vol[1].dynBal.U
Admix.pipe1.simplePipe.vol[2].dynBal.U
Admix.pipe1.simplePipe.vol[3].dynBal.U
Admix.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
Admix.pipe2.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Admix.pipe2.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Admix.pipe2.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Admix.pipe2.simplePipe.vol[1].dynBal.U
Admix.pipe2.simplePipe.vol[2].dynBal.U
Admix.pipe2.simplePipe.vol[3].dynBal.U
Admix.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
Admix.pipe3.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Admix.pipe3.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Admix.pipe3.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Admix.pipe3.simplePipe.vol[1].dynBal.U
Admix.pipe3.simplePipe.vol[2].dynBal.U
Admix.pipe3.simplePipe.vol[3].dynBal.U
Admix.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
Admix.pipe4.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Admix.pipe4.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Admix.pipe4.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Admix.pipe4.simplePipe.vol[1].dynBal.U
Admix.pipe4.simplePipe.vol[2].dynBal.U
Admix.pipe4.simplePipe.vol[3].dynBal.U
Admix.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
Admix.pipe5.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Admix.pipe5.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Admix.pipe5.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Admix.pipe5.simplePipe.vol[1].dynBal.U
Admix.pipe5.simplePipe.vol[2].dynBal.U
Admix.pipe5.simplePipe.vol[3].dynBal.U
Admix.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
Admix.pipe6.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Admix.pipe6.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Admix.pipe6.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Admix.pipe6.simplePipe.vol[1].dynBal.U
Admix.pipe6.simplePipe.vol[2].dynBal.U
Admix.pipe6.simplePipe.vol[3].dynBal.U
Admix.PT1_a1.y
Admix.PT1_a2.y
Admix.PT1_b1.y
Admix.PT1_b2.y
Admix.PumpInterface.pump.motSpe.y
Admix.PumpInterface.pump.vol.dynBal.U
Admix.senT_a1.T
Admix.senT_a2.T
Admix.senT_b1.T
Admix.senT_b2.T
Admix.valve.actPos.y
Admix.valve.vol.dynBal.U
Finished
Finished
 = true


Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.HydraulicModules.Examples.Admix.translation.log"); = true


rCheck = checkModel("AixLib.Systems.ModularAHU.Examples.Heater");
Check of AixLib.Systems.ModularAHU.Examples.Heater
The model has the same number of unknowns and equations: 2542
The model could not be deduced to be symbolically well-posed.
The model has
  2486+registerModule.hydraulicModule.valve.vol.dynBal.nPorts+registerModule.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts  +registerModule.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts+  registerModule.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts+  registerModule.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts+  registerModule.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts+  registerModule.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts+  registerModule.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts+  registerModule.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts+  registerModule.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts+  registerModule.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts+  registerModule.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts+  registerModule.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts+  registerModule.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts+  registerModule.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts+  registerModule.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts+  registerModule.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts+  registerModule.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts+  registerModule.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts+  registerModule.hydraulicModule.junc456.dynBal.nPorts+registerModule.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts  +2*registerModule.dynamicHX.vol1[1].dynBal.nPorts+2*registerModule.dynamicHX.vol1[2].dynBal.nPorts  +registerModule.dynamicHX.vol2[1].dynBal.nPorts+registerModule.dynamicHX.vol2[2].dynBal.nPorts
scalar unknowns and
  2327+(if boundaryWaterSource.use_Xi_in then 1 else (if boundaryWaterSource.use_X_in   then 0 else 1))+(if  not boundaryWaterSource.use_p_in then 1 else 0)+2*  boundaryWaterSource.nPorts+(if  not boundaryWaterSource.use_T_in then 1 else 0)  +(if boundaryWaterSink.use_Xi_in then 1 else (if boundaryWaterSink.use_X_in   then 0 else 1))+(if  not boundaryWaterSink.use_p_in then 1 else 0)+2*  boundaryWaterSink.nPorts+(if  not boundaryWaterSink.use_T_in then 1 else 0)+(  if boundaryAirSource.use_Xi_in then 2 else (if boundaryAirSource.use_X_in   then 1 else 3))+3*boundaryAirSource.nPorts+(if  not boundaryAirSource.use_p_in   then 1 else 0)+(if  not boundaryAirSource.use_T_in then 1 else 0)+(if   boundaryAirSink.use_Xi_in then 2 else (if boundaryAirSink.use_X_in then 1   else 3))+3*boundaryAirSink.nPorts+(if  not boundaryAirSink.use_p_in then 1   else 0)+(if  not boundaryAirSink.use_T_in then 1 else 0)+(if  not   registerModule.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts  +(if  not registerModule.hydraulicModule.junc456.dynBal.use_mWat_flow then 1   else 0)+3*registerModule.hydraulicModule.junc456.dynBal.nPorts+(if  not   registerModule.hydraulicModule.PumpInterface.pump.vol.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts  +(if  not registerModule.dynamicHX.vol1[1].dynBal.use_mWat_flow then 1 else 0)  +5*registerModule.dynamicHX.vol1[1].dynBal.nPorts+(if  not registerModule.dynamicHX.vol1[2].dynBal.use_mWat_flow   then 1 else 0)+5*registerModule.dynamicHX.vol1[2].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol2[1].dynBal.use_mWat_flow then 1 else 0)+3*  registerModule.dynamicHX.vol2[1].dynBal.nPorts+(if  not registerModule.dynamicHX.vol2[2].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.dynamicHX.vol2[2].dynBal.nPorts+(if  not   registerModule.hydraulicModule.valve.vol.dynBal.use_mWat_flow then 1 else 0)+3  *registerModule.hydraulicModule.valve.vol.dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  2542
Check of AixLib.Systems.ModularAHU.Examples.Heater successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Examples/Heater.mos\",", "AixLib.Systems.ModularAHU.Examples.Heater.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.ModularAHU.Examples.Heater\",", "AixLib.Systems.ModularAHU.Examples.Heater.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.ModularAHU.Examples.Heater.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.ModularAHU.Examples.Heater\\\");\",", "AixLib.Systems.ModularAHU.Examples.Heater.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.ModularAHU.Examples.Heater.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.ModularAHU.Examples.Heater.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Examples/Heater.mos");
simulateModel("AixLib.Systems.ModularAHU.Examples.Heater", tolerance=1e-6, stopTime=3600, resultFile="AixLib.Systems.ModularAHU.Examples.Heater");
Translation of AixLib.Systems.ModularAHU.Examples.Heater
The DAE has 2542 scalar unknowns and 2542 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  if (registerModule.dynamicHX.vol1[1].dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.    FixedInitial) then 
    if (registerModule.dynamicHX.vol1[1].dynBal.initialize_p) then 
      registerModule.dynamicHX.vol1[1].dynBal.medium.p = registerModule.dynamicHX.vol1[1].dynBal.p_start;
    end if;
  else
    if (registerModule.dynamicHX.vol1[1].dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      if (registerModule.dynamicHX.vol1[1].dynBal.initialize_p) then 
        der(registerModule.dynamicHX.vol1[1].dynBal.medium.p) = 0;
      end if;
    end if;
  end if;
  if (registerModule.dynamicHX.vol1[2].dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.    FixedInitial) then 
    if (registerModule.dynamicHX.vol1[2].dynBal.initialize_p) then 
      registerModule.dynamicHX.vol1[2].dynBal.medium.p = registerModule.dynamicHX.vol1[2].dynBal.p_start;
    end if;
  else
    if (registerModule.dynamicHX.vol1[2].dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      if (registerModule.dynamicHX.vol1[2].dynBal.initialize_p) then 
        der(registerModule.dynamicHX.vol1[2].dynBal.medium.p) = 0;
      end if;
    end if;
  end if;
 
The redundancies involve
initial equations: 
  0.0 = 0;
  0.0 = 0;
 
 
Statistics
 
Original Model
  Number of components: 549
  Variables: 6670
  Constants: 129 (129 scalars)
  Parameters: 3185 (3389 scalars)
  Unknowns: 3356 (2649 scalars)
  Differentiated variables: 121 scalars
  Equations: 2475
  Nontrivial: 1921
Translated Model
  Constants: 2415 scalars
  Free parameters: 207 scalars
  Parameter depending: 1205 scalars
  Continuous time states: 69 scalars
  Time-varying variables: 588 scalars
  Alias variables: 1752 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {21}
  Sizes after manipulation of the nonlinear systems: {2}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of linear systems of equations: {4, 179, 12}
    Sizes after manipulation of the linear systems: {2, 59, 2}
    Sizes of nonlinear systems of equations: {1, 21, 1}
    Sizes after manipulation of the nonlinear systems: {0, 4, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {21, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
ctrBasic.PID.D.x
ctrBasic.PID.I.y
registerModule.dynamicHX.heatCapacitor[1].T
registerModule.dynamicHX.heatCapacitor[2].T
registerModule.dynamicHX.vol1[1].dynBal.medium.T
registerModule.dynamicHX.vol1[1].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[2].dynBal.medium.T
registerModule.dynamicHX.vol1[2].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol2[1].dynBal.medium.T
registerModule.dynamicHX.vol2[2].dynBal.medium.T
registerModule.hydraulicModule.junc456.dynBal.medium.T
registerModule.hydraulicModule.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe1.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe1.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe1.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.medium.T
registerModule.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.medium.T
registerModule.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.medium.T
registerModule.hydraulicModule.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe2.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe2.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe2.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.medium.T
registerModule.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.medium.T
registerModule.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.medium.T
registerModule.hydraulicModule.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe3.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe3.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe3.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.medium.T
registerModule.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.medium.T
registerModule.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.medium.T
registerModule.hydraulicModule.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe4.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe4.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe4.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.medium.T
registerModule.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.medium.T
registerModule.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.medium.T
registerModule.hydraulicModule.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe5.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe5.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe5.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.medium.T
registerModule.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.medium.T
registerModule.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.medium.T
registerModule.hydraulicModule.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe6.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe6.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe6.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.medium.T
registerModule.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.medium.T
registerModule.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.medium.T
registerModule.hydraulicModule.PT1_a1.y
registerModule.hydraulicModule.PT1_a2.y
registerModule.hydraulicModule.PT1_b1.y
registerModule.hydraulicModule.PT1_b2.y
registerModule.hydraulicModule.PumpInterface.pump.motSpe.y
registerModule.hydraulicModule.PumpInterface.pump.vol.dynBal.medium.T
registerModule.hydraulicModule.senT_a1.T
registerModule.hydraulicModule.senT_a2.T
registerModule.hydraulicModule.senT_b1.T
registerModule.hydraulicModule.senT_b2.T
registerModule.hydraulicModule.valve.actPos.y
registerModule.hydraulicModule.valve.vol.dynBal.medium.T
registerModule.PT1_airIn.y
registerModule.PT1_airOut.y
registerModule.senT_airIn.T
registerModule.senT_airOut.T
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.ModularAHU.Examples.Heater.translation.log"); = true


rCheck = checkModel("AixLib.Systems.HydraulicModules.Examples.Pump");
Check of AixLib.Systems.HydraulicModules.Examples.Pump
The model has the same number of unknowns and equations: 913
The model could not be deduced to be symbolically well-posed.
The model has
  899+Unmixed.PumpInterface.pump.vol.dynBal.nPorts+Unmixed.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +Unmixed.pipe1.plugFlowPipe.vol_a.dynBal.nPorts+Unmixed.pipe2.plugFlowPipe.vol_b.dynBal.nPorts  +Unmixed.pipe2.plugFlowPipe.vol_a.dynBal.nPorts+Unmixed.pipe3.plugFlowPipe.vol_b.dynBal.nPorts  +Unmixed.pipe3.plugFlowPipe.vol_a.dynBal.nPorts
scalar unknowns and
  854+(if boundary.use_Xi_in then 1 else (if boundary.use_X_in then 0 else 1))+(  if  not boundary.use_p_in then 1 else 0)+2*boundary.nPorts+(if  not   boundary.use_T_in then 1 else 0)+(if boundary1.use_Xi_in then 1 else (if   boundary1.use_X_in then 0 else 1))+(if  not boundary1.use_p_in then 1 else 0)+2  *boundary1.nPorts+(if  not boundary1.use_T_in then 1 else 0)+(if  not   Unmixed.PumpInterface.pump.vol.dynBal.use_mWat_flow then 1 else 0)+3*  Unmixed.PumpInterface.pump.vol.dynBal.nPorts+(if  not Unmixed.pipe1.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*Unmixed.pipe1.plugFlowPipe.vol_b.dynBal.nPorts+(if  not   Unmixed.pipe1.plugFlowPipe.vol_a.dynBal.use_mWat_flow then 1 else 0)+3*  Unmixed.pipe1.plugFlowPipe.vol_a.dynBal.nPorts+(if  not Unmixed.pipe2.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*Unmixed.pipe2.plugFlowPipe.vol_b.dynBal.nPorts+(if  not   Unmixed.pipe2.plugFlowPipe.vol_a.dynBal.use_mWat_flow then 1 else 0)+3*  Unmixed.pipe2.plugFlowPipe.vol_a.dynBal.nPorts+(if  not Unmixed.pipe3.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*Unmixed.pipe3.plugFlowPipe.vol_b.dynBal.nPorts+(if  not   Unmixed.pipe3.plugFlowPipe.vol_a.dynBal.use_mWat_flow then 1 else 0)+3*  Unmixed.pipe3.plugFlowPipe.vol_a.dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  913
Check of AixLib.Systems.HydraulicModules.Examples.Pump successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/Pump.mos\",", "AixLib.Systems.HydraulicModules.Examples.Pump.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.HydraulicModules.Examples.Pump\",", "AixLib.Systems.HydraulicModules.Examples.Pump.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.HydraulicModules.Examples.Pump.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.HydraulicModules.Examples.Pump\\\");\",", "AixLib.Systems.HydraulicModules.Examples.Pump.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.HydraulicModules.Examples.Pump.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.HydraulicModules.Examples.Pump.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/Pump.mos");
simulateModel("AixLib.Systems.HydraulicModules.Examples.Pump", tolerance=1e-6, outputInterval=5, stopTime=800, resultFile="AixLib.Systems.HydraulicModules.Examples.Pump");
Translation of AixLib.Systems.HydraulicModules.Examples.Pump
The DAE has 913 scalar unknowns and 913 scalar equations.
 
Statistics
 
Original Model
  Number of components: 195
  Variables: 2529
  Constants: 41 (41 scalars)
  Parameters: 1217 (1413 scalars)
  Unknowns: 1271 (951 scalars)
  Differentiated variables: 32 scalars
  Equations: 1016
  Nontrivial: 812
Translated Model
  Constants: 941 scalars
  Free parameters: 124 scalars
  Parameter depending: 521 scalars
  Outputs: 10 scalars
  Continuous time states: 25 scalars
  Time-varying variables: 225 scalars
  Alias variables: 594 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 2, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0}
  Sizes of nonlinear systems of equations: {10, 6, 6, 6}
  Sizes after manipulation of the nonlinear systems: {1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {10, 1}
    Sizes after manipulation of the nonlinear systems: {1, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {10, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {1, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
Unmixed.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
Unmixed.pipe1.plugFlowPipe.del.x
Unmixed.pipe1.plugFlowPipe.timDel.x
Unmixed.pipe1.plugFlowPipe.vol_a.dynBal.U
Unmixed.pipe1.plugFlowPipe.vol_b.dynBal.U
Unmixed.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
Unmixed.pipe2.plugFlowPipe.del.x
Unmixed.pipe2.plugFlowPipe.timDel.x
Unmixed.pipe2.plugFlowPipe.vol_a.dynBal.U
Unmixed.pipe2.plugFlowPipe.vol_b.dynBal.U
Unmixed.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
Unmixed.pipe3.plugFlowPipe.del.x
Unmixed.pipe3.plugFlowPipe.timDel.x
Unmixed.pipe3.plugFlowPipe.vol_a.dynBal.U
Unmixed.pipe3.plugFlowPipe.vol_b.dynBal.U
Unmixed.PT1_a1.y
Unmixed.PT1_a2.y
Unmixed.PT1_b1.y
Unmixed.PT1_b2.y
Unmixed.PumpInterface.pump.motSpe.y
Unmixed.PumpInterface.pump.vol.dynBal.U
Unmixed.senT_a1.T
Unmixed.senT_a2.T
Unmixed.senT_b1.T
Unmixed.senT_b2.T
Finished
Finished
 = true


Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.HydraulicModules.Examples.Pump.translation.log"); = true


rCheck = checkModel("AixLib.Systems.HydraulicModules.Examples.Injection");
Check of AixLib.Systems.HydraulicModules.Examples.Injection
The model has the same number of unknowns and equations: 3019
The model could not be deduced to be symbolically well-posed.
The model has
  2951+Injection.valve.vol.dynBal.nPorts+Injection.pipe1.simplePipe.vol[1].dynBal.nPorts  +Injection.pipe1.simplePipe.vol[2].dynBal.nPorts+Injection.pipe1.simplePipe.vol[3].dynBal.nPorts  +Injection.pipe2.simplePipe.vol[1].dynBal.nPorts+Injection.pipe2.simplePipe.vol[2].dynBal.nPorts  +Injection.pipe2.simplePipe.vol[3].dynBal.nPorts+Injection.pipe3.simplePipe.vol[1].dynBal.nPorts  +Injection.pipe3.simplePipe.vol[2].dynBal.nPorts+Injection.pipe3.simplePipe.vol[3].dynBal.nPorts  +Injection.pipe4.simplePipe.vol[1].dynBal.nPorts+Injection.pipe4.simplePipe.vol[2].dynBal.nPorts  +Injection.pipe4.simplePipe.vol[3].dynBal.nPorts+Injection.pipe5.simplePipe.vol[1].dynBal.nPorts  +Injection.pipe5.simplePipe.vol[2].dynBal.nPorts+Injection.pipe5.simplePipe.vol[3].dynBal.nPorts  +Injection.pipe6.simplePipe.vol[1].dynBal.nPorts+Injection.pipe6.simplePipe.vol[2].dynBal.nPorts  +Injection.pipe6.simplePipe.vol[3].dynBal.nPorts+Injection.pipe7.simplePipe.vol[1].dynBal.nPorts  +Injection.pipe7.simplePipe.vol[2].dynBal.nPorts+Injection.pipe7.simplePipe.vol[3].dynBal.nPorts  +Injection.pipe8.simplePipe.vol[1].dynBal.nPorts+Injection.pipe8.simplePipe.vol[2].dynBal.nPorts  +Injection.pipe8.simplePipe.vol[3].dynBal.nPorts+Injection.pipe9.simplePipe.vol[1].dynBal.nPorts  +Injection.pipe9.simplePipe.vol[2].dynBal.nPorts+Injection.pipe9.simplePipe.vol[3].dynBal.nPorts  +Injection.junc3v6.dynBal.nPorts+Injection.PumpInterface.pump.vol.dynBal.nPorts  +Injection.junc15j.dynBal.nPorts+Injection.juncjp6.dynBal.nPorts
scalar unknowns and
  2773+(if boundary.use_Xi_in then 1 else (if boundary.use_X_in then 0 else 1))+(  if  not boundary.use_p_in then 1 else 0)+2*boundary.nPorts+(if  not   boundary.use_T_in then 1 else 0)+(if boundary1.use_Xi_in then 1 else (if   boundary1.use_X_in then 0 else 1))+(if  not boundary1.use_p_in then 1 else 0)+2  *boundary1.nPorts+(if  not boundary1.use_T_in then 1 else 0)+(if  not   Injection.pipe1.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe1.simplePipe.vol[1].dynBal.nPorts+(if  not Injection.pipe1.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe1.simplePipe.vol[2].dynBal.nPorts+(if  not   Injection.pipe1.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe1.simplePipe.vol[3].dynBal.nPorts+(if  not Injection.pipe2.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe2.simplePipe.vol[1].dynBal.nPorts+(if  not   Injection.pipe2.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe2.simplePipe.vol[2].dynBal.nPorts+(if  not Injection.pipe2.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe2.simplePipe.vol[3].dynBal.nPorts+(if  not   Injection.pipe3.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe3.simplePipe.vol[1].dynBal.nPorts+(if  not Injection.pipe3.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe3.simplePipe.vol[2].dynBal.nPorts+(if  not   Injection.pipe3.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe3.simplePipe.vol[3].dynBal.nPorts+(if  not Injection.pipe4.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe4.simplePipe.vol[1].dynBal.nPorts+(if  not   Injection.pipe4.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe4.simplePipe.vol[2].dynBal.nPorts+(if  not Injection.pipe4.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe4.simplePipe.vol[3].dynBal.nPorts+(if  not   Injection.pipe5.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe5.simplePipe.vol[1].dynBal.nPorts+(if  not Injection.pipe5.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe5.simplePipe.vol[2].dynBal.nPorts+(if  not   Injection.pipe5.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe5.simplePipe.vol[3].dynBal.nPorts+(if  not Injection.pipe6.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe6.simplePipe.vol[1].dynBal.nPorts+(if  not   Injection.pipe6.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe6.simplePipe.vol[2].dynBal.nPorts+(if  not Injection.pipe6.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe6.simplePipe.vol[3].dynBal.nPorts+(if  not   Injection.pipe7.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe7.simplePipe.vol[1].dynBal.nPorts+(if  not Injection.pipe7.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe7.simplePipe.vol[2].dynBal.nPorts+(if  not   Injection.pipe7.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe7.simplePipe.vol[3].dynBal.nPorts+(if  not Injection.pipe8.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe8.simplePipe.vol[1].dynBal.nPorts+(if  not   Injection.pipe8.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe8.simplePipe.vol[2].dynBal.nPorts+(if  not Injection.pipe8.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe8.simplePipe.vol[3].dynBal.nPorts+(if  not   Injection.pipe9.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe9.simplePipe.vol[1].dynBal.nPorts+(if  not Injection.pipe9.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe9.simplePipe.vol[2].dynBal.nPorts+(if  not   Injection.pipe9.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe9.simplePipe.vol[3].dynBal.nPorts+(if  not Injection.junc3v6.dynBal.use_mWat_flow   then 1 else 0)+3*Injection.junc3v6.dynBal.nPorts+(if  not Injection.PumpInterface.pump.vol.dynBal.use_mWat_flow   then 1 else 0)+3*Injection.PumpInterface.pump.vol.dynBal.nPorts+(if  not   Injection.junc15j.dynBal.use_mWat_flow then 1 else 0)+3*Injection.junc15j.dynBal.nPorts  +(if  not Injection.juncjp6.dynBal.use_mWat_flow then 1 else 0)+3*  Injection.juncjp6.dynBal.nPorts+(if  not Injection.valve.vol.dynBal.use_mWat_flow   then 1 else 0)+3*Injection.valve.vol.dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  3019
Check of AixLib.Systems.HydraulicModules.Examples.Injection successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/Injection.mos\",", "AixLib.Systems.HydraulicModules.Examples.Injection.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.HydraulicModules.Examples.Injection\",", "AixLib.Systems.HydraulicModules.Examples.Injection.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.HydraulicModules.Examples.Injection.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.HydraulicModules.Examples.Injection\\\");\",", "AixLib.Systems.HydraulicModules.Examples.Injection.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.HydraulicModules.Examples.Injection.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.HydraulicModules.Examples.Injection.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/Injection.mos");
simulateModel("AixLib.Systems.HydraulicModules.Examples.Injection", tolerance=1e-6, stopTime=800, resultFile="AixLib.Systems.HydraulicModules.Examples.Injection");
Translation of AixLib.Systems.HydraulicModules.Examples.Injection
The DAE has 3019 scalar unknowns and 3019 scalar equations.
 
Statistics
 
Original Model
  Number of components: 665
  Variables: 8149
  Constants: 156 (156 scalars)
  Parameters: 3926 (4064 scalars)
  Unknowns: 4067 (3138 scalars)
  Differentiated variables: 110 scalars
  Equations: 2959
  Nontrivial: 2264
Translated Model
  Constants: 2988 scalars
  Free parameters: 194 scalars
  Parameter depending: 1394 scalars
  Outputs: 13 scalars
  Continuous time states: 78 scalars
  Time-varying variables: 669 scalars
  Alias variables: 2113 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {27}
  Sizes after manipulation of the nonlinear systems: {3}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {27, 1}
    Sizes after manipulation of the nonlinear systems: {4, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {27, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {4, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
Injection.junc3v6.dynBal.U
Injection.junc15j.dynBal.U
Injection.juncjp6.dynBal.U
Injection.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe1.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe1.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe1.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe1.simplePipe.vol[1].dynBal.U
Injection.pipe1.simplePipe.vol[2].dynBal.U
Injection.pipe1.simplePipe.vol[3].dynBal.U
Injection.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe2.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe2.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe2.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe2.simplePipe.vol[1].dynBal.U
Injection.pipe2.simplePipe.vol[2].dynBal.U
Injection.pipe2.simplePipe.vol[3].dynBal.U
Injection.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe3.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe3.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe3.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe3.simplePipe.vol[1].dynBal.U
Injection.pipe3.simplePipe.vol[2].dynBal.U
Injection.pipe3.simplePipe.vol[3].dynBal.U
Injection.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe4.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe4.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe4.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe4.simplePipe.vol[1].dynBal.U
Injection.pipe4.simplePipe.vol[2].dynBal.U
Injection.pipe4.simplePipe.vol[3].dynBal.U
Injection.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe5.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe5.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe5.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe5.simplePipe.vol[1].dynBal.U
Injection.pipe5.simplePipe.vol[2].dynBal.U
Injection.pipe5.simplePipe.vol[3].dynBal.U
Injection.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe6.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe6.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe6.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe6.simplePipe.vol[1].dynBal.U
Injection.pipe6.simplePipe.vol[2].dynBal.U
Injection.pipe6.simplePipe.vol[3].dynBal.U
Injection.pipe7.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe7.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe7.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe7.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe7.simplePipe.vol[1].dynBal.U
Injection.pipe7.simplePipe.vol[2].dynBal.U
Injection.pipe7.simplePipe.vol[3].dynBal.U
Injection.pipe8.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe8.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe8.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe8.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe8.simplePipe.vol[1].dynBal.U
Injection.pipe8.simplePipe.vol[2].dynBal.U
Injection.pipe8.simplePipe.vol[3].dynBal.U
Injection.pipe9.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe9.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe9.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe9.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe9.simplePipe.vol[1].dynBal.U
Injection.pipe9.simplePipe.vol[2].dynBal.U
Injection.pipe9.simplePipe.vol[3].dynBal.U
Injection.PT1_a1.y
Injection.PT1_a2.y
Injection.PT1_b1.y
Injection.PT1_b2.y
Injection.PumpInterface.pump.motSpe.y
Injection.PumpInterface.pump.vol.dynBal.U
Injection.senT_a1.T
Injection.senT_a2.T
Injection.senT_b1.T
Injection.senT_b2.T
Injection.valve.actPos.y
Injection.valve.vol.dynBal.U
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.HydraulicModules.Examples.Injection.translation.log"); = true


rCheck = checkModel("AixLib.Systems.ModularAHU.Validation.AHU2_Cooler");
Check of AixLib.Systems.ModularAHU.Validation.AHU2_Cooler
The model has the same number of unknowns and equations: 2424
The model could not be deduced to be symbolically well-posed.
The model has
  2345+max([size(combiTimeTable.columns, 1); size(combiTimeTable.offset, 1)])+  registerModule.hydraulicModule.valve.vol.dynBal.nPorts+registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.junc456.dynBal.nPorts+2*size(registerModule.hydraulicModule.PumpInterface.physics.maxMinTable.columns,   1)+2*registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n1+2*  registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.n+  registerModule.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts+2*  registerModule.dynamicHX.vol1[1].dynBal.nPorts+2*registerModule.dynamicHX.vol1[2].dynBal.nPorts  +2*registerModule.dynamicHX.vol1[3].dynBal.nPorts+2*registerModule.dynamicHX.vol1[4].dynBal.nPorts  +registerModule.dynamicHX.vol2[1].dynBal.nPorts+registerModule.dynamicHX.vol2[2].dynBal.nPorts  +registerModule.dynamicHX.vol2[3].dynBal.nPorts+registerModule.dynamicHX.vol2[4].dynBal.nPorts
scalar unknowns and
  2197+(if boundaryWaterSource.use_Xi_in then 1 else (if boundaryWaterSource.use_X_in   then 0 else 1))+(if  not boundaryWaterSource.use_p_in then 1 else 0)+2*  boundaryWaterSource.nPorts+(if  not boundaryWaterSource.use_T_in then 1 else 0)  +(if boundaryWaterSink.use_Xi_in then 1 else (if boundaryWaterSink.use_X_in   then 0 else 1))+(if  not boundaryWaterSink.use_p_in then 1 else 0)+2*  boundaryWaterSink.nPorts+(if  not boundaryWaterSink.use_T_in then 1 else 0)+(  if boundaryAirSource.use_Xi_in then 2 else (if boundaryAirSource.use_X_in   then 1 else 3))+3*boundaryAirSource.nPorts+(if  not boundaryAirSource.use_m_flow_in   then 1 else 0)+(if  not boundaryAirSource.use_T_in then 1 else 0)+(if   boundaryAirSink.use_Xi_in then 2 else (if boundaryAirSink.use_X_in then 1   else 3))+3*boundaryAirSink.nPorts+(if  not boundaryAirSink.use_p_in then 1   else 0)+(if  not boundaryAirSink.use_T_in then 1 else 0)+max([size(  combiTimeTable.columns, 1); size(combiTimeTable.offset, 1)])+2*size(  registerModule.hydraulicModule.PumpInterface.physics.maxMinTable.columns, 1)+  registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n1+  registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.n+(if    not registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.junc456.dynBal.use_mWat_flow then 1   else 0)+3*registerModule.hydraulicModule.junc456.dynBal.nPorts+(if  not   registerModule.hydraulicModule.PumpInterface.physics.vol.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts  +(if  not registerModule.dynamicHX.vol1[1].dynBal.use_mWat_flow then 1 else 0)  +5*registerModule.dynamicHX.vol1[1].dynBal.nPorts+(if  not registerModule.dynamicHX.vol1[2].dynBal.use_mWat_flow   then 1 else 0)+5*registerModule.dynamicHX.vol1[2].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol1[3].dynBal.use_mWat_flow then 1 else 0)+5*  registerModule.dynamicHX.vol1[3].dynBal.nPorts+(if  not registerModule.dynamicHX.vol1[4].dynBal.use_mWat_flow   then 1 else 0)+5*registerModule.dynamicHX.vol1[4].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol2[1].dynBal.use_mWat_flow then 1 else 0)+3*  registerModule.dynamicHX.vol2[1].dynBal.nPorts+(if  not registerModule.dynamicHX.vol2[2].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.dynamicHX.vol2[2].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol2[3].dynBal.use_mWat_flow then 1 else 0)+3*  registerModule.dynamicHX.vol2[3].dynBal.nPorts+(if  not registerModule.dynamicHX.vol2[4].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.dynamicHX.vol2[4].dynBal.nPorts+(if  not   registerModule.hydraulicModule.valve.vol.dynBal.use_mWat_flow then 1 else 0)+3  *registerModule.hydraulicModule.valve.vol.dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  2424
Check of AixLib.Systems.ModularAHU.Validation.AHU2_Cooler successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Validation/AHU2_Cooler.mos\",", "AixLib.Systems.ModularAHU.Validation.AHU2_Cooler.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.ModularAHU.Validation.AHU2_Cooler\",", "AixLib.Systems.ModularAHU.Validation.AHU2_Cooler.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.ModularAHU.Validation.AHU2_Cooler.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.ModularAHU.Validation.AHU2_Cooler\\\");\",", "AixLib.Systems.ModularAHU.Validation.AHU2_Cooler.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.ModularAHU.Validation.AHU2_Cooler.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.ModularAHU.Validation.AHU2_Cooler.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Validation/AHU2_Cooler.mos");
simulateModel("AixLib.Systems.ModularAHU.Validation.AHU2_Cooler", tolerance=1e-6, outputInterval=1, stopTime=2700, resultFile="AixLib.Systems.ModularAHU.Validation.AHU2_Cooler");
Translation of AixLib.Systems.ModularAHU.Validation.AHU2_Cooler
The DAE has 2424 scalar unknowns and 2424 scalar equations.
 
Statistics
 
Original Model
  Number of components: 465
  Variables: 6173
  Constants: 122 (122 scalars)
  Parameters: 2807 (41197 scalars)
  Unknowns: 3244 (2527 scalars)
  Differentiated variables: 87 scalars
  Equations: 2516
  Nontrivial: 1952
Translated Model
  Constants: 2116 scalars
  Free parameters: 19389 scalars
  Parameter depending: 20132 scalars
  Outputs: 17 scalars
  Continuous time states: 63 scalars
  Time-varying variables: 631 scalars
  Alias variables: 1578 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 2, 2, 2, 2, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {18, 6, 6, 6, 6, 6, 6}
  Sizes after manipulation of the nonlinear systems: {2, 1, 1, 1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {18, 1}
    Sizes after manipulation of the nonlinear systems: {4, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {18, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
registerModule.dynamicHX.heatCapacitor[1].T
registerModule.dynamicHX.heatCapacitor[2].T
registerModule.dynamicHX.heatCapacitor[3].T
registerModule.dynamicHX.heatCapacitor[4].T
registerModule.dynamicHX.vol1[1].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[1].dynBal.U
registerModule.dynamicHX.vol1[2].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[2].dynBal.U
registerModule.dynamicHX.vol1[3].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[3].dynBal.U
registerModule.dynamicHX.vol1[4].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[4].dynBal.U
registerModule.dynamicHX.vol2[1].dynBal.U
registerModule.dynamicHX.vol2[2].dynBal.U
registerModule.dynamicHX.vol2[3].dynBal.U
registerModule.dynamicHX.vol2[4].dynBal.U
registerModule.hydraulicModule.junc456.dynBal.U
registerModule.hydraulicModule.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe1.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe1.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe2.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe2.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe3.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe3.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe4.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe4.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe5.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe5.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe6.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe6.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.PT1_a1.y
registerModule.hydraulicModule.PT1_a2.y
registerModule.hydraulicModule.PT1_b1.y
registerModule.hydraulicModule.PT1_b2.y
registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.x[1]
registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.x[2]
registerModule.hydraulicModule.senT_a1.T
registerModule.hydraulicModule.senT_a2.T
registerModule.hydraulicModule.senT_b1.T
registerModule.hydraulicModule.senT_b2.T
registerModule.hydraulicModule.valve.actPos.y
registerModule.hydraulicModule.valve.vol.dynBal.U
registerModule.PT1_airIn.y
registerModule.PT1_airOut.y
registerModule.senT_airIn.T
registerModule.senT_airOut.T
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.ModularAHU.Validation.AHU2_Cooler.translation.log"); = true


rCheck = checkModel("AixLib.Systems.ModularAHU.Examples.DemandControlledAHU");
Check of AixLib.Systems.ModularAHU.Examples.DemandControlledAHU
The following parameters have enable=false and don't have any value, only a start value:
    thermalZone.eqAirTempWall.TGro(start = 288.15)
 
The model has the same number of unknowns and equations: 11508
The model could not be deduced to be symbolically well-posed.
The model has
  11035+genericAHU.preheater.hydraulicModule.valve.vol.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.junc456.dynBal.nPorts+2*size(  genericAHU.preheater.hydraulicModule.PumpInterface.physics.maxMinTable.columns,   1)+2*genericAHU.preheater.hydraulicModule.PumpInterface.physics.deMultiplex2.n1  +2*genericAHU.preheater.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  genericAHU.preheater.hydraulicModule.PumpInterface.physics.criticalDamping.n+  genericAHU.preheater.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts+3  *genericAHU.preheater.dynamicHX.vol1[1].dynBal.nPorts+3*genericAHU.preheater.dynamicHX.vol1[2].dynBal.nPorts  +3*genericAHU.preheater.dynamicHX.vol1[3].dynBal.nPorts+3*genericAHU.preheater.dynamicHX.vol1[4].dynBal.nPorts  +3*genericAHU.preheater.dynamicHX.vol1[5].dynBal.nPorts+genericAHU.preheater.dynamicHX.vol2[1].dynBal.nPorts  +genericAHU.preheater.dynamicHX.vol2[2].dynBal.nPorts+genericAHU.preheater.dynamicHX.vol2[3].dynBal.nPorts  +genericAHU.preheater.dynamicHX.vol2[4].dynBal.nPorts+genericAHU.preheater.dynamicHX.vol2[5].dynBal.nPorts  +genericAHU.cooler.hydraulicModule.valve.vol.dynBal.nPorts+genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.cooler.hydraulicModule.junc456.dynBal.nPorts+2*size(  genericAHU.cooler.hydraulicModule.PumpInterface.physics.maxMinTable.columns, 1)  +2*genericAHU.cooler.hydraulicModule.PumpInterface.physics.deMultiplex2.n1+2*  genericAHU.cooler.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  genericAHU.cooler.hydraulicModule.PumpInterface.physics.criticalDamping.n+  genericAHU.cooler.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts+3*  genericAHU.cooler.dynamicHX.vol1[1].dynBal.nPorts+3*genericAHU.cooler.dynamicHX.vol1[2].dynBal.nPorts  +3*genericAHU.cooler.dynamicHX.vol1[3].dynBal.nPorts+3*genericAHU.cooler.dynamicHX.vol1[4].dynBal.nPorts  +genericAHU.cooler.dynamicHX.vol2[1].dynBal.nPorts+genericAHU.cooler.dynamicHX.vol2[2].dynBal.nPorts  +genericAHU.cooler.dynamicHX.vol2[3].dynBal.nPorts+genericAHU.cooler.dynamicHX.vol2[4].dynBal.nPorts  +genericAHU.heater.hydraulicModule.valve.vol.dynBal.nPorts+genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts+  genericAHU.heater.hydraulicModule.junc456.dynBal.nPorts+2*size(  genericAHU.heater.hydraulicModule.PumpInterface.physics.maxMinTable.columns, 1)  +2*genericAHU.heater.hydraulicModule.PumpInterface.physics.deMultiplex2.n1+2*  genericAHU.heater.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  genericAHU.heater.hydraulicModule.PumpInterface.physics.criticalDamping.n+  genericAHU.heater.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts+3*  genericAHU.heater.dynamicHX.vol1[1].dynBal.nPorts+3*genericAHU.heater.dynamicHX.vol1[2].dynBal.nPorts  +3*genericAHU.heater.dynamicHX.vol1[3].dynBal.nPorts+3*genericAHU.heater.dynamicHX.vol1[4].dynBal.nPorts  +genericAHU.heater.dynamicHX.vol2[1].dynBal.nPorts+genericAHU.heater.dynamicHX.vol2[2].dynBal.nPorts  +genericAHU.heater.dynamicHX.vol2[3].dynBal.nPorts+genericAHU.heater.dynamicHX.vol2[4].dynBal.nPorts  +3*genericAHU.dynamicHX.vol1[1].dynBal.nPorts+3*genericAHU.dynamicHX.vol1[2].dynBal.nPorts  +3*genericAHU.dynamicHX.vol2[1].dynBal.nPorts+3*genericAHU.dynamicHX.vol2[2].dynBal.nPorts  +3*genericAHU.fanSup.vol.dynBal.nPorts+3*genericAHU.fanRet.vol.dynBal.nPorts+3  *genericAHU.humidifier.vol.dynBal.nPorts+29*thermalZone.zoneParam.nOrientations  +3*thermalZone.ROM.volMoiAir.dynBal.nPorts+thermalZone.humanTotHeaDependent.productHeatOutput.nu  +thermalZone.humanTotHeaDependent.productMoistureOutput.nu+thermalZone.machinesSenHea.productHeatOutput.nu  +thermalZone.lights.productHeatOutput.nu+thermalZone.ventCont.optimalTemp.nin+  thermalZone.ventCont.optimalTemp.nout+thermalZone.ventCont.dEMA.nout+  thermalZone.ventCont.dEMA.ExpAVG.n+thermalZone.ventCont.dEMA.ExpAVG1.n+  thermalZone.SumQLat2_flow.nu+max([size(internalGains.columns, 1); size(  internalGains.offset, 1)])
scalar unknowns and
  10562+size(genericAHU.preheater.hydraulicModule.PumpInterface.physics.maxMinTable.columns,   1)+genericAHU.preheater.hydraulicModule.PumpInterface.physics.deMultiplex2.n1  +genericAHU.preheater.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  genericAHU.preheater.hydraulicModule.PumpInterface.physics.criticalDamping.n-1  +size(genericAHU.cooler.hydraulicModule.PumpInterface.physics.maxMinTable.columns,   1)+genericAHU.cooler.hydraulicModule.PumpInterface.physics.deMultiplex2.n1+  genericAHU.cooler.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  genericAHU.cooler.hydraulicModule.PumpInterface.physics.criticalDamping.n-1+  size(genericAHU.heater.hydraulicModule.PumpInterface.physics.maxMinTable.columns,   1)+genericAHU.heater.hydraulicModule.PumpInterface.physics.deMultiplex2.n1+  genericAHU.heater.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  genericAHU.heater.hydraulicModule.PumpInterface.physics.criticalDamping.n-1+(  if  not genericAHU.humidifier.steamHumidifier then 1 else 0)+14*  thermalZone.zoneParam.nOrientations+(if SourcePreheater.use_Xi_in then 1 else   (if SourcePreheater.use_X_in then 0 else 1))+(if  not SourcePreheater.use_p_in   then 1 else 0)+SourcePreheater.nPorts+(if  not SourcePreheater.use_T_in then 1   else 0)+SourcePreheater.nPorts+(if SinkPreheater.use_Xi_in then 1 else (if   SinkPreheater.use_X_in then 0 else 1))+(if  not SinkPreheater.use_p_in then 1   else 0)+SinkPreheater.nPorts+(if  not SinkPreheater.use_T_in then 1 else 0)+  SinkPreheater.nPorts+(if SourceCooler.use_Xi_in then 1 else (if   SourceCooler.use_X_in then 0 else 1))+(if  not SourceCooler.use_p_in then 1   else 0)+SourceCooler.nPorts+(if  not SourceCooler.use_T_in then 1 else 0)+  SourceCooler.nPorts+(if SinkCooler.use_Xi_in then 1 else (if SinkCooler.use_X_in   then 0 else 1))+(if  not SinkCooler.use_p_in then 1 else 0)+SinkCooler.nPorts  +(if  not SinkCooler.use_T_in then 1 else 0)+SinkCooler.nPorts+(if   SourceHeater.use_Xi_in then 1 else (if SourceHeater.use_X_in then 0 else 1))+(  if  not SourceHeater.use_p_in then 1 else 0)+SourceHeater.nPorts+(if  not   SourceHeater.use_T_in then 1 else 0)+SourceHeater.nPorts+(if SinkHeater.use_Xi_in   then 1 else (if SinkHeater.use_X_in then 0 else 1))+(if  not SinkHeater.use_p_in   then 1 else 0)+SinkHeater.nPorts+(if  not SinkHeater.use_T_in then 1 else 0)+  SinkHeater.nPorts+(if  not out.x_pTphi.use_p_in then 1 else 0)+(if  not   out.use_C_in then 1 else 0)+3*out.nPorts+(if boundaryExhaustAir.use_Xi_in   then 2 else (if boundaryExhaustAir.use_X_in then 1 else 3))+(if  not   boundaryExhaustAir.use_C_in then 1 else 0)+2*boundaryExhaustAir.nPorts+(if    not boundaryExhaustAir.use_p_in then 1 else 0)+boundaryExhaustAir.nPorts+(if    not boundaryExhaustAir.use_T_in then 1 else 0)+boundaryExhaustAir.nPorts+(if   weaDat.pAtmSou == AixLib.BoundaryConditions.Types.DataSource.Parameter then 1   else 0)+(if weaDat.TDewPoiSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TDryBulSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.TBlaSkySou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.relHumSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.opaSkyCovSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.ceiHeiSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.totSkyCovSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winSpeSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.winDirSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HInfHorSou == AixLib.BoundaryConditions.Types.DataSource.  Parameter then 1 else 0)+(if weaDat.HSou == AixLib.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HDifHor then 2 else 1)+(if weaDat.HSou == AixLib.BoundaryConditions.Types.RadiationDataSource.  Input_HDirNor_HGloHor then 2 else 1)+(if weaDat.HSou == AixLib.BoundaryConditions.Types.RadiationDataSource.  Input_HGloHor_HDifHor then 2 else 1)+max([size(internalGains.columns, 1); size  (internalGains.offset, 1)])+(if  not genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.junc456.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.junc456.dynBal.nPorts+2*  genericAHU.preheater.hydraulicModule.junc456.dynBal.nPorts+(if  not   genericAHU.preheater.hydraulicModule.PumpInterface.physics.vol.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts  +(if  not genericAHU.preheater.dynamicHX.vol1[1].dynBal.use_mWat_flow then 1   else 0)+(if  not genericAHU.preheater.dynamicHX.vol1[1].dynBal.use_C_flow   then 1 else 0)+3*genericAHU.preheater.dynamicHX.vol1[1].dynBal.nPorts+4*  genericAHU.preheater.dynamicHX.vol1[1].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol1[2].dynBal.use_mWat_flow   then 1 else 0)+(if  not genericAHU.preheater.dynamicHX.vol1[2].dynBal.use_C_flow   then 1 else 0)+3*genericAHU.preheater.dynamicHX.vol1[2].dynBal.nPorts+4*  genericAHU.preheater.dynamicHX.vol1[2].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol1[3].dynBal.use_mWat_flow   then 1 else 0)+(if  not genericAHU.preheater.dynamicHX.vol1[3].dynBal.use_C_flow   then 1 else 0)+3*genericAHU.preheater.dynamicHX.vol1[3].dynBal.nPorts+4*  genericAHU.preheater.dynamicHX.vol1[3].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol1[4].dynBal.use_mWat_flow   then 1 else 0)+(if  not genericAHU.preheater.dynamicHX.vol1[4].dynBal.use_C_flow   then 1 else 0)+3*genericAHU.preheater.dynamicHX.vol1[4].dynBal.nPorts+4*  genericAHU.preheater.dynamicHX.vol1[4].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol1[5].dynBal.use_mWat_flow   then 1 else 0)+(if  not genericAHU.preheater.dynamicHX.vol1[5].dynBal.use_C_flow   then 1 else 0)+3*genericAHU.preheater.dynamicHX.vol1[5].dynBal.nPorts+4*  genericAHU.preheater.dynamicHX.vol1[5].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol2[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.dynamicHX.vol2[1].dynBal.nPorts+2*  genericAHU.preheater.dynamicHX.vol2[1].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol2[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.dynamicHX.vol2[2].dynBal.nPorts+2*  genericAHU.preheater.dynamicHX.vol2[2].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol2[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.dynamicHX.vol2[3].dynBal.nPorts+2*  genericAHU.preheater.dynamicHX.vol2[3].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol2[4].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.dynamicHX.vol2[4].dynBal.nPorts+2*  genericAHU.preheater.dynamicHX.vol2[4].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol2[5].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.dynamicHX.vol2[5].dynBal.nPorts+2*  genericAHU.preheater.dynamicHX.vol2[5].dynBal.nPorts+(if  not genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.junc456.dynBal.use_mWat_flow then 1   else 0)+genericAHU.cooler.hydraulicModule.junc456.dynBal.nPorts+2*  genericAHU.cooler.hydraulicModule.junc456.dynBal.nPorts+(if  not   genericAHU.cooler.hydraulicModule.PumpInterface.physics.vol.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts+(  if  not genericAHU.cooler.dynamicHX.vol1[1].dynBal.use_mWat_flow then 1 else 0)  +(if  not genericAHU.cooler.dynamicHX.vol1[1].dynBal.use_C_flow then 1 else 0)  +3*genericAHU.cooler.dynamicHX.vol1[1].dynBal.nPorts+4*genericAHU.cooler.dynamicHX.vol1[1].dynBal.nPorts  +(if  not genericAHU.cooler.dynamicHX.vol1[2].dynBal.use_mWat_flow then 1   else 0)+(if  not genericAHU.cooler.dynamicHX.vol1[2].dynBal.use_C_flow then 1   else 0)+3*genericAHU.cooler.dynamicHX.vol1[2].dynBal.nPorts+4*  genericAHU.cooler.dynamicHX.vol1[2].dynBal.nPorts+(if  not genericAHU.cooler.dynamicHX.vol1[3].dynBal.use_mWat_flow   then 1 else 0)+(if  not genericAHU.cooler.dynamicHX.vol1[3].dynBal.use_C_flow   then 1 else 0)+3*genericAHU.cooler.dynamicHX.vol1[3].dynBal.nPorts+4*  genericAHU.cooler.dynamicHX.vol1[3].dynBal.nPorts+(if  not genericAHU.cooler.dynamicHX.vol1[4].dynBal.use_mWat_flow   then 1 else 0)+(if  not genericAHU.cooler.dynamicHX.vol1[4].dynBal.use_C_flow   then 1 else 0)+3*genericAHU.cooler.dynamicHX.vol1[4].dynBal.nPorts+4*  genericAHU.cooler.dynamicHX.vol1[4].dynBal.nPorts+(if  not genericAHU.cooler.dynamicHX.vol2[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.dynamicHX.vol2[1].dynBal.nPorts+2*  genericAHU.cooler.dynamicHX.vol2[1].dynBal.nPorts+(if  not genericAHU.cooler.dynamicHX.vol2[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.dynamicHX.vol2[2].dynBal.nPorts+2*  genericAHU.cooler.dynamicHX.vol2[2].dynBal.nPorts+(if  not genericAHU.cooler.dynamicHX.vol2[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.dynamicHX.vol2[3].dynBal.nPorts+2*  genericAHU.cooler.dynamicHX.vol2[3].dynBal.nPorts+(if  not genericAHU.cooler.dynamicHX.vol2[4].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.dynamicHX.vol2[4].dynBal.nPorts+2*  genericAHU.cooler.dynamicHX.vol2[4].dynBal.nPorts+(if  not genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.junc456.dynBal.use_mWat_flow then 1   else 0)+genericAHU.heater.hydraulicModule.junc456.dynBal.nPorts+2*  genericAHU.heater.hydraulicModule.junc456.dynBal.nPorts+(if  not   genericAHU.heater.hydraulicModule.PumpInterface.physics.vol.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts+(  if  not genericAHU.heater.dynamicHX.vol1[1].dynBal.use_mWat_flow then 1 else 0)  +(if  not genericAHU.heater.dynamicHX.vol1[1].dynBal.use_C_flow then 1 else 0)  +3*genericAHU.heater.dynamicHX.vol1[1].dynBal.nPorts+4*genericAHU.heater.dynamicHX.vol1[1].dynBal.nPorts  +(if  not genericAHU.heater.dynamicHX.vol1[2].dynBal.use_mWat_flow then 1   else 0)+(if  not genericAHU.heater.dynamicHX.vol1[2].dynBal.use_C_flow then 1   else 0)+3*genericAHU.heater.dynamicHX.vol1[2].dynBal.nPorts+4*  genericAHU.heater.dynamicHX.vol1[2].dynBal.nPorts+(if  not genericAHU.heater.dynamicHX.vol1[3].dynBal.use_mWat_flow   then 1 else 0)+(if  not genericAHU.heater.dynamicHX.vol1[3].dynBal.use_C_flow   then 1 else 0)+3*genericAHU.heater.dynamicHX.vol1[3].dynBal.nPorts+4*  genericAHU.heater.dynamicHX.vol1[3].dynBal.nPorts+(if  not genericAHU.heater.dynamicHX.vol1[4].dynBal.use_mWat_flow   then 1 else 0)+(if  not genericAHU.heater.dynamicHX.vol1[4].dynBal.use_C_flow   then 1 else 0)+3*genericAHU.heater.dynamicHX.vol1[4].dynBal.nPorts+4*  genericAHU.heater.dynamicHX.vol1[4].dynBal.nPorts+(if  not genericAHU.heater.dynamicHX.vol2[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.dynamicHX.vol2[1].dynBal.nPorts+2*  genericAHU.heater.dynamicHX.vol2[1].dynBal.nPorts+(if  not genericAHU.heater.dynamicHX.vol2[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.dynamicHX.vol2[2].dynBal.nPorts+2*  genericAHU.heater.dynamicHX.vol2[2].dynBal.nPorts+(if  not genericAHU.heater.dynamicHX.vol2[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.dynamicHX.vol2[3].dynBal.nPorts+2*  genericAHU.heater.dynamicHX.vol2[3].dynBal.nPorts+(if  not genericAHU.heater.dynamicHX.vol2[4].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.dynamicHX.vol2[4].dynBal.nPorts+2*  genericAHU.heater.dynamicHX.vol2[4].dynBal.nPorts+(if  not genericAHU.dynamicHX.vol1[1].dynBal.use_mWat_flow   then 1 else 0)+(if  not genericAHU.dynamicHX.vol1[1].dynBal.use_C_flow then 1   else 0)+3*genericAHU.dynamicHX.vol1[1].dynBal.nPorts+4*genericAHU.dynamicHX.vol1[1].dynBal.nPorts  +(if  not genericAHU.dynamicHX.vol1[2].dynBal.use_mWat_flow then 1 else 0)+(  if  not genericAHU.dynamicHX.vol1[2].dynBal.use_C_flow then 1 else 0)+3*  genericAHU.dynamicHX.vol1[2].dynBal.nPorts+4*genericAHU.dynamicHX.vol1[2].dynBal.nPorts  +(if  not genericAHU.dynamicHX.vol2[1].dynBal.use_mWat_flow then 1 else 0)+(  if  not genericAHU.dynamicHX.vol2[1].use_C_flow then 1 else 0)+3*  genericAHU.dynamicHX.vol2[1].dynBal.nPorts+4*genericAHU.dynamicHX.vol2[1].dynBal.nPorts  +(if  not genericAHU.dynamicHX.vol2[2].dynBal.use_mWat_flow then 1 else 0)+(  if  not genericAHU.dynamicHX.vol2[2].use_C_flow then 1 else 0)+3*  genericAHU.dynamicHX.vol2[2].dynBal.nPorts+4*genericAHU.dynamicHX.vol2[2].dynBal.nPorts  +(if  not genericAHU.fanSup.vol.dynBal.use_mWat_flow then 1 else 0)+(if  not   genericAHU.fanSup.vol.use_C_flow then 1 else 0)+3*genericAHU.fanSup.vol.dynBal.nPorts  +4*genericAHU.fanSup.vol.dynBal.nPorts+(if  not genericAHU.fanRet.vol.dynBal.use_mWat_flow   then 1 else 0)+(if  not genericAHU.fanRet.vol.use_C_flow then 1 else 0)+3*  genericAHU.fanRet.vol.dynBal.nPorts+4*genericAHU.fanRet.vol.dynBal.nPorts+(if    not genericAHU.humidifier.vol.use_C_flow then 1 else 0)+3*genericAHU.humidifier.vol.dynBal.nPorts  +4*genericAHU.humidifier.vol.dynBal.nPorts+(if  not thermalZone.eqAirTempWall.TGroundFromInput   then 1 else 0)+thermalZone.zoneParam.nOrientations+2*thermalZone.zoneParam.nOrientations  +thermalZone.ventCont.optimalTemp.nout+thermalZone.ventCont.dEMA.ExpAVG.n-1+  thermalZone.ventCont.dEMA.ExpAVG1.n-1+(if  not thermalZone.x_pTphi.use_p_in   then 1 else 0)+(if  not genericAHU.preheater.hydraulicModule.valve.vol.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.valve.vol.dynBal.nPorts+2  *genericAHU.preheater.hydraulicModule.valve.vol.dynBal.nPorts+(if  not   genericAHU.cooler.hydraulicModule.valve.vol.dynBal.use_mWat_flow then 1 else 0)  +genericAHU.cooler.hydraulicModule.valve.vol.dynBal.nPorts+2*genericAHU.cooler.hydraulicModule.valve.vol.dynBal.nPorts  +(if  not genericAHU.heater.hydraulicModule.valve.vol.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.valve.vol.dynBal.nPorts+2*  genericAHU.heater.hydraulicModule.valve.vol.dynBal.nPorts+(if  not   thermalZone.use_C_flow then 1 else 0)+3*thermalZone.ROM.volMoiAir.dynBal.nPorts  +4*thermalZone.ROM.volMoiAir.dynBal.nPorts+size(genericAHU.cooler.hydraulicModule.PumpInterface.physics.maxMinTable.columns,   1)+size(genericAHU.heater.hydraulicModule.PumpInterface.physics.maxMinTable.columns,   1)+size(genericAHU.preheater.hydraulicModule.PumpInterface.physics.maxMinTable.columns,   1)+thermalZone.zoneParam.nOrientations+thermalZone.zoneParam.nOrientations
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  11508
Check of AixLib.Systems.ModularAHU.Examples.DemandControlledAHU successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Examples/DemandControlledAHU.mos\",", "AixLib.Systems.ModularAHU.Examples.DemandControlledAHU.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.ModularAHU.Examples.DemandControlledAHU\",", "AixLib.Systems.ModularAHU.Examples.DemandControlledAHU.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.ModularAHU.Examples.DemandControlledAHU.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.ModularAHU.Examples.DemandControlledAHU\\\");\",", "AixLib.Systems.ModularAHU.Examples.DemandControlledAHU.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.ModularAHU.Examples.DemandControlledAHU.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.ModularAHU.Examples.DemandControlledAHU.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Examples/DemandControlledAHU.mos");
simulateModel("AixLib.Systems.ModularAHU.Examples.DemandControlledAHU", tolerance=1e-5, startTime=5961600, stopTime=6566400, outputInterval=120, resultFile="AixLib.Systems.ModularAHU.Examples.DemandControlledAHU");
Translation of AixLib.Systems.ModularAHU.Examples.DemandControlledAHU
The DAE has 11508 scalar unknowns and 11508 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  genericAHU.preheater.dynamicHX.vol1[2].p_start = genericAHU.preheater.dynamicHX.p1_start;
  genericAHU.preheater.dynamicHX.vol1[3].p_start = genericAHU.preheater.dynamicHX.p1_start;
  genericAHU.preheater.dynamicHX.vol1[4].p_start = genericAHU.preheater.dynamicHX.p1_start;
  genericAHU.preheater.dynamicHX.vol1[5].p_start = genericAHU.preheater.dynamicHX.p1_start;
  genericAHU.cooler.dynamicHX.vol1[2].p_start = genericAHU.cooler.dynamicHX.p1_start;
  genericAHU.cooler.dynamicHX.vol1[3].p_start = genericAHU.cooler.dynamicHX.p1_start;
  genericAHU.cooler.dynamicHX.vol1[4].p_start = genericAHU.cooler.dynamicHX.p1_start;
  genericAHU.heater.dynamicHX.vol1[2].p_start = genericAHU.heater.dynamicHX.p1_start;
  genericAHU.heater.dynamicHX.vol1[3].p_start = genericAHU.heater.dynamicHX.p1_start;
  genericAHU.heater.dynamicHX.vol1[4].p_start = genericAHU.heater.dynamicHX.p1_start;
  genericAHU.dynamicHX.vol1[1].p_start = genericAHU.dynamicHX.p1_start;
  genericAHU.dynamicHX.vol2[1].p_start = genericAHU.dynamicHX.p2_start;
  genericAHU.fanSup.motSpe.y_start = genericAHU.fanSup.dp_start;
  genericAHU.humidifier.vol.p_start = genericAHU.humidifier.p_start;
  if (genericAHU.dynamicHX.vol1[2].dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.    FixedInitial) then 
    if (genericAHU.dynamicHX.vol1[2].dynBal.initialize_p) then 
      genericAHU.dynamicHX.vol1[2].dynBal.medium.p = genericAHU.dynamicHX.vol1[2].dynBal.p_start;
    end if;
  else
    if (genericAHU.dynamicHX.vol1[2].dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      if (genericAHU.dynamicHX.vol1[2].dynBal.initialize_p) then 
        der(genericAHU.dynamicHX.vol1[2].dynBal.medium.p) = 0;
      end if;
    end if;
  end if;
 
This required evaluation of 
the interactive parameters 
    boundaryExhaustAir.p(start = 101325)
    genericAHU.dynamicHX.p1_start(start = 101325)
    genericAHU.fanSup.dp_start(start = 0)
    genericAHU.fanSup.p_start(start = 101325)
    genericAHU.humidifier.p_start(start = 101325)
    thermalZone.p_start(start = 101325)
 
The redundancies involve
initial equations: 
  genericAHU.fanSup.motSpe.y = genericAHU.fanSup.motSpe.y_start;
  genericAHU.preheater.dynamicHX.vol1[1].dynBal.medium.p = genericAHU.preheater.dynamicHX.vol1[1].dynBal.p_start;
  genericAHU.preheater.dynamicHX.vol1[2].dynBal.medium.p = genericAHU.preheater.dynamicHX.vol1[2].dynBal.p_start;
  genericAHU.preheater.dynamicHX.vol1[3].dynBal.medium.p = genericAHU.preheater.dynamicHX.vol1[3].dynBal.p_start;
  genericAHU.preheater.dynamicHX.vol1[4].dynBal.medium.p = genericAHU.preheater.dynamicHX.vol1[4].dynBal.p_start;
  genericAHU.preheater.dynamicHX.vol1[5].dynBal.medium.p = genericAHU.preheater.dynamicHX.vol1[5].dynBal.p_start;
  genericAHU.cooler.dynamicHX.vol1[1].dynBal.medium.p = genericAHU.cooler.dynamicHX.vol1[1].dynBal.p_start;
  genericAHU.cooler.dynamicHX.vol1[2].dynBal.medium.p = genericAHU.cooler.dynamicHX.vol1[2].dynBal.p_start;
  genericAHU.cooler.dynamicHX.vol1[3].dynBal.medium.p = genericAHU.cooler.dynamicHX.vol1[3].dynBal.p_start;
  genericAHU.cooler.dynamicHX.vol1[4].dynBal.medium.p = genericAHU.cooler.dynamicHX.vol1[4].dynBal.p_start;
  genericAHU.heater.dynamicHX.vol1[1].dynBal.medium.p = genericAHU.heater.dynamicHX.vol1[1].dynBal.p_start;
  genericAHU.heater.dynamicHX.vol1[2].dynBal.medium.p = genericAHU.heater.dynamicHX.vol1[2].dynBal.p_start;
  genericAHU.heater.dynamicHX.vol1[3].dynBal.medium.p = genericAHU.heater.dynamicHX.vol1[3].dynBal.p_start;
  genericAHU.heater.dynamicHX.vol1[4].dynBal.medium.p = genericAHU.heater.dynamicHX.vol1[4].dynBal.p_start;
  genericAHU.dynamicHX.vol1[1].dynBal.medium.p = genericAHU.dynamicHX.vol1[1].dynBal.p_start;
  genericAHU.dynamicHX.vol1[2].dynBal.medium.p = genericAHU.dynamicHX.vol1[2].dynBal.p_start;
  genericAHU.dynamicHX.vol2[1].dynBal.medium.p = genericAHU.dynamicHX.vol2[1].dynBal.p_start;
  genericAHU.dynamicHX.vol2[2].dynBal.medium.p = genericAHU.dynamicHX.vol2[2].dynBal.p_start;
  genericAHU.fanSup.vol.dynBal.medium.p = genericAHU.fanSup.vol.dynBal.p_start;
  genericAHU.humidifier.vol.dynBal.medium.p = genericAHU.humidifier.vol.dynBal.p_start;
  thermalZone.ROM.volMoiAir.dynBal.medium.p = thermalZone.ROM.volMoiAir.dynBal.p_start;
 
 
Statistics
 
Original Model
  Number of components: 2019
  Variables: 24980
  Constants: 521 (521 scalars)
  Parameters: 10836 (14624 scalars)
  Unknowns: 13623 (12011 scalars)
  Differentiated variables: 343 scalars
  Equations: 10334
  Nontrivial: 8300
Translated Model
  Constants: 8145 scalars
  Free parameters: 3596 scalars
  Parameter depending: 4644 scalars
  Outputs: 23 scalars
  Continuous time states: 267 scalars
  Time-varying variables: 3244 scalars
  Alias variables: 7527 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {5, 3, 5, 5, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 22, 4}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0}
  Sizes of nonlinear systems of equations: {1, 1, 1, 3, 1, 1, 1, 4, 18, 6, 6, 6, 6, 6, 6, 17, 6, 6, 6, 6, 6, 6, 17, 6, 6, 6,   6, 6, 6, 1, 1, 1, 1, 1, 1}
  Sizes after manipulation of the nonlinear systems: {0, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1,   1, 1, 0, 1, 0, 1, 0, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of linear systems of equations: {24, 5}
    Sizes after manipulation of the linear systems: {4, 0}
    Sizes of nonlinear systems of equations: {18, 1, 17, 1, 17, 1, 1, 3, 1, 1, 1, 1, 4, 1}
    Sizes after manipulation of the nonlinear systems: {4, 0, 3, 0, 3, 0, 0, 1, 0, 0, 0, 0, 1, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {18, 1, 17, 1, 17, 1, 3, 1, 4, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3, 0, 3, 0, 3, 0, 1, 0, 1, 0}
    Number of numerical Jacobians: 0
 
Sparse solvers enabled: false
Enabled for integrator Jacobian: false
Model sparse and large enough: true.
Sparse solvers are available for dassl, lsodar, cvode, ida, radau, esdirk*, sdirk*.
Enable sparse solvers by setting Advanced.Translation.SparseActivate.
Selected continuous time states
Statically selected continuous time states
ctrAHUCO2.ctrCo.PID.D.x
ctrAHUCO2.ctrCo.PID.I.y
ctrAHUCO2.ctrPh.PID.D.x
ctrAHUCO2.ctrPh.PID.I.y
ctrAHUCO2.ctrRh.PID.D.x
ctrAHUCO2.ctrRh.PID.I.y
ctrAHUCO2.PID_CO2.I.y
ctrAHUCO2.PID_SteamHum.I.y
ctrAHUCO2.PID_VflowSup.I.y
genericAHU.cooler.dynamicHX.heatCapacitor[1].T
genericAHU.cooler.dynamicHX.heatCapacitor[2].T
genericAHU.cooler.dynamicHX.heatCapacitor[3].T
genericAHU.cooler.dynamicHX.heatCapacitor[4].T
genericAHU.cooler.dynamicHX.vol1[1].dynBal.mC[1]
genericAHU.cooler.dynamicHX.vol1[1].dynBal.medium.Xi[1]
genericAHU.cooler.dynamicHX.vol1[1].dynBal.U
genericAHU.cooler.dynamicHX.vol1[2].dynBal.mC[1]
genericAHU.cooler.dynamicHX.vol1[2].dynBal.medium.Xi[1]
genericAHU.cooler.dynamicHX.vol1[2].dynBal.U
genericAHU.cooler.dynamicHX.vol1[3].dynBal.mC[1]
genericAHU.cooler.dynamicHX.vol1[3].dynBal.medium.Xi[1]
genericAHU.cooler.dynamicHX.vol1[3].dynBal.U
genericAHU.cooler.dynamicHX.vol1[4].dynBal.mC[1]
genericAHU.cooler.dynamicHX.vol1[4].dynBal.medium.Xi[1]
genericAHU.cooler.dynamicHX.vol1[4].dynBal.U
genericAHU.cooler.dynamicHX.vol2[1].dynBal.U
genericAHU.cooler.dynamicHX.vol2[2].dynBal.U
genericAHU.cooler.dynamicHX.vol2[3].dynBal.U
genericAHU.cooler.dynamicHX.vol2[4].dynBal.U
genericAHU.cooler.hydraulicModule.junc456.dynBal.U
genericAHU.cooler.hydraulicModule.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.del.x
genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.timDel.x
genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.U
genericAHU.cooler.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.U
genericAHU.cooler.hydraulicModule.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.del.x
genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.timDel.x
genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.U
genericAHU.cooler.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.U
genericAHU.cooler.hydraulicModule.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.del.x
genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.timDel.x
genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.U
genericAHU.cooler.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.U
genericAHU.cooler.hydraulicModule.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.del.x
genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.timDel.x
genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.U
genericAHU.cooler.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.U
genericAHU.cooler.hydraulicModule.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.del.x
genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.timDel.x
genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.U
genericAHU.cooler.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.U
genericAHU.cooler.hydraulicModule.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.del.x
genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.timDel.x
genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.U
genericAHU.cooler.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.U
genericAHU.cooler.hydraulicModule.PT1_a1.y
genericAHU.cooler.hydraulicModule.PT1_a2.y
genericAHU.cooler.hydraulicModule.PT1_b1.y
genericAHU.cooler.hydraulicModule.PT1_b2.y
genericAHU.cooler.hydraulicModule.PumpInterface.physics.criticalDamping.x[1]
genericAHU.cooler.hydraulicModule.PumpInterface.physics.criticalDamping.x[2]
genericAHU.cooler.hydraulicModule.senT_a1.T
genericAHU.cooler.hydraulicModule.senT_a2.T
genericAHU.cooler.hydraulicModule.senT_b1.T
genericAHU.cooler.hydraulicModule.senT_b2.T
genericAHU.cooler.hydraulicModule.valve.actPos.y
genericAHU.cooler.hydraulicModule.valve.vol.dynBal.U
genericAHU.cooler.port_a1.p
genericAHU.cooler.port_b1.p
genericAHU.cooler.PT1_airIn.y
genericAHU.cooler.PT1_airOut.y
genericAHU.cooler.senT_airIn.T
genericAHU.cooler.senT_airOut.T
genericAHU.dampBypass.actPos.y
genericAHU.dampHX.actPos.y
genericAHU.dampHX.port_a.p
genericAHU.dynamicHX.heatCapacitor[1].T
genericAHU.dynamicHX.heatCapacitor[2].T
genericAHU.dynamicHX.vol1[1].dynBal.mC[1]
genericAHU.dynamicHX.vol1[1].dynBal.medium.Xi[1]
genericAHU.dynamicHX.vol1[1].dynBal.U
genericAHU.dynamicHX.vol1[2].dynBal.mC[1]
genericAHU.dynamicHX.vol1[2].dynBal.medium.Xi[1]
genericAHU.dynamicHX.vol1[2].dynBal.U
genericAHU.dynamicHX.vol2[1].dynBal.mC[1]
genericAHU.dynamicHX.vol2[1].dynBal.medium.Xi[1]
genericAHU.dynamicHX.vol2[1].dynBal.U
genericAHU.dynamicHX.vol2[2].dynBal.mC[1]
genericAHU.dynamicHX.vol2[2].dynBal.medium.Xi[1]
genericAHU.dynamicHX.vol2[2].dynBal.U
genericAHU.fanRet.motSpe.y
genericAHU.fanRet.vol.dynBal.m
genericAHU.fanRet.vol.dynBal.mC[1]
genericAHU.fanRet.vol.dynBal.medium.Xi[1]
genericAHU.fanRet.vol.dynBal.U
genericAHU.fanSup.motSpe.y
genericAHU.fanSup.vol.dynBal.mC[1]
genericAHU.fanSup.vol.dynBal.medium.Xi[1]
genericAHU.fanSup.vol.dynBal.U
genericAHU.flapRet.actPos.y
genericAHU.flapSup.actPos.y
genericAHU.heater.dynamicHX.heatCapacitor[1].T
genericAHU.heater.dynamicHX.heatCapacitor[2].T
genericAHU.heater.dynamicHX.heatCapacitor[3].T
genericAHU.heater.dynamicHX.heatCapacitor[4].T
genericAHU.heater.dynamicHX.vol1[1].dynBal.mC[1]
genericAHU.heater.dynamicHX.vol1[1].dynBal.medium.Xi[1]
genericAHU.heater.dynamicHX.vol1[1].dynBal.U
genericAHU.heater.dynamicHX.vol1[2].dynBal.mC[1]
genericAHU.heater.dynamicHX.vol1[2].dynBal.medium.Xi[1]
genericAHU.heater.dynamicHX.vol1[2].dynBal.U
genericAHU.heater.dynamicHX.vol1[3].dynBal.mC[1]
genericAHU.heater.dynamicHX.vol1[3].dynBal.medium.Xi[1]
genericAHU.heater.dynamicHX.vol1[3].dynBal.U
genericAHU.heater.dynamicHX.vol1[4].dynBal.mC[1]
genericAHU.heater.dynamicHX.vol1[4].dynBal.medium.Xi[1]
genericAHU.heater.dynamicHX.vol1[4].dynBal.U
genericAHU.heater.dynamicHX.vol2[1].dynBal.U
genericAHU.heater.dynamicHX.vol2[2].dynBal.U
genericAHU.heater.dynamicHX.vol2[3].dynBal.U
genericAHU.heater.dynamicHX.vol2[4].dynBal.U
genericAHU.heater.hydraulicModule.junc456.dynBal.U
genericAHU.heater.hydraulicModule.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.del.x
genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.timDel.x
genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.U
genericAHU.heater.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.U
genericAHU.heater.hydraulicModule.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.del.x
genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.timDel.x
genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.U
genericAHU.heater.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.U
genericAHU.heater.hydraulicModule.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.del.x
genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.timDel.x
genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.U
genericAHU.heater.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.U
genericAHU.heater.hydraulicModule.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.del.x
genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.timDel.x
genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.U
genericAHU.heater.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.U
genericAHU.heater.hydraulicModule.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.del.x
genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.timDel.x
genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.U
genericAHU.heater.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.U
genericAHU.heater.hydraulicModule.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.del.x
genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.timDel.x
genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.U
genericAHU.heater.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.U
genericAHU.heater.hydraulicModule.PT1_a1.y
genericAHU.heater.hydraulicModule.PT1_a2.y
genericAHU.heater.hydraulicModule.PT1_b1.y
genericAHU.heater.hydraulicModule.PT1_b2.y
genericAHU.heater.hydraulicModule.PumpInterface.physics.criticalDamping.x[1]
genericAHU.heater.hydraulicModule.PumpInterface.physics.criticalDamping.x[2]
genericAHU.heater.hydraulicModule.senT_a1.T
genericAHU.heater.hydraulicModule.senT_a2.T
genericAHU.heater.hydraulicModule.senT_b1.T
genericAHU.heater.hydraulicModule.senT_b2.T
genericAHU.heater.hydraulicModule.valve.actPos.y
genericAHU.heater.hydraulicModule.valve.vol.dynBal.U
genericAHU.heater.port_b1.p
genericAHU.heater.PT1_airIn.y
genericAHU.heater.PT1_airOut.y
genericAHU.heater.senT_airIn.T
genericAHU.heater.senT_airOut.T
genericAHU.humidifier.vol.dynBal.mC[1]
genericAHU.humidifier.vol.dynBal.medium.Xi[1]
genericAHU.humidifier.vol.dynBal.U
genericAHU.preheater.dynamicHX.heatCapacitor[1].T
genericAHU.preheater.dynamicHX.heatCapacitor[2].T
genericAHU.preheater.dynamicHX.heatCapacitor[3].T
genericAHU.preheater.dynamicHX.heatCapacitor[4].T
genericAHU.preheater.dynamicHX.heatCapacitor[5].T
genericAHU.preheater.dynamicHX.vol1[1].dynBal.mC[1]
genericAHU.preheater.dynamicHX.vol1[1].dynBal.medium.Xi[1]
genericAHU.preheater.dynamicHX.vol1[1].dynBal.U
genericAHU.preheater.dynamicHX.vol1[2].dynBal.mC[1]
genericAHU.preheater.dynamicHX.vol1[2].dynBal.medium.Xi[1]
genericAHU.preheater.dynamicHX.vol1[2].dynBal.U
genericAHU.preheater.dynamicHX.vol1[3].dynBal.mC[1]
genericAHU.preheater.dynamicHX.vol1[3].dynBal.medium.Xi[1]
genericAHU.preheater.dynamicHX.vol1[3].dynBal.U
genericAHU.preheater.dynamicHX.vol1[4].dynBal.mC[1]
genericAHU.preheater.dynamicHX.vol1[4].dynBal.medium.Xi[1]
genericAHU.preheater.dynamicHX.vol1[4].dynBal.U
genericAHU.preheater.dynamicHX.vol1[5].dynBal.mC[1]
genericAHU.preheater.dynamicHX.vol1[5].dynBal.medium.Xi[1]
genericAHU.preheater.dynamicHX.vol1[5].dynBal.U
genericAHU.preheater.dynamicHX.vol2[1].dynBal.U
genericAHU.preheater.dynamicHX.vol2[2].dynBal.U
genericAHU.preheater.dynamicHX.vol2[3].dynBal.U
genericAHU.preheater.dynamicHX.vol2[4].dynBal.U
genericAHU.preheater.dynamicHX.vol2[5].dynBal.U
genericAHU.preheater.hydraulicModule.junc456.dynBal.U
genericAHU.preheater.hydraulicModule.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.del.x
genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.timDel.x
genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.U
genericAHU.preheater.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.U
genericAHU.preheater.hydraulicModule.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.del.x
genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.timDel.x
genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.U
genericAHU.preheater.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.U
genericAHU.preheater.hydraulicModule.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.del.x
genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.timDel.x
genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.U
genericAHU.preheater.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.U
genericAHU.preheater.hydraulicModule.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.del.x
genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.timDel.x
genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.U
genericAHU.preheater.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.U
genericAHU.preheater.hydraulicModule.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.del.x
genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.timDel.x
genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.U
genericAHU.preheater.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.U
genericAHU.preheater.hydraulicModule.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.del.x
genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.timDel.x
genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.U
genericAHU.preheater.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.U
genericAHU.preheater.hydraulicModule.PT1_a1.y
genericAHU.preheater.hydraulicModule.PT1_a2.y
genericAHU.preheater.hydraulicModule.PT1_b1.y
genericAHU.preheater.hydraulicModule.PT1_b2.y
genericAHU.preheater.hydraulicModule.PumpInterface.physics.criticalDamping.x[1]
genericAHU.preheater.hydraulicModule.PumpInterface.physics.criticalDamping.x[2]
genericAHU.preheater.hydraulicModule.senT_a1.T
genericAHU.preheater.hydraulicModule.senT_a2.T
genericAHU.preheater.hydraulicModule.senT_b1.T
genericAHU.preheater.hydraulicModule.senT_b2.T
genericAHU.preheater.hydraulicModule.valve.actPos.y
genericAHU.preheater.hydraulicModule.valve.vol.dynBal.U
genericAHU.preheater.PT1_airIn.y
genericAHU.preheater.PT1_airOut.y
genericAHU.preheater.senT_airIn.T
genericAHU.preheater.senT_airOut.T
genericAHU.PT1_airIn.y
genericAHU.PT1_airIn1.y
genericAHU.PT1_airIn2.y
genericAHU.PT1_airIn3.y
genericAHU.senRelHumSup.phi
genericAHU.senRelHumSup1.phi
genericAHU.senTExh.T
genericAHU.senTOda.T
genericAHU.senTRet.T
genericAHU.senTSup.T
thermalZone.ROM.extWallRC.thermCapExt[1].T
thermalZone.ROM.intWallRC.thermCapInt[1].T
thermalZone.ROM.volMoiAir.dynBal.m
thermalZone.ROM.volMoiAir.dynBal.mC[1]
thermalZone.ROM.volMoiAir.dynBal.medium.Xi[1]
thermalZone.ROM.volMoiAir.dynBal.U
thermalZone.ventCont.dEMA.ExpAVG.x[1]
thermalZone.ventCont.dEMA.ExpAVG1.x[1]
The following parameters have enable=false and don't have any value, only a start value:
    thermalZone.eqAirTempWall.TGro(start = 288.15)
 
Finished
Finished
 = true


Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.ModularAHU.Examples.DemandControlledAHU.translation.log"); = true


rCheck = checkModel("AixLib.Systems.HydraulicModules.Examples.Throttle");
Check of AixLib.Systems.HydraulicModules.Examples.Throttle
The model has the same number of unknowns and equations: 961
The model could not be deduced to be symbolically well-posed.
The model has
  943+Throttle.pipe1.simplePipe.vol[1].dynBal.nPorts+Throttle.pipe1.simplePipe.vol[2].dynBal.nPorts  +Throttle.pipe1.simplePipe.vol[3].dynBal.nPorts+Throttle.pipe2.simplePipe.vol[1].dynBal.nPorts  +Throttle.pipe2.simplePipe.vol[2].dynBal.nPorts+Throttle.pipe2.simplePipe.vol[3].dynBal.nPorts  +Throttle.pipe3.simplePipe.vol[1].dynBal.nPorts+Throttle.pipe3.simplePipe.vol[2].dynBal.nPorts  +Throttle.pipe3.simplePipe.vol[3].dynBal.nPorts
scalar unknowns and
  888+(if boundary.use_Xi_in then 1 else (if boundary.use_X_in then 0 else 1))+(  if  not boundary.use_p_in then 1 else 0)+2*boundary.nPorts+(if  not   boundary.use_T_in then 1 else 0)+(if boundary1.use_Xi_in then 1 else (if   boundary1.use_X_in then 0 else 1))+(if  not boundary1.use_p_in then 1 else 0)+2  *boundary1.nPorts+(if  not boundary1.use_T_in then 1 else 0)+(if  not   Throttle.pipe1.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Throttle.pipe1.simplePipe.vol[1].dynBal.nPorts+(if  not Throttle.pipe1.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Throttle.pipe1.simplePipe.vol[2].dynBal.nPorts+(if  not   Throttle.pipe1.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Throttle.pipe1.simplePipe.vol[3].dynBal.nPorts+(if  not Throttle.pipe2.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Throttle.pipe2.simplePipe.vol[1].dynBal.nPorts+(if  not   Throttle.pipe2.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Throttle.pipe2.simplePipe.vol[2].dynBal.nPorts+(if  not Throttle.pipe2.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Throttle.pipe2.simplePipe.vol[3].dynBal.nPorts+(if  not   Throttle.pipe3.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Throttle.pipe3.simplePipe.vol[1].dynBal.nPorts+(if  not Throttle.pipe3.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Throttle.pipe3.simplePipe.vol[2].dynBal.nPorts+(if  not   Throttle.pipe3.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Throttle.pipe3.simplePipe.vol[3].dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  961
Check of AixLib.Systems.HydraulicModules.Examples.Throttle successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/Throttle.mos\",", "AixLib.Systems.HydraulicModules.Examples.Throttle.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.HydraulicModules.Examples.Throttle\",", "AixLib.Systems.HydraulicModules.Examples.Throttle.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.HydraulicModules.Examples.Throttle.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.HydraulicModules.Examples.Throttle\\\");\",", "AixLib.Systems.HydraulicModules.Examples.Throttle.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.HydraulicModules.Examples.Throttle.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.HydraulicModules.Examples.Throttle.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/Throttle.mos");
simulateModel("AixLib.Systems.HydraulicModules.Examples.Throttle", tolerance=1e-6, stopTime=1000, resultFile="AixLib.Systems.HydraulicModules.Examples.Throttle");
Translation of AixLib.Systems.HydraulicModules.Examples.Throttle
The DAE has 961 scalar unknowns and 961 scalar equations.
 
Statistics
 
Original Model
  Number of components: 204
  Variables: 2610
  Constants: 48 (48 scalars)
  Parameters: 1267 (1225 scalars)
  Unknowns: 1295 (995 scalars)
  Differentiated variables: 39 scalars
  Equations: 946
  Nontrivial: 747
Translated Model
  Constants: 921 scalars
  Free parameters: 67 scalars
  Parameter depending: 395 scalars
  Outputs: 8 scalars
  Continuous time states: 30 scalars
  Time-varying variables: 210 scalars
  Alias variables: 675 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {5, 2, 5, 2, 5, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {9}
  Sizes after manipulation of the nonlinear systems: {1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {9, 1}
    Sizes after manipulation of the nonlinear systems: {1, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {9, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {1, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
Throttle.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
Throttle.pipe1.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Throttle.pipe1.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Throttle.pipe1.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Throttle.pipe1.simplePipe.vol[1].dynBal.U
Throttle.pipe1.simplePipe.vol[2].dynBal.U
Throttle.pipe1.simplePipe.vol[3].dynBal.U
Throttle.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
Throttle.pipe2.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Throttle.pipe2.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Throttle.pipe2.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Throttle.pipe2.simplePipe.vol[1].dynBal.U
Throttle.pipe2.simplePipe.vol[2].dynBal.U
Throttle.pipe2.simplePipe.vol[3].dynBal.U
Throttle.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
Throttle.pipe3.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Throttle.pipe3.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Throttle.pipe3.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Throttle.pipe3.simplePipe.vol[1].dynBal.U
Throttle.pipe3.simplePipe.vol[2].dynBal.U
Throttle.pipe3.simplePipe.vol[3].dynBal.U
Throttle.PT1_a1.y
Throttle.PT1_a2.y
Throttle.PT1_b1.y
Throttle.PT1_b2.y
Throttle.senT_a1.T
Throttle.senT_a2.T
Throttle.senT_b1.T
Throttle.senT_b2.T
Throttle.valve.actPos.y
Finished
Finished
 = true


Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.HydraulicModules.Examples.Throttle.translation.log"); = true


rCheck = checkModel("AixLib.Systems.HydraulicModules.Examples.Injection2WayValve");
Check of AixLib.Systems.HydraulicModules.Examples.Injection2WayValve
The model has the same number of unknowns and equations: 2312
The model could not be deduced to be symbolically well-posed.
The model has
  2262+Injection.PumpInterface.pump.vol.dynBal.nPorts+Injection.pipe1.simplePipe.vol[1].dynBal.nPorts  +Injection.pipe1.simplePipe.vol[2].dynBal.nPorts+Injection.pipe1.simplePipe.vol[3].dynBal.nPorts  +Injection.pipe2.simplePipe.vol[1].dynBal.nPorts+Injection.pipe2.simplePipe.vol[2].dynBal.nPorts  +Injection.pipe2.simplePipe.vol[3].dynBal.nPorts+Injection.pipe3.simplePipe.vol[1].dynBal.nPorts  +Injection.pipe3.simplePipe.vol[2].dynBal.nPorts+Injection.pipe3.simplePipe.vol[3].dynBal.nPorts  +Injection.pipe4.simplePipe.vol[1].dynBal.nPorts+Injection.pipe4.simplePipe.vol[2].dynBal.nPorts  +Injection.pipe4.simplePipe.vol[3].dynBal.nPorts+Injection.pipe5.simplePipe.vol[1].dynBal.nPorts  +Injection.pipe5.simplePipe.vol[2].dynBal.nPorts+Injection.pipe5.simplePipe.vol[3].dynBal.nPorts  +Injection.pipe6.simplePipe.vol[1].dynBal.nPorts+Injection.pipe6.simplePipe.vol[2].dynBal.nPorts  +Injection.pipe6.simplePipe.vol[3].dynBal.nPorts+Injection.pipe7.simplePipe.vol[1].dynBal.nPorts  +Injection.pipe7.simplePipe.vol[2].dynBal.nPorts+Injection.pipe7.simplePipe.vol[3].dynBal.nPorts  +Injection.junc3v6.dynBal.nPorts+Injection.juncjp6.dynBal.nPorts
scalar unknowns and
  2128+(if boundary.use_Xi_in then 1 else (if boundary.use_X_in then 0 else 1))+(  if  not boundary.use_p_in then 1 else 0)+2*boundary.nPorts+(if  not   boundary.use_T_in then 1 else 0)+(if boundary1.use_Xi_in then 1 else (if   boundary1.use_X_in then 0 else 1))+(if  not boundary1.use_p_in then 1 else 0)+2  *boundary1.nPorts+(if  not boundary1.use_T_in then 1 else 0)+(if  not   Injection.PumpInterface.pump.vol.dynBal.use_mWat_flow then 1 else 0)+3*  Injection.PumpInterface.pump.vol.dynBal.nPorts+(if  not Injection.pipe1.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe1.simplePipe.vol[1].dynBal.nPorts+(if  not   Injection.pipe1.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe1.simplePipe.vol[2].dynBal.nPorts+(if  not Injection.pipe1.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe1.simplePipe.vol[3].dynBal.nPorts+(if  not   Injection.pipe2.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe2.simplePipe.vol[1].dynBal.nPorts+(if  not Injection.pipe2.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe2.simplePipe.vol[2].dynBal.nPorts+(if  not   Injection.pipe2.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe2.simplePipe.vol[3].dynBal.nPorts+(if  not Injection.pipe3.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe3.simplePipe.vol[1].dynBal.nPorts+(if  not   Injection.pipe3.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe3.simplePipe.vol[2].dynBal.nPorts+(if  not Injection.pipe3.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe3.simplePipe.vol[3].dynBal.nPorts+(if  not   Injection.pipe4.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe4.simplePipe.vol[1].dynBal.nPorts+(if  not Injection.pipe4.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe4.simplePipe.vol[2].dynBal.nPorts+(if  not   Injection.pipe4.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe4.simplePipe.vol[3].dynBal.nPorts+(if  not Injection.pipe5.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe5.simplePipe.vol[1].dynBal.nPorts+(if  not   Injection.pipe5.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe5.simplePipe.vol[2].dynBal.nPorts+(if  not Injection.pipe5.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe5.simplePipe.vol[3].dynBal.nPorts+(if  not   Injection.pipe6.simplePipe.vol[1].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe6.simplePipe.vol[1].dynBal.nPorts+(if  not Injection.pipe6.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe6.simplePipe.vol[2].dynBal.nPorts+(if  not   Injection.pipe6.simplePipe.vol[3].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe6.simplePipe.vol[3].dynBal.nPorts+(if  not Injection.pipe7.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe7.simplePipe.vol[1].dynBal.nPorts+(if  not   Injection.pipe7.simplePipe.vol[2].dynBal.use_mWat_flow then 1 else 0)+3*  Injection.pipe7.simplePipe.vol[2].dynBal.nPorts+(if  not Injection.pipe7.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+3*Injection.pipe7.simplePipe.vol[3].dynBal.nPorts+(if  not   Injection.junc3v6.dynBal.use_mWat_flow then 1 else 0)+3*Injection.junc3v6.dynBal.nPorts  +(if  not Injection.juncjp6.dynBal.use_mWat_flow then 1 else 0)+3*  Injection.juncjp6.dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  2312
Check of AixLib.Systems.HydraulicModules.Examples.Injection2WayValve successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/Injection2WayValve.mos\",", "AixLib.Systems.HydraulicModules.Examples.Injection2WayValve.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.HydraulicModules.Examples.Injection2WayValve\",", "AixLib.Systems.HydraulicModules.Examples.Injection2WayValve.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.HydraulicModules.Examples.Injection2WayValve.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.HydraulicModules.Examples.Injection2WayValve\\\");\",", "AixLib.Systems.HydraulicModules.Examples.Injection2WayValve.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.HydraulicModules.Examples.Injection2WayValve.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.HydraulicModules.Examples.Injection2WayValve.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/HydraulicModules/Examples/Injection2WayValve.mos");
simulateModel("AixLib.Systems.HydraulicModules.Examples.Injection2WayValve", tolerance=1e-6, stopTime=800, resultFile="AixLib.Systems.HydraulicModules.Examples.Injection2WayValve");
Translation of AixLib.Systems.HydraulicModules.Examples.Injection2WayValve
The DAE has 2312 scalar unknowns and 2312 scalar equations.
 
Statistics
 
Original Model
  Number of components: 512
  Variables: 6231
  Constants: 118 (118 scalars)
  Parameters: 3007 (3123 scalars)
  Unknowns: 3106 (2402 scalars)
  Differentiated variables: 86 scalars
  Equations: 2268
  Nontrivial: 1742
Translated Model
  Constants: 2291 scalars
  Free parameters: 144 scalars
  Parameter depending: 1073 scalars
  Outputs: 12 scalars
  Continuous time states: 62 scalars
  Time-varying variables: 513 scalars
  Alias variables: 1622 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {21}
  Sizes after manipulation of the nonlinear systems: {2}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {21, 1, 1}
    Sizes after manipulation of the nonlinear systems: {3, 0, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {21, 1, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3, 0, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
Injection.junc3v6.dynBal.U
Injection.juncjp6.dynBal.U
Injection.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe1.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe1.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe1.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe1.simplePipe.vol[1].dynBal.U
Injection.pipe1.simplePipe.vol[2].dynBal.U
Injection.pipe1.simplePipe.vol[3].dynBal.U
Injection.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe2.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe2.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe2.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe2.simplePipe.vol[1].dynBal.U
Injection.pipe2.simplePipe.vol[2].dynBal.U
Injection.pipe2.simplePipe.vol[3].dynBal.U
Injection.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe3.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe3.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe3.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe3.simplePipe.vol[1].dynBal.U
Injection.pipe3.simplePipe.vol[2].dynBal.U
Injection.pipe3.simplePipe.vol[3].dynBal.U
Injection.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe4.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe4.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe4.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe4.simplePipe.vol[1].dynBal.U
Injection.pipe4.simplePipe.vol[2].dynBal.U
Injection.pipe4.simplePipe.vol[3].dynBal.U
Injection.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe5.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe5.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe5.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe5.simplePipe.vol[1].dynBal.U
Injection.pipe5.simplePipe.vol[2].dynBal.U
Injection.pipe5.simplePipe.vol[3].dynBal.U
Injection.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe6.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe6.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe6.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe6.simplePipe.vol[1].dynBal.U
Injection.pipe6.simplePipe.vol[2].dynBal.U
Injection.pipe6.simplePipe.vol[3].dynBal.U
Injection.pipe7.Insulation.CylindricLoad1.heatCapacitor.T
Injection.pipe7.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
Injection.pipe7.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
Injection.pipe7.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
Injection.pipe7.simplePipe.vol[1].dynBal.U
Injection.pipe7.simplePipe.vol[2].dynBal.U
Injection.pipe7.simplePipe.vol[3].dynBal.U
Injection.PT1_a1.y
Injection.PT1_a2.y
Injection.PT1_b1.y
Injection.PT1_b2.y
Injection.PumpInterface.pump.motSpe.y
Injection.PumpInterface.pump.vol.dynBal.U
Injection.senT_a1.T
Injection.senT_a2.T
Injection.senT_b1.T
Injection.senT_b2.T
Injection.valve.actPos.y
Finished
Finished
 = true


Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.HydraulicModules.Examples.Injection2WayValve.translation.log"); = true


rCheck = checkModel("AixLib.Systems.ModularAHU.Validation.AHU2_Heater");
Check of AixLib.Systems.ModularAHU.Validation.AHU2_Heater
The model has the same number of unknowns and equations: 2422
The model could not be deduced to be symbolically well-posed.
The model has
  2345+max([size(combiTimeTable.columns, 1); size(combiTimeTable.offset, 1)])+  registerModule.hydraulicModule.valve.vol.dynBal.nPorts+registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts+  registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts+  registerModule.hydraulicModule.junc456.dynBal.nPorts+2*size(registerModule.hydraulicModule.PumpInterface.physics.maxMinTable.columns,   1)+2*registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n1+2*  registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.n+  registerModule.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts+2*  registerModule.dynamicHX.vol1[1].dynBal.nPorts+2*registerModule.dynamicHX.vol1[2].dynBal.nPorts  +2*registerModule.dynamicHX.vol1[3].dynBal.nPorts+2*registerModule.dynamicHX.vol1[4].dynBal.nPorts  +registerModule.dynamicHX.vol2[1].dynBal.nPorts+registerModule.dynamicHX.vol2[2].dynBal.nPorts  +registerModule.dynamicHX.vol2[3].dynBal.nPorts+registerModule.dynamicHX.vol2[4].dynBal.nPorts
scalar unknowns and
  2197+(if boundaryWaterSource.use_Xi_in then 1 else (if boundaryWaterSource.use_X_in   then 0 else 1))+(if  not boundaryWaterSource.use_p_in then 1 else 0)+2*  boundaryWaterSource.nPorts+(if  not boundaryWaterSource.use_T_in then 1 else 0)  +(if boundaryWaterSink.use_Xi_in then 1 else (if boundaryWaterSink.use_X_in   then 0 else 1))+(if  not boundaryWaterSink.use_p_in then 1 else 0)+2*  boundaryWaterSink.nPorts+(if  not boundaryWaterSink.use_T_in then 1 else 0)+(  if boundaryAirSource.use_Xi_in then 2 else (if boundaryAirSource.use_X_in   then 1 else 3))+3*boundaryAirSource.nPorts+(if  not boundaryAirSource.use_m_flow_in   then 1 else 0)+(if  not boundaryAirSource.use_T_in then 1 else 0)+(if   boundaryAirSink.use_Xi_in then 2 else (if boundaryAirSink.use_X_in then 1   else 3))+3*boundaryAirSink.nPorts+(if  not boundaryAirSink.use_p_in then 1   else 0)+(if  not boundaryAirSink.use_T_in then 1 else 0)+max([size(  combiTimeTable.columns, 1); size(combiTimeTable.offset, 1)])+2*size(  registerModule.hydraulicModule.PumpInterface.physics.maxMinTable.columns, 1)+  registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n1+  registerModule.hydraulicModule.PumpInterface.physics.deMultiplex2.n2+  registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.n+(if    not registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.nPorts  +(if  not registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.nPorts  +(if  not registerModule.hydraulicModule.junc456.dynBal.use_mWat_flow then 1   else 0)+3*registerModule.hydraulicModule.junc456.dynBal.nPorts+(if  not   registerModule.hydraulicModule.PumpInterface.physics.vol.dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.hydraulicModule.PumpInterface.physics.vol.dynBal.nPorts  +(if  not registerModule.dynamicHX.vol1[1].dynBal.use_mWat_flow then 1 else 0)  +5*registerModule.dynamicHX.vol1[1].dynBal.nPorts+(if  not registerModule.dynamicHX.vol1[2].dynBal.use_mWat_flow   then 1 else 0)+5*registerModule.dynamicHX.vol1[2].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol1[3].dynBal.use_mWat_flow then 1 else 0)+5*  registerModule.dynamicHX.vol1[3].dynBal.nPorts+(if  not registerModule.dynamicHX.vol1[4].dynBal.use_mWat_flow   then 1 else 0)+5*registerModule.dynamicHX.vol1[4].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol2[1].dynBal.use_mWat_flow then 1 else 0)+3*  registerModule.dynamicHX.vol2[1].dynBal.nPorts+(if  not registerModule.dynamicHX.vol2[2].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.dynamicHX.vol2[2].dynBal.nPorts+(if  not   registerModule.dynamicHX.vol2[3].dynBal.use_mWat_flow then 1 else 0)+3*  registerModule.dynamicHX.vol2[3].dynBal.nPorts+(if  not registerModule.dynamicHX.vol2[4].dynBal.use_mWat_flow   then 1 else 0)+3*registerModule.dynamicHX.vol2[4].dynBal.nPorts+(if  not   registerModule.hydraulicModule.valve.vol.dynBal.use_mWat_flow then 1 else 0)+3  *registerModule.hydraulicModule.valve.vol.dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  2422
Check of AixLib.Systems.ModularAHU.Validation.AHU2_Heater successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Validation/AHU2_Heater.mos\",", "AixLib.Systems.ModularAHU.Validation.AHU2_Heater.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.ModularAHU.Validation.AHU2_Heater\",", "AixLib.Systems.ModularAHU.Validation.AHU2_Heater.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.ModularAHU.Validation.AHU2_Heater.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.ModularAHU.Validation.AHU2_Heater\\\");\",", "AixLib.Systems.ModularAHU.Validation.AHU2_Heater.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.ModularAHU.Validation.AHU2_Heater.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.ModularAHU.Validation.AHU2_Heater.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Validation/AHU2_Heater.mos");
simulateModel("AixLib.Systems.ModularAHU.Validation.AHU2_Heater", tolerance=1e-6, outputInterval=1, stopTime=4320, resultFile="AixLib.Systems.ModularAHU.Validation.AHU2_Heater");
Translation of AixLib.Systems.ModularAHU.Validation.AHU2_Heater
The DAE has 2422 scalar unknowns and 2422 scalar equations.
 
Statistics
 
Original Model
  Number of components: 465
  Variables: 6173
  Constants: 122 (122 scalars)
  Parameters: 2807 (12514 scalars)
  Unknowns: 3244 (2525 scalars)
  Differentiated variables: 87 scalars
  Equations: 2516
  Nontrivial: 1952
Translated Model
  Constants: 2114 scalars
  Free parameters: 5070 scalars
  Parameter depending: 5770 scalars
  Outputs: 17 scalars
  Continuous time states: 63 scalars
  Time-varying variables: 629 scalars
  Alias variables: 1578 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {2, 2, 2, 2, 2, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {18, 6, 6, 6, 6, 6, 6}
  Sizes after manipulation of the nonlinear systems: {2, 1, 1, 1, 1, 1, 1}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {18, 1}
    Sizes after manipulation of the nonlinear systems: {4, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {18, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {3, 0}
    Number of numerical Jacobians: 0
 
Selected continuous time states
Statically selected continuous time states
registerModule.dynamicHX.heatCapacitor[1].T
registerModule.dynamicHX.heatCapacitor[2].T
registerModule.dynamicHX.heatCapacitor[3].T
registerModule.dynamicHX.heatCapacitor[4].T
registerModule.dynamicHX.vol1[1].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[1].dynBal.U
registerModule.dynamicHX.vol1[2].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[2].dynBal.U
registerModule.dynamicHX.vol1[3].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[3].dynBal.U
registerModule.dynamicHX.vol1[4].dynBal.medium.Xi[1]
registerModule.dynamicHX.vol1[4].dynBal.U
registerModule.dynamicHX.vol2[1].dynBal.U
registerModule.dynamicHX.vol2[2].dynBal.U
registerModule.dynamicHX.vol2[3].dynBal.U
registerModule.dynamicHX.vol2[4].dynBal.U
registerModule.hydraulicModule.junc456.dynBal.U
registerModule.hydraulicModule.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe1.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe1.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe1.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe2.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe2.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe2.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe3.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe3.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe3.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe4.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe4.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe4.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe5.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe5.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe5.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
registerModule.hydraulicModule.pipe6.plugFlowPipe.del.x
registerModule.hydraulicModule.pipe6.plugFlowPipe.timDel.x
registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_a.dynBal.U
registerModule.hydraulicModule.pipe6.plugFlowPipe.vol_b.dynBal.U
registerModule.hydraulicModule.PT1_a1.y
registerModule.hydraulicModule.PT1_a2.y
registerModule.hydraulicModule.PT1_b1.y
registerModule.hydraulicModule.PT1_b2.y
registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.x[1]
registerModule.hydraulicModule.PumpInterface.physics.criticalDamping.x[2]
registerModule.hydraulicModule.senT_a1.T
registerModule.hydraulicModule.senT_a2.T
registerModule.hydraulicModule.senT_b1.T
registerModule.hydraulicModule.senT_b2.T
registerModule.hydraulicModule.valve.actPos.y
registerModule.hydraulicModule.valve.vol.dynBal.U
registerModule.PT1_airIn.y
registerModule.PT1_airOut.y
registerModule.senT_airIn.T
registerModule.senT_airOut.T
Finished
Finished
 = true

Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.ModularAHU.Validation.AHU2_Heater.translation.log"); = true


rCheck = checkModel("AixLib.Systems.ModularAHU.Examples.GenericAHU");
Check of AixLib.Systems.ModularAHU.Examples.GenericAHU
The model has the same number of unknowns and equations: 8970
The model could not be deduced to be symbolically well-posed.
The model has
  8770+genericAHU.preheater.hydraulicModule.valve.vol.dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts+  genericAHU.preheater.hydraulicModule.junc456.dynBal.nPorts+genericAHU.preheater.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts  +2*genericAHU.preheater.dynamicHX.vol1[1].dynBal.nPorts+2*genericAHU.preheater.dynamicHX.vol1[2].dynBal.nPorts  +genericAHU.preheater.dynamicHX.vol2[1].dynBal.nPorts+genericAHU.preheater.dynamicHX.vol2[2].dynBal.nPorts  +genericAHU.cooler.hydraulicModule.valve.vol.dynBal.nPorts+genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts  +genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts+  genericAHU.cooler.hydraulicModule.junc456.dynBal.nPorts+genericAHU.cooler.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts  +2*genericAHU.cooler.dynamicHX.vol1[1].dynBal.nPorts+2*genericAHU.cooler.dynamicHX.vol1[2].dynBal.nPorts  +genericAHU.cooler.dynamicHX.vol2[1].dynBal.nPorts+genericAHU.cooler.dynamicHX.vol2[2].dynBal.nPorts  +genericAHU.heater.hydraulicModule.valve.vol.dynBal.nPorts+genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts  +genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts+  genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts+  genericAHU.heater.hydraulicModule.junc456.dynBal.nPorts+genericAHU.heater.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts  +2*genericAHU.heater.dynamicHX.vol1[1].dynBal.nPorts+2*genericAHU.heater.dynamicHX.vol1[2].dynBal.nPorts  +genericAHU.heater.dynamicHX.vol2[1].dynBal.nPorts+genericAHU.heater.dynamicHX.vol2[2].dynBal.nPorts  +2*genericAHU.dynamicHX.vol1[1].dynBal.nPorts+2*genericAHU.dynamicHX.vol1[2].dynBal.nPorts  +2*genericAHU.dynamicHX.vol2[1].dynBal.nPorts+2*genericAHU.dynamicHX.vol2[2].dynBal.nPorts  +2*genericAHU.fanSup.vol.dynBal.nPorts+2*genericAHU.fanRet.vol.dynBal.nPorts+2  *genericAHU.humidifier.vol.dynBal.nPorts+2*genericAHU.humidifierRet.vol.dynBal.nPorts
scalar unknowns and
  8255+(if  not genericAHU.humidifier.steamHumidifier then 1 else 0)+(if   boundaryOutsideAir.use_Xi_in then 2 else (if boundaryOutsideAir.use_X_in then 1   else 3))+boundaryOutsideAir.nPorts+(if  not boundaryOutsideAir.use_p_in then 1   else 0)+boundaryOutsideAir.nPorts+(if  not boundaryOutsideAir.use_T_in then 1   else 0)+boundaryOutsideAir.nPorts+(if boundarySupplyAir.use_Xi_in then 2   else (if boundarySupplyAir.use_X_in then 1 else 3))+boundarySupplyAir.nPorts+  (if  not boundarySupplyAir.use_p_in then 1 else 0)+boundarySupplyAir.nPorts+(  if  not boundarySupplyAir.use_T_in then 1 else 0)+boundarySupplyAir.nPorts+(  if boundaryExhaustAir.use_Xi_in then 2 else (if boundaryExhaustAir.use_X_in   then 1 else 3))+boundaryExhaustAir.nPorts+(if  not boundaryExhaustAir.use_p_in   then 1 else 0)+boundaryExhaustAir.nPorts+(if  not boundaryExhaustAir.use_T_in   then 1 else 0)+boundaryExhaustAir.nPorts+(if boundaryReturnAir.use_Xi_in   then 2 else (if boundaryReturnAir.use_X_in then 1 else 3))+boundaryReturnAir.nPorts  +(if  not boundaryReturnAir.use_p_in then 1 else 0)+boundaryReturnAir.nPorts+(  if  not boundaryReturnAir.use_T_in then 1 else 0)+boundaryReturnAir.nPorts+(  if SourcePreheater.use_Xi_in then 1 else (if SourcePreheater.use_X_in then 0   else 1))+(if  not SourcePreheater.use_p_in then 1 else 0)+SourcePreheater.nPorts  +(if  not SourcePreheater.use_T_in then 1 else 0)+SourcePreheater.nPorts+(if   SinkPreheater.use_Xi_in then 1 else (if SinkPreheater.use_X_in then 0 else 1))  +(if  not SinkPreheater.use_p_in then 1 else 0)+SinkPreheater.nPorts+(if  not   SinkPreheater.use_T_in then 1 else 0)+SinkPreheater.nPorts+(if   SourceCooler.use_Xi_in then 1 else (if SourceCooler.use_X_in then 0 else 1))+(  if  not SourceCooler.use_p_in then 1 else 0)+SourceCooler.nPorts+(if  not   SourceCooler.use_T_in then 1 else 0)+SourceCooler.nPorts+(if SinkCooler.use_Xi_in   then 1 else (if SinkCooler.use_X_in then 0 else 1))+(if  not SinkCooler.use_p_in   then 1 else 0)+SinkCooler.nPorts+(if  not SinkCooler.use_T_in then 1 else 0)+  SinkCooler.nPorts+(if SourceHeater.use_Xi_in then 1 else (if SourceHeater.use_X_in   then 0 else 1))+(if  not SourceHeater.use_p_in then 1 else 0)+  SourceHeater.nPorts+(if  not SourceHeater.use_T_in then 1 else 0)+  SourceHeater.nPorts+(if SinkHeater.use_Xi_in then 1 else (if SinkHeater.use_X_in   then 0 else 1))+(if  not SinkHeater.use_p_in then 1 else 0)+SinkHeater.nPorts  +(if  not SinkHeater.use_T_in then 1 else 0)+SinkHeater.nPorts+(if  not   genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts+  (if  not genericAHU.preheater.hydraulicModule.junc456.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.junc456.dynBal.nPorts+2*  genericAHU.preheater.hydraulicModule.junc456.dynBal.nPorts+(if  not   genericAHU.preheater.hydraulicModule.PumpInterface.pump.vol.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts  +2*genericAHU.preheater.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts+(  if  not genericAHU.preheater.dynamicHX.vol1[1].dynBal.use_mWat_flow then 1   else 0)+2*genericAHU.preheater.dynamicHX.vol1[1].dynBal.nPorts+3*  genericAHU.preheater.dynamicHX.vol1[1].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol1[2].dynBal.use_mWat_flow   then 1 else 0)+2*genericAHU.preheater.dynamicHX.vol1[2].dynBal.nPorts+3*  genericAHU.preheater.dynamicHX.vol1[2].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol2[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.dynamicHX.vol2[1].dynBal.nPorts+2*  genericAHU.preheater.dynamicHX.vol2[1].dynBal.nPorts+(if  not genericAHU.preheater.dynamicHX.vol2[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.dynamicHX.vol2[2].dynBal.nPorts+2*  genericAHU.preheater.dynamicHX.vol2[2].dynBal.nPorts+(if  not genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.cooler.hydraulicModule.junc456.dynBal.use_mWat_flow then 1   else 0)+genericAHU.cooler.hydraulicModule.junc456.dynBal.nPorts+2*  genericAHU.cooler.hydraulicModule.junc456.dynBal.nPorts+(if  not   genericAHU.cooler.hydraulicModule.PumpInterface.pump.vol.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts  +2*genericAHU.cooler.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts+(if    not genericAHU.cooler.dynamicHX.vol1[1].dynBal.use_mWat_flow then 1 else 0)+2  *genericAHU.cooler.dynamicHX.vol1[1].dynBal.nPorts+3*genericAHU.cooler.dynamicHX.vol1[1].dynBal.nPorts  +(if  not genericAHU.cooler.dynamicHX.vol1[2].dynBal.use_mWat_flow then 1   else 0)+2*genericAHU.cooler.dynamicHX.vol1[2].dynBal.nPorts+3*  genericAHU.cooler.dynamicHX.vol1[2].dynBal.nPorts+(if  not genericAHU.cooler.dynamicHX.vol2[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.dynamicHX.vol2[1].dynBal.nPorts+2*  genericAHU.cooler.dynamicHX.vol2[1].dynBal.nPorts+(if  not genericAHU.cooler.dynamicHX.vol2[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.cooler.dynamicHX.vol2[2].dynBal.nPorts+2*  genericAHU.cooler.dynamicHX.vol2[2].dynBal.nPorts+(if  not genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.nPorts+(  if  not genericAHU.heater.hydraulicModule.junc456.dynBal.use_mWat_flow then 1   else 0)+genericAHU.heater.hydraulicModule.junc456.dynBal.nPorts+2*  genericAHU.heater.hydraulicModule.junc456.dynBal.nPorts+(if  not   genericAHU.heater.hydraulicModule.PumpInterface.pump.vol.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts  +2*genericAHU.heater.hydraulicModule.PumpInterface.pump.vol.dynBal.nPorts+(if    not genericAHU.heater.dynamicHX.vol1[1].dynBal.use_mWat_flow then 1 else 0)+2  *genericAHU.heater.dynamicHX.vol1[1].dynBal.nPorts+3*genericAHU.heater.dynamicHX.vol1[1].dynBal.nPorts  +(if  not genericAHU.heater.dynamicHX.vol1[2].dynBal.use_mWat_flow then 1   else 0)+2*genericAHU.heater.dynamicHX.vol1[2].dynBal.nPorts+3*  genericAHU.heater.dynamicHX.vol1[2].dynBal.nPorts+(if  not genericAHU.heater.dynamicHX.vol2[1].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.dynamicHX.vol2[1].dynBal.nPorts+2*  genericAHU.heater.dynamicHX.vol2[1].dynBal.nPorts+(if  not genericAHU.heater.dynamicHX.vol2[2].dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.dynamicHX.vol2[2].dynBal.nPorts+2*  genericAHU.heater.dynamicHX.vol2[2].dynBal.nPorts+(if  not genericAHU.dynamicHX.vol1[1].dynBal.use_mWat_flow   then 1 else 0)+2*genericAHU.dynamicHX.vol1[1].dynBal.nPorts+3*  genericAHU.dynamicHX.vol1[1].dynBal.nPorts+(if  not genericAHU.dynamicHX.vol1[2].dynBal.use_mWat_flow   then 1 else 0)+2*genericAHU.dynamicHX.vol1[2].dynBal.nPorts+3*  genericAHU.dynamicHX.vol1[2].dynBal.nPorts+(if  not genericAHU.dynamicHX.vol2[1].dynBal.use_mWat_flow   then 1 else 0)+2*genericAHU.dynamicHX.vol2[1].dynBal.nPorts+3*  genericAHU.dynamicHX.vol2[1].dynBal.nPorts+(if  not genericAHU.dynamicHX.vol2[2].dynBal.use_mWat_flow   then 1 else 0)+2*genericAHU.dynamicHX.vol2[2].dynBal.nPorts+3*  genericAHU.dynamicHX.vol2[2].dynBal.nPorts+(if  not genericAHU.fanSup.vol.dynBal.use_mWat_flow   then 1 else 0)+2*genericAHU.fanSup.vol.dynBal.nPorts+3*genericAHU.fanSup.vol.dynBal.nPorts  +(if  not genericAHU.fanRet.vol.dynBal.use_mWat_flow then 1 else 0)+2*  genericAHU.fanRet.vol.dynBal.nPorts+3*genericAHU.fanRet.vol.dynBal.nPorts+2*  genericAHU.humidifier.vol.dynBal.nPorts+3*genericAHU.humidifier.vol.dynBal.nPorts  +2*genericAHU.humidifierRet.vol.dynBal.nPorts+3*genericAHU.humidifierRet.vol.dynBal.nPorts  +(if  not genericAHU.preheater.hydraulicModule.valve.vol.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.preheater.hydraulicModule.valve.vol.dynBal.nPorts+2  *genericAHU.preheater.hydraulicModule.valve.vol.dynBal.nPorts+(if  not   genericAHU.cooler.hydraulicModule.valve.vol.dynBal.use_mWat_flow then 1 else 0)  +genericAHU.cooler.hydraulicModule.valve.vol.dynBal.nPorts+2*genericAHU.cooler.hydraulicModule.valve.vol.dynBal.nPorts  +(if  not genericAHU.heater.hydraulicModule.valve.vol.dynBal.use_mWat_flow   then 1 else 0)+genericAHU.heater.hydraulicModule.valve.vol.dynBal.nPorts+2*  genericAHU.heater.hydraulicModule.valve.vol.dynBal.nPorts
scalar equations.
However, exploiting the given numerical settings of parameters gives the same number of unknowns and equations:
  8970
Check of AixLib.Systems.ModularAHU.Examples.GenericAHU successful.
Declaring variable: Boolean rCheck ;

Modelica.Utilities.Streams.print("    { \"file\" :  \"AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Examples/GenericAHU.mos\",", "AixLib.Systems.ModularAHU.Examples.GenericAHU.statistics.log");
Modelica.Utilities.Streams.print("      \"model\" : \"AixLib.Systems.ModularAHU.Examples.GenericAHU\",", "AixLib.Systems.ModularAHU.Examples.GenericAHU.statistics.log");
Modelica.Utilities.Streams.print("      \"check\" : {", "AixLib.Systems.ModularAHU.Examples.GenericAHU.statistics.log");
Modelica.Utilities.Streams.print("        \"command\" : \"checkModel(\\\"AixLib.Systems.ModularAHU.Examples.GenericAHU\\\");\",", "AixLib.Systems.ModularAHU.Examples.GenericAHU.statistics.log");
Modelica.Utilities.Streams.print("        \"result\"  : " + String(rCheck), "AixLib.Systems.ModularAHU.Examples.GenericAHU.statistics.log");
Modelica.Utilities.Streams.print("      },", "AixLib.Systems.ModularAHU.Examples.GenericAHU.statistics.log");


rScript=RunScript("modelica://AixLib/Resources/Scripts/Dymola/Systems/ModularAHU/Examples/GenericAHU.mos");
simulateModel("AixLib.Systems.ModularAHU.Examples.GenericAHU", stopTime=7200, method="dassl", tolerance=1e-6, resultFile="AixLib.Systems.ModularAHU.Examples.GenericAHU");
Translation of AixLib.Systems.ModularAHU.Examples.GenericAHU
The DAE has 8970 scalar unknowns and 8970 scalar equations.
Redundant consistent initial conditions.
Removed the following equations which are redundant and consistent: 
  genericAHU.preheater.dynamicHX.vol1[2].p_start = genericAHU.preheater.dynamicHX.p1_start;
  genericAHU.cooler.dynamicHX.vol1[1].p_start = genericAHU.cooler.dynamicHX.p1_start;
  genericAHU.heater.dynamicHX.vol1[2].p_start = genericAHU.heater.dynamicHX.p1_start;
  genericAHU.dynamicHX.vol1[1].p_start = genericAHU.dynamicHX.p1_start;
  genericAHU.dynamicHX.vol2[1].p_start = genericAHU.dynamicHX.p2_start;
  genericAHU.fanSup.vol.p_start = genericAHU.fanSup.p_start;
  genericAHU.humidifier.vol.p_start = genericAHU.humidifier.p_start;
  if (genericAHU.dynamicHX.vol1[2].dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.    FixedInitial) then 
    if (genericAHU.dynamicHX.vol1[2].dynBal.initialize_p) then 
      genericAHU.dynamicHX.vol1[2].dynBal.medium.p = genericAHU.dynamicHX.vol1[2].dynBal.p_start;
    end if;
  else
    if (genericAHU.dynamicHX.vol1[2].dynBal.massDynamics == Modelica.Fluid.Types.Dynamics.      SteadyStateInitial) then 
      if (genericAHU.dynamicHX.vol1[2].dynBal.initialize_p) then 
        der(genericAHU.dynamicHX.vol1[2].dynBal.medium.p) = 0;
      end if;
    end if;
  end if;
 
This required evaluation of 
the interactive parameters 
    boundaryExhaustAir.p(start = 101325)
    boundarySupplyAir.p(start = 101325)
    genericAHU.dynamicHX.p1_start(start = 101325)
    genericAHU.fanSup.dp_start(start = 0)
    genericAHU.fanSup.p_start(start = 101325)
    genericAHU.humidifier.p_start(start = 101325)
 
The redundancies involve
initial equations: 
  genericAHU.fanSup.motSpe.y = genericAHU.fanSup.motSpe.y_start;
  genericAHU.preheater.dynamicHX.vol1[1].dynBal.medium.p = genericAHU.preheater.dynamicHX.vol1[1].dynBal.p_start;
  genericAHU.preheater.dynamicHX.vol1[2].dynBal.medium.p = genericAHU.preheater.dynamicHX.vol1[2].dynBal.p_start;
  genericAHU.cooler.dynamicHX.vol1[1].dynBal.medium.p = genericAHU.cooler.dynamicHX.vol1[1].dynBal.p_start;
  genericAHU.cooler.dynamicHX.vol1[2].dynBal.medium.p = genericAHU.cooler.dynamicHX.vol1[2].dynBal.p_start;
  genericAHU.heater.dynamicHX.vol1[1].dynBal.medium.p = genericAHU.heater.dynamicHX.vol1[1].dynBal.p_start;
  genericAHU.heater.dynamicHX.vol1[2].dynBal.medium.p = genericAHU.heater.dynamicHX.vol1[2].dynBal.p_start;
  genericAHU.dynamicHX.vol1[1].dynBal.medium.p = genericAHU.dynamicHX.vol1[1].dynBal.p_start;
  genericAHU.dynamicHX.vol1[2].dynBal.medium.p = genericAHU.dynamicHX.vol1[2].dynBal.p_start;
  genericAHU.dynamicHX.vol2[1].dynBal.medium.p = genericAHU.dynamicHX.vol2[1].dynBal.p_start;
  genericAHU.dynamicHX.vol2[2].dynBal.medium.p = genericAHU.dynamicHX.vol2[2].dynBal.p_start;
  genericAHU.fanSup.vol.dynBal.medium.p = genericAHU.fanSup.vol.dynBal.p_start;
  genericAHU.humidifier.vol.dynBal.medium.p = genericAHU.humidifier.vol.dynBal.p_start;
 
 
Statistics
 
Original Model
  Number of components: 1899
  Variables: 22984
  Constants: 432 (432 scalars)
  Parameters: 10972 (11843 scalars)
  Unknowns: 11580 (9389 scalars)
  Differentiated variables: 328 scalars
  Equations: 8547
  Nontrivial: 6690
Translated Model
  Constants: 8241 scalars
  Free parameters: 815 scalars
  Parameter depending: 4205 scalars
  Continuous time states: 251 scalars
  Time-varying variables: 2192 scalars
  Alias variables: 6211 scalars
  Number of mixed real/discrete systems of equations: 0
  Sizes of linear systems of equations: {3, 3, 3, 3, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5,   2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2, 5, 2}
  Sizes after manipulation of the linear systems: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
  Sizes of nonlinear systems of equations: {1, 1, 1, 3, 1, 4, 1, 1, 1, 21, 21, 21}
  Sizes after manipulation of the nonlinear systems: {0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 2, 2}
  Number of numerical Jacobians: 0
  Initialization problem
    Sizes of nonlinear systems of equations: {1, 1, 3, 1, 4, 1, 1, 21, 1, 21, 1, 21, 1}
    Sizes after manipulation of the nonlinear systems: {0, 0, 1, 0, 1, 0, 0, 4, 0, 4, 0, 4, 0}
    Sizes of simplified homotopy nonlinear systems of equations: {3, 1, 4, 1, 21, 1, 21, 1, 21, 1}
    Sizes after manipulation of the simplified homotopy nonlinear systems: {1, 0, 1, 0, 3, 0, 3, 0, 3, 0}
    Number of numerical Jacobians: 0
 
Sparse solvers enabled: false
Enabled for integrator Jacobian: false
Model sparse and large enough: true.
Sparse solvers are available for dassl, lsodar, cvode, ida, radau, esdirk*, sdirk*.
Enable sparse solvers by setting Advanced.Translation.SparseActivate.
Selected continuous time states
Statically selected continuous time states
ctrAHUBasic.ctrCo.PID.D.x
ctrAHUBasic.ctrCo.PID.I.y
ctrAHUBasic.ctrPh.PID.D.x
ctrAHUBasic.ctrPh.PID.I.y
ctrAHUBasic.ctrRh.PID.D.x
ctrAHUBasic.ctrRh.PID.I.y
ctrAHUBasic.PID_VflowRet.D.x
ctrAHUBasic.PID_VflowRet.I.y
ctrAHUBasic.PID_VflowSup.D.x
ctrAHUBasic.PID_VflowSup.I.y
genericAHU.cooler.dynamicHX.heatCapacitor[1].T
genericAHU.cooler.dynamicHX.heatCapacitor[2].T
genericAHU.cooler.dynamicHX.vol1[1].dynBal.medium.Xi[1]
genericAHU.cooler.dynamicHX.vol1[1].dynBal.U
genericAHU.cooler.dynamicHX.vol1[2].dynBal.medium.Xi[1]
genericAHU.cooler.dynamicHX.vol1[2].dynBal.U
genericAHU.cooler.dynamicHX.vol2[1].dynBal.U
genericAHU.cooler.dynamicHX.vol2[2].dynBal.U
genericAHU.cooler.hydraulicModule.junc456.dynBal.U
genericAHU.cooler.hydraulicModule.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe1.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe1.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe1.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.U
genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.U
genericAHU.cooler.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.U
genericAHU.cooler.hydraulicModule.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe2.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe2.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe2.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.U
genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.U
genericAHU.cooler.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.U
genericAHU.cooler.hydraulicModule.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe3.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe3.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe3.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.U
genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.U
genericAHU.cooler.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.U
genericAHU.cooler.hydraulicModule.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe4.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe4.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe4.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.U
genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.U
genericAHU.cooler.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.U
genericAHU.cooler.hydraulicModule.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe5.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe5.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe5.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.U
genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.U
genericAHU.cooler.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.U
genericAHU.cooler.hydraulicModule.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe6.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe6.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe6.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.U
genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.U
genericAHU.cooler.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.U
genericAHU.cooler.hydraulicModule.PT1_a1.y
genericAHU.cooler.hydraulicModule.PT1_a2.y
genericAHU.cooler.hydraulicModule.PT1_b1.y
genericAHU.cooler.hydraulicModule.PT1_b2.y
genericAHU.cooler.hydraulicModule.PumpInterface.pump.motSpe.y
genericAHU.cooler.hydraulicModule.PumpInterface.pump.vol.dynBal.U
genericAHU.cooler.hydraulicModule.senT_a1.T
genericAHU.cooler.hydraulicModule.senT_a2.T
genericAHU.cooler.hydraulicModule.senT_b1.T
genericAHU.cooler.hydraulicModule.senT_b2.T
genericAHU.cooler.hydraulicModule.valve.actPos.y
genericAHU.cooler.hydraulicModule.valve.vol.dynBal.U
genericAHU.cooler.port_a1.p
genericAHU.cooler.port_b1.p
genericAHU.cooler.PT1_airIn.y
genericAHU.cooler.PT1_airOut.y
genericAHU.cooler.senT_airIn.T
genericAHU.cooler.senT_airOut.T
genericAHU.dampBypass.actPos.y
genericAHU.dampHX.actPos.y
genericAHU.dampHX.port_a.p
genericAHU.dynamicHX.heatCapacitor[1].T
genericAHU.dynamicHX.heatCapacitor[2].T
genericAHU.dynamicHX.vol1[1].dynBal.medium.Xi[1]
genericAHU.dynamicHX.vol1[1].dynBal.U
genericAHU.dynamicHX.vol1[2].dynBal.medium.Xi[1]
genericAHU.dynamicHX.vol1[2].dynBal.U
genericAHU.dynamicHX.vol2[1].dynBal.medium.Xi[1]
genericAHU.dynamicHX.vol2[1].dynBal.U
genericAHU.dynamicHX.vol2[2].dynBal.medium.Xi[1]
genericAHU.dynamicHX.vol2[2].dynBal.U
genericAHU.fanRet.motSpe.y
genericAHU.fanRet.vol.dynBal.m
genericAHU.fanRet.vol.dynBal.medium.Xi[1]
genericAHU.fanRet.vol.dynBal.U
genericAHU.fanSup.motSpe.y
genericAHU.fanSup.vol.dynBal.medium.Xi[1]
genericAHU.fanSup.vol.dynBal.U
genericAHU.flapRet.actPos.y
genericAHU.flapSup.actPos.y
genericAHU.heater.dynamicHX.heatCapacitor[1].T
genericAHU.heater.dynamicHX.heatCapacitor[2].T
genericAHU.heater.dynamicHX.vol1[1].dynBal.medium.Xi[1]
genericAHU.heater.dynamicHX.vol1[1].dynBal.U
genericAHU.heater.dynamicHX.vol1[2].dynBal.medium.Xi[1]
genericAHU.heater.dynamicHX.vol1[2].dynBal.U
genericAHU.heater.dynamicHX.vol2[1].dynBal.U
genericAHU.heater.dynamicHX.vol2[2].dynBal.U
genericAHU.heater.hydraulicModule.junc456.dynBal.U
genericAHU.heater.hydraulicModule.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe1.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe1.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe1.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.U
genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.U
genericAHU.heater.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.U
genericAHU.heater.hydraulicModule.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe2.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe2.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe2.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.U
genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.U
genericAHU.heater.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.U
genericAHU.heater.hydraulicModule.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe3.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe3.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe3.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.U
genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.U
genericAHU.heater.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.U
genericAHU.heater.hydraulicModule.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe4.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe4.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe4.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.U
genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.U
genericAHU.heater.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.U
genericAHU.heater.hydraulicModule.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe5.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe5.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe5.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.U
genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.U
genericAHU.heater.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.U
genericAHU.heater.hydraulicModule.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe6.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe6.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe6.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.U
genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.U
genericAHU.heater.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.U
genericAHU.heater.hydraulicModule.PT1_a1.y
genericAHU.heater.hydraulicModule.PT1_a2.y
genericAHU.heater.hydraulicModule.PT1_b1.y
genericAHU.heater.hydraulicModule.PT1_b2.y
genericAHU.heater.hydraulicModule.PumpInterface.pump.motSpe.y
genericAHU.heater.hydraulicModule.PumpInterface.pump.vol.dynBal.U
genericAHU.heater.hydraulicModule.senT_a1.T
genericAHU.heater.hydraulicModule.senT_a2.T
genericAHU.heater.hydraulicModule.senT_b1.T
genericAHU.heater.hydraulicModule.senT_b2.T
genericAHU.heater.hydraulicModule.valve.actPos.y
genericAHU.heater.hydraulicModule.valve.vol.dynBal.U
genericAHU.heater.port_b1.p
genericAHU.heater.PT1_airIn.y
genericAHU.heater.PT1_airOut.y
genericAHU.heater.senT_airIn.T
genericAHU.heater.senT_airOut.T
genericAHU.humidifier.vol.dynBal.medium.Xi[1]
genericAHU.humidifier.vol.dynBal.U
genericAHU.humidifierRet.vol.dynBal.m
genericAHU.humidifierRet.vol.dynBal.medium.Xi[1]
genericAHU.humidifierRet.vol.dynBal.U
genericAHU.preheater.dynamicHX.heatCapacitor[1].T
genericAHU.preheater.dynamicHX.heatCapacitor[2].T
genericAHU.preheater.dynamicHX.vol1[1].dynBal.medium.Xi[1]
genericAHU.preheater.dynamicHX.vol1[1].dynBal.U
genericAHU.preheater.dynamicHX.vol1[2].dynBal.medium.Xi[1]
genericAHU.preheater.dynamicHX.vol1[2].dynBal.U
genericAHU.preheater.dynamicHX.vol2[1].dynBal.U
genericAHU.preheater.dynamicHX.vol2[2].dynBal.U
genericAHU.preheater.hydraulicModule.junc456.dynBal.U
genericAHU.preheater.hydraulicModule.pipe1.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe1.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe1.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe1.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[1].dynBal.U
genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[2].dynBal.U
genericAHU.preheater.hydraulicModule.pipe1.simplePipe.vol[3].dynBal.U
genericAHU.preheater.hydraulicModule.pipe2.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe2.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe2.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe2.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[1].dynBal.U
genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[2].dynBal.U
genericAHU.preheater.hydraulicModule.pipe2.simplePipe.vol[3].dynBal.U
genericAHU.preheater.hydraulicModule.pipe3.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe3.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe3.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe3.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[1].dynBal.U
genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[2].dynBal.U
genericAHU.preheater.hydraulicModule.pipe3.simplePipe.vol[3].dynBal.U
genericAHU.preheater.hydraulicModule.pipe4.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe4.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe4.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe4.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[1].dynBal.U
genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[2].dynBal.U
genericAHU.preheater.hydraulicModule.pipe4.simplePipe.vol[3].dynBal.U
genericAHU.preheater.hydraulicModule.pipe5.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe5.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe5.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe5.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[1].dynBal.U
genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[2].dynBal.U
genericAHU.preheater.hydraulicModule.pipe5.simplePipe.vol[3].dynBal.U
genericAHU.preheater.hydraulicModule.pipe6.Insulation.CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe6.simplePipe.PipeWall[1].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe6.simplePipe.PipeWall[2].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe6.simplePipe.PipeWall[3].CylindricLoad1.heatCapacitor.T
genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[1].dynBal.U
genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[2].dynBal.U
genericAHU.preheater.hydraulicModule.pipe6.simplePipe.vol[3].dynBal.U
genericAHU.preheater.hydraulicModule.PT1_a1.y
genericAHU.preheater.hydraulicModule.PT1_a2.y
genericAHU.preheater.hydraulicModule.PT1_b1.y
genericAHU.preheater.hydraulicModule.PT1_b2.y
genericAHU.preheater.hydraulicModule.PumpInterface.pump.motSpe.y
genericAHU.preheater.hydraulicModule.PumpInterface.pump.vol.dynBal.U
genericAHU.preheater.hydraulicModule.senT_a1.T
genericAHU.preheater.hydraulicModule.senT_a2.T
genericAHU.preheater.hydraulicModule.senT_b1.T
genericAHU.preheater.hydraulicModule.senT_b2.T
genericAHU.preheater.hydraulicModule.valve.actPos.y
genericAHU.preheater.hydraulicModule.valve.vol.dynBal.U
genericAHU.preheater.PT1_airIn.y
genericAHU.preheater.PT1_airOut.y
genericAHU.preheater.senT_airIn.T
genericAHU.preheater.senT_airOut.T
genericAHU.PT1_airIn.y
genericAHU.PT1_airIn1.y
genericAHU.PT1_airIn2.y
genericAHU.PT1_airIn3.y
genericAHU.senRelHumSup.phi
genericAHU.senRelHumSup1.phi
genericAHU.senTExh.T
genericAHU.senTOda.T
genericAHU.senTRet.T
genericAHU.senTSup.T
Finished
Finished
 = true


Declaring variable: Boolean rScript ;

savelog("AixLib.Systems.ModularAHU.Examples.GenericAHU.translation.log");