


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/Examples/ACLine_RL.mo
1: Name 'Rbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rbase. Affected line: parameter Modelica.Units.SI.Resistance Rbase=3*10 "Base value for the line resistance";

2: Name 'Lbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Lbase. Affected line: parameter Modelica.Units.SI.Inductance Lbase=Rbase/2/Modelica.Constants.pi/60 "Base value for the line inductance";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sources/Examples/WindTurbine.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Loads.Resistive res(P_nominal=-500, V_nominal=480) "Resistive line" annotation (Placement(transformation(extent={{-22,-30},{-2,-10}})));Grid sou(f=60, V=480) "Voltage source" annotation (Placement(transformation(extent={{-80,10},{-60,30}})));Sensors.GeneralizedSensor sen "Generalized sensor" annotation (Placement(transformation(extent={{8,-10},{28,10}})));

2: Missing documentation, Name 'line' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: line. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Lines.Line line( l=200, P_nominal=5000, V_nominal=480) annotation (Placement(transformation(extent={{-40,-10},{-20,10}})));


AixLib/Fluid/Movers/BaseClasses/Euler/getPeak.mo
1: Name 'pressure' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pressure. Affected line: input AixLib.Fluid.Movers.BaseClasses.Characteristics.flowParameters pressure "Pressure vs. flow rate";

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: input BaseClasses.Characteristics.powerParameters power "Power vs. flow rate";

3: Name 'peak' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: peak. Affected line: output AixLib.Fluid.Movers.BaseClasses.Euler.peak peak "Operation point at maximum efficiency";

4: Name 'V_flow_hal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: V_flow_hal. Affected line: parameter Modelica.Units.SI.VolumeFlowRate V_flow_hal= if max(pressure.V_flow) < 1E-6 then 0 else (pressure.V_flow[nPre] -(pressure.V_flow[nPre] - pressure.V_flow[nPre - 1]) /(pressure.dp[nPre] - pressure.dp[nPre - 1]) * pressure.dp[nPre])/2 "Half of max flow, max flow is where dp=0";

5: Name 'b' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: b. Affected line: Real b[5] "Parameter vector";

6: Name 'r' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: r. Affected line: Real r[3,2] "Roots";


AixLib/Electrical/Transmission/Grids/PartialGrid.mo
1: Name 'nNodes' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Nodes. Affected line: parameter Integer nNodes "Number of nodes of the grid";

2: Name 'nLinks' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Links. Affected line: parameter Integer nLinks "Number of links connecting the nodes";

3: Name 'fromTo' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: from. Affected line: parameter Integer fromTo[nLinks,2] "Indexes [i,1]->[i,2] of the nodes connected by link i";

4: Name 'l' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: l. Affected line: parameter Modelica.Units.SI.Length l[nLinks,1](each min=0) "Length of the cable";

5: Name 'cables' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cables. Affected line: replaceable AixLib.Electrical.Transmission.BaseClasses.BaseCable cables[nLinks] "Array that contains the characteristics of each cable";


AixLib/Fluid/SolarCollectors/Validation/FlatPlateNPanels.mo
1: Name 'nPanels' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Panels. Affected line: parameter Integer nPanels = 10 "Number of panels";

2: Name 'gaiNPan' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: N. Affected line: Modelica.Blocks.Math.Gain gaiNPan(k=nPanels) "Gain for number of panels" annotation (Placement(transformation(extent={{-50,-30},{-30,-10}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/BaseClasses/BaseLoadCtrl.mo
1: Name 'loadConn' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load, Conn. Affected line: parameter AixLib.Electrical.Types.LoadConnection loadConn= AixLib.Electrical.Types.LoadConnection.wye_to_wyeg "Type of load connection (Yg or D)";

2: Name 'mode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mode. Affected line: parameter AixLib.Electrical.Types.Load mode( min=AixLib.Electrical.Types.Load.FixedZ_steady_state, max=AixLib.Electrical.Types.Load.VariableZ_y_input)= AixLib.Electrical.Types.Load.FixedZ_steady_state "Parameters that specifies the mode of the load (e.g., steady state, dynamic, prescribed power consumption, etc.)" annotation(Dialog(group="Modeling assumption"));

3: Name 'voltageCtrl' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: voltage, Ctrl. Affected line: parameter Boolean voltageCtrl = false "This flag enables the voltage control" annotation(Evaluate=true, Dialog(group="Voltage CTRL"));

4: Name 'vThresh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v, Thresh. Affected line: parameter Real vThresh(min=0.0, max=1.0) = 0.1 "Threshold that activates voltage ctrl (ratio of nominal voltage)" annotation(Dialog(group="Voltage CTRL", enable = voltageCtrl));

5: Name 'tDelay' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: t, Delay. Affected line: parameter Modelica.Units.SI.Time tDelay=300 "Time to wait before plugging the load again after disconnection" annotation (Dialog(group="Voltage CTRL", enable=voltageCtrl));

6: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: parameter Types.InitMode initMode=AixLib.Electrical.Types.InitMode.zero_current "Initialization mode for homotopy operator" annotation (Dialog(tab="Initialization"));

7: Name 'load1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: replaceable AixLib.Electrical.Interfaces.Load load1( redeclare package PhaseSystem = AixLib.Electrical.PhaseSystems.OnePhase, redeclare AixLib.Electrical.AC.OnePhase.Interfaces.Terminal_n terminal, final linearized=linearized, final mode=mode, final P_nominal = P_nominal, final V_nominal=V_nominal/sqrt(3), final initMode=initMode) if plugPhase1 "Load 1" annotation (Placement(transformation(extent={{-10,40},{10,60}})));

8: Name 'load2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: replaceable AixLib.Electrical.Interfaces.Load load2( redeclare package PhaseSystem = AixLib.Electrical.PhaseSystems.OnePhase, redeclare AixLib.Electrical.AC.OnePhase.Interfaces.Terminal_n terminal, final linearized=linearized, final mode=mode, final P_nominal = P_nominal, final V_nominal=V_nominal/sqrt(3), final initMode=initMode) if plugPhase2 "Load 2" annotation (Placement(transformation(extent={{-10,-30},{10,-10}})));

9: Name 'load3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load3. Affected line: replaceable AixLib.Electrical.Interfaces.Load load3( redeclare package PhaseSystem = AixLib.Electrical.PhaseSystems.OnePhase, redeclare AixLib.Electrical.AC.OnePhase.Interfaces.Terminal_n terminal, final linearized=linearized, final mode=mode, final P_nominal = P_nominal, final V_nominal=V_nominal/sqrt(3), final initMode=initMode) if plugPhase3 "Load 3" annotation (Placement(transformation(extent={{-10,-98},{10,-78}})));

10: Name 'y3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y3. Affected line: Modelica.Blocks.Interfaces.RealInput y3 if plugPhase3 and mode == AixLib.Electrical.Types.Load.VariableZ_y_input "Fraction of the nominal power consumed" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=180, origin={120,-80}), iconTransformation( extent={{-20,-20},{20,20}}, rotation=180, origin={120,-80})));

11: Name 'Pow3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Pow3. Affected line: Modelica.Blocks.Interfaces.RealInput Pow3(unit="W") if plugPhase3 and mode == AixLib.Electrical.Types.Load.VariableZ_P_input "Power consumed" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=180, origin={120,-80}), iconTransformation( extent={{-20,-20},{20,20}}, rotation=180, origin={120,-80})));

12: Name 'vCTRL_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v, L_. Affected line: AixLib.Electrical.Utilities.VoltageControl vCTRL_1( redeclare package PhaseSystem = AixLib.Electrical.PhaseSystems.OnePhase, redeclare AixLib.Electrical.AC.OnePhase.Interfaces.Terminal_n terminal, vThresh=vThresh, tDelay=tDelay, V_nominal=V_nominal/sqrt(3)) if plugPhase1 and voltageCtrl "Voltage controller for load 1" annotation (Placement(transformation(extent={{10,80},{30,100}})));

13: Name 'vCTRL_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v, L_. Affected line: AixLib.Electrical.Utilities.VoltageControl vCTRL_2( redeclare package PhaseSystem = AixLib.Electrical.PhaseSystems.OnePhase, redeclare AixLib.Electrical.AC.OnePhase.Interfaces.Terminal_n terminal, vThresh=vThresh, tDelay=tDelay, V_nominal=V_nominal/sqrt(3)) if plugPhase2 and voltageCtrl "Voltage controller for load 2" annotation (Placement(transformation(extent={{10,10},{30,30}})));

14: Name 'vCTRL_3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: AixLib.Electrical.Utilities.VoltageControl vCTRL_3( redeclare package PhaseSystem = AixLib.Electrical.PhaseSystems.OnePhase, redeclare AixLib.Electrical.AC.OnePhase.Interfaces.Terminal_n terminal, vThresh=vThresh, tDelay=tDelay, V_nominal=V_nominal/sqrt(3)) if plugPhase3 and voltageCtrl "Voltage controller for load 3" annotation (Placement(transformation(extent={{10,-60},{30,-40}})));

15: Name 'cmd3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cmd3. Affected line: Modelica.Blocks.Math.Product cmd3 if plugPhase3 and voltageCtrl "Block that impose voltage ctrl" annotation (Placement(transformation(extent={{56,-80},{36,-60}})));

16: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Interfaces.WyeToDelta wyeToDelta if (loadConn == AixLib.Electrical.Types.LoadConnection.wye_to_delta) "Wye to delta load connection" annotation (Placement(transformation(extent={{-54,0},{-34,20}})));

17: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Interfaces.WyeToWyeGround wyeToWyeGround if (loadConn == AixLib.Electrical.Types.LoadConnection.wye_to_wyeg) "Wye to wye grounded connection" annotation (Placement(transformation(extent={{-54,-20},{-34,0}})));

18: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: protected Interfaces.Adapter3to3 adaDel if (loadConn == AixLib.Electrical.Types.LoadConnection.wye_to_delta) "Adapter" annotation (Placement(transformation(extent={{-40,-50},{-60,-30}})));

19: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Interfaces.Adapter3to3 adaWye if (loadConn == AixLib.Electrical.Types.LoadConnection.wye_to_wyeg) "Adapter" annotation (Placement(transformation(extent={{-40,-80},{-60,-60}})));


AixLib/Utilities/Clustering/Validation/KMeans_2d.mo
1: Name 'n_clusters' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_clusters. Affected line: parameter Integer n_clusters = 3 "Number of clusters to be generated";

2: Name 'data' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: data. Affected line: parameter Real data[:,:]= [ 1, 1;1, 2;2, 1;2, 1.2;3, 0;4, 0] "Test data to be clustered";

3: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: parameter Real[n_clusters,nDim] centroids(each fixed=false) "Centroids of the clusters";parameter Integer[nDat] labels(each fixed=false) "Cluster label associated with each data point";parameter Integer[n_clusters] cluster_size(each fixed=false) "Size of the clusters";

4: Name 'labelsExp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: labels. Affected line: parameter Integer labelsExp[nDat]= {2,2,1,2,1,3} "Expected cluster labels";

5: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: initial equation (centroids, labels, cluster_size) = AixLib.Utilities.Clustering.KMeans( data, n_clusters, nDat, nDim);


AixLib/Electrical/AC/OnePhase/Examples/GridDCLoad.mo
1: Missing documentation, Name 'grid' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: grid. Affected line: AixLib.Electrical.AC.OnePhase.Sources.Grid grid( f=60, phiSou=0, V=120) annotation (Placement(transformation(extent={{-80,-20},{-60,0}})));

2: Missing documentation, Name 'idealACDCConverter1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ideal, D, Converter. Affected line: AixLib.Electrical.AC.OnePhase.Conversion.ACDCConverter idealACDCConverter1( eta=0.9, ground_AC=false, conversionFactor=12/120) annotation (Placement(transformation(extent={{-50,-40},{-30,-20}})));

3: Missing documentation, Name 'resistor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: resistor. Affected line: AixLib.Electrical.DC.Loads.Resistor resistor(R=1, V_nominal=12) annotation (Placement( transformation( extent={{-10,-10},{10,10}}, origin={10,-30})));


AixLib/Fluid/Chillers/ModularReversible/Examples/Modular.mo
1: Name 'MediumCon' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package MediumCon = AixLib.Media.Air "Medium model for condenser";

2: Name 'MediumEva' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package MediumEva = AixLib.Media.Water "Medium model for evaporator";


AixLib/Electrical/AC/OnePhase/Loads/Inductive.mo
1: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: initial equation if mode == AixLib.Electrical.Types.Load.FixedZ_dynamic then // psi = Z[2]*{P_nominal/V_nominal, 0}/omega;


AixLib/Fluid/Geothermal/Borefields/BaseClasses/HeatTransfer/ThermalResponseFactors/clusterBoreholes.mo
1: Name 'rBor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: r. Affected line: input Modelica.Units.SI.Radius rBor "Borehole radius";

2: Name 'labels' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: labels. Affected line: output Integer labels[nBor] "Cluster label associated with each data point";

3: Name 'N' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: N. Affected line: output Integer N "Number of unique clusters";

4: Name 'TBor_Unique' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Bor_, Unique. Affected line: Modelica.Units.SI.Temperature TBor_Unique[nBor] "Unique borehole wall temperatures under tolerance";


AixLib/Electrical/PhaseSystems/OnePhase.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends systemVoltage "Return system voltage as function of phase voltages" algorithm V := Modelica.Fluid.Utilities.regRoot(v*v, delta = 1e-5);

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends systemCurrent "Return system current as function of phase currents" algorithm I := Modelica.Fluid.Utilities.regRoot(i*i, delta = 1e-5);


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sensors/ProbeWye_N.mo
1: Name 'term' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: term. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.Terminal4_n term "Electrical connector" annotation ( Placement(transformation( extent={{-10,-10},{10,10}}, rotation=90, origin={0,-90})));


AixLib/Electrical/Transmission/BaseClasses/PartialNetwork.mo
1: Name 'grid' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: grid. Affected line: replaceable parameter AixLib.Electrical.Transmission.Grids.PartialGrid grid "Record that describe the grid with the number of nodes, links, connections, etc." annotation (choicesAllMatching=true, Placement(transformation(extent={{40,60},{60,80}})));

2: Name 'lines' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: lines. Affected line: replaceable AixLib.Electrical.Transmission.BaseClasses.PartialBaseLine lines[grid.nLinks]( each mode=AixLib.Electrical.Types.CableMode.commercial, l={grid.l[i, 1] for i in 1:grid.nLinks}, each P_nominal=1000, each V_nominal=V_nominal) "Array of line models, each line connecting two nodes of the grid";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sources/FixedVoltage_N.mo
1: Name 'f' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: parameter Modelica.Units.SI.Frequency f(start=60) "Frequency of the source";

2: Name 'potentialReference' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: potential, Reference. Affected line: parameter Boolean potentialReference = true "Serve as potential root for the reference angle theta" annotation (Evaluate=true, Dialog(group="Reference Parameters"));

3: Name 'definiteReference' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: definite, Reference. Affected line: parameter Boolean definiteReference = false "Serve as definite root for the reference angle theta" annotation (Evaluate=true, Dialog(group="Reference Parameters"));

4: Name 'angle120' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: angle120. Affected line: constant Modelica.Units.SI.Angle angle120=2*Modelica.Constants.pi/3 "Phase shift between the phase voltages";


AixLib/Fluid/SolarCollectors/BaseClasses/ASHRAEHeatLoss.mo
1: Name 'slope' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: slope. Affected line: parameter Modelica.Units.SI.CoefficientOfHeatTransfer slope(final max=0) "Slope from ratings data";


AixLib/Electrical/DC/Loads/Resistor.mo
1: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref=300.15 "Reference temperature";

2: Name 'alpha' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: alpha. Affected line: parameter Modelica.Units.SI.LinearTemperatureCoefficient alpha=0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";

3: Name 'R_actual' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: R_actual. Affected line: Modelica.Units.SI.Resistance R_actual "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";


AixLib/Electrical/AC/OnePhase/Conversion/Examples/ACACConverter.mo
1: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Inductive load( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, V_nominal=60) "Load model" annotation (Placement(transformation(extent={{24,0},{44,20}})));

2: Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( duration=0.5, startTime=0.3, height=2000, offset=-1000) "Power consumed by the model" annotation (Placement(transformation(extent={{80,0},{60,20}})));


AixLib/Fluid/SolarCollectors/Validation/EN12975_Array.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = AixLib.Media.Water "Medium in the system";

2: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: model Collector extends AixLib.Fluid.SolarCollectors.EN12975( redeclare final package Medium = AixLib.Media.Water, final show_T = true, final per=AixLib.Fluid.SolarCollectors.Data.GlazedFlatPlate.FP_VerificationModel(), final shaCoe=0, final azi=0, final energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial, final rho=0.2, final nColType=AixLib.Fluid.SolarCollectors.Types.NumberSelection.Number, nPanels=1, final til=0.78539816339745, final use_shaCoe_in=false, sysConfig=AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Series);

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sensors.TemperatureTwoPort senTem( redeclare package Medium = Medium, tau=0, m_flow_nominal=m_flow_nominal) "Temperature sensor" annotation (Placement(transformation(extent={{20,40},{40,20}})));Sensors.TemperatureTwoPort senTem1( redeclare package Medium = Medium, tau=0, m_flow_nominal=m_flow_nominal) "Temperature sensor" annotation (Placement(transformation(extent={{20,-20},{40,-40}})));


AixLib/Fluid/SolarCollectors/Controls/BaseClasses/Examples/GCritCalc.mo
1: Missing documentation. Affected line: Modelica.Blocks.Sources.Sine TEnv( amplitude=10, f=0.1, offset=10) annotation (Placement(transformation(extent={{-80,20},{-60,40}})));

2: Missing documentation. Affected line: Modelica.Blocks.Sources.Sine TIn( amplitude=10, f=0.01, offset=30) annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));


AixLib/Fluid/Chillers/ModularReversible/BaseClasses/RefrigerantCycle.mo
1: Name 'allowDifferentDeviceIdentifiers' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: allow, Different, Device, Identifiers. Affected line: parameter Boolean allowDifferentDeviceIdentifiers=false "if use_rev=true, device data for cooling and heating need to entered. Set allowDifferentDeviceIdentifiers=true to allow different device identifiers devIde" annotation(Dialog(enable=use_rev));

2: Name 'RefrigerantCycleChillerCooling' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Refrigerant, Cycle, Chiller, Cooling. Affected line: replaceable model RefrigerantCycleChillerCooling = AixLib.Fluid.Chillers.ModularReversible.RefrigerantCycle.BaseClasses.NoCooling( useInChi=true) constrainedby AixLib.Fluid.Chillers.ModularReversible.RefrigerantCycle.BaseClasses.PartialChillerCycle "Replaceable model for refrigerant cycle of a chiller in main operation mode" annotation (choicesAllMatching=true);

3: Name 'RefrigerantCycleChillerHeating' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Refrigerant, Cycle, Chiller, Heating. Affected line: replaceable model RefrigerantCycleChillerHeating = AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.BaseClasses.NoHeating( useInHeaPum=true) constrainedby AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.BaseClasses.PartialHeatPumpCycle "Replaceable model for refrigerant cycle of a chiller in reversed operation mode" annotation (Dialog(enable=use_rev),choicesAllMatching=true);

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: RefrigerantCycleChillerCooling refCycChiCoo "Refrigerant cycle instance for cooling" annotation (Placement(transformation(extent={{21,40},{60,80}}, rotation=0)));RefrigerantCycleChillerHeating refCycChiHea "Refrigerant cycle instance for heating" annotation (Placement(transformation(extent={{-60,38},{-19,80}}, rotation=0)));


AixLib/ThermalZones/ISO13790/Validation/BESTEST/Case600.mo
1: Missing documentation, Name 'multiplex2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: multiplex. Affected line: Modelica.Blocks.Routing.Multiplex2 multiplex2 annotation ( Placement(visible = true, transformation(extent={{38,56},{46,64}}, rotation = 0)));

2: Name 'daiComBESTEST' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B, S, S. Affected line: Modelica.Blocks.Sources.CombiTimeTable daiComBESTEST(table=[0,0,0,0,0,0,0,0;259200,0,0,0,0,0,0,0; 262800,3250,3800,3930,4130,3930,3770,4230; 266400, 3410,3910,4040,4260,4040,3870,4350; 270000,3390,3870,4010,4230,4000, 3900,4320; 273600,3380,3920,4040,4220,4000,3890,4310; 277200,3420,3940, 4050,4220,4000,3920,4300; 280800,3430,3930,4040,4220,4000,3930,4310;284400,3420,3940,4050,4220,4000,3930,4310; 288000,3340,3700,3860,4090, 3900,3750,4170; 291600,2770,2680,2560,2900,2710,2420,2910; 295200,1500, 1380,840,1280,1150,800,1470; 298800,150,0,0,0,0,-30,0; 302400,-770,-1230, -1550,-1070,-1040,-1440,-420; 306000,-2660,-2490,-2850,-2590,-2500,-2720, -2360; 309600,-3580,-2960,-3400,-3230,-3090,-3160,-2760; 313200,-3530,-2630, -3120,-2830,-2640,-2840,-2430; 316800,-2440,-1350,-1820,-1550,-1350,-1720, -1140; 320400,-360,0,0,0,0,0,0; 324000,240,950,780,800,880,770,1290;327600,1530,2380,2230,2340,2330,2300,2450; 331200,2320,2870,2930,2990, 2950,2970,2940; 334800,2640,3210,3320,3370,3310,3280,3410; 338400,2900, 3280,3490,3530,3350,3460,3590; 342000,3020,3330,3510,3610,3490,3500, 3700; 345600,3010,3390,3560,3660,3530,3470,3770; 345600,0,0,0,0,0,0,0;3153600,0,0,0,0,0,0,0]) "Daily comparison BESTEST" annotation (Placement(transformation(extent={{60,-80},{80,-60}})));

3: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Zone5R1C.Zone zon5R1C( airRat=0.5, AWin={0,0,12,0}, UWin=2.984, AWal={21.6,16.2,9.6,16.2}, ARoo=48, UWal=0.56, URoo=0.33, UFlo=1, b=0, AFlo=48, VRoo=129.6, hInt=2.74, redeclare replaceable AixLib.ThermalZones.ISO13790.Validation.BESTEST.Data.Case600Mass buiMas, nOrientations=4, surTil={1.5707963267949,1.5707963267949,1.5707963267949,1.5707963267949}, surAzi={3.1415926535898,-1.5707963267949,0,1.5707963267949}, gFac=0.789) annotation (Placement(transformation(extent={{-14,-14},{14,14}})));

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BoundaryConditions.WeatherData.ReaderTMY3 weaDat(filNam= Modelica.Utilities.Files.loadResource( "modelica://AixLib/Resources/weatherdata/DRYCOLD.mos")) "Weather data" annotation (Placement(transformation(extent={{-80,10},{-60,30}})));

5: Name 'annComBESTEST' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B, S, S. Affected line: AixLib.ThermalZones.ISO13790.Validation.BESTEST.Data.Case600Results annComBESTEST "Annual comparison BESTEST " annotation (Placement(transformation(extent={{20,-80},{40,-60}})));


AixLib/Fluid/HeatPumps/ModularReversible/BaseClasses/PartialReversibleRefrigerantMachine.mo
1: Name 'MediumEva' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package MediumEva = Modelica.Media.Interfaces.PartialMedium "Medium on evaporator side" annotation (choicesAllMatching=true);

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable PartialModularRefrigerantCycle refCyc constrainedby PartialModularRefrigerantCycle(final use_rev=use_rev) "Model of the refrigerant cycle" annotation (Placement(transformation( extent={{-18,-18},{18,18}}, rotation=90)));

3: Name 'RefrigerantCycleInertia' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Refrigerant, Cycle, Inertia. Affected line: replaceable model RefrigerantCycleInertia = AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.Inertias.NoInertia constrainedby AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.Inertias.BaseClasses.PartialInertia "Inertia between the refrigerant cycle outputs and the heat exchangers." annotation (choicesAllMatching=true, Dialog(group="Inertia"));

4: Name 'allowDifferentDeviceIdentifiers' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: allow, Different, Device, Identifiers. Affected line: parameter Boolean allowDifferentDeviceIdentifiers=false "if use_rev=true, device data for cooling and heating need to entered. Set allowDifferentDeviceIdentifiers=true to allow different device identifiers devIde" annotation(Dialog(tab="Advanced", enable=use_rev));

5: Name 'GConOut' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G. Affected line: parameter Modelica.Units.SI.ThermalConductance GConOut=0 "Outer thermal conductance for condenser heat loss calculations" annotation (Dialog( group="Heat Losses", tab="Condenser", enable=use_conCap));

6: Name 'GConIns' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G. Affected line: parameter Modelica.Units.SI.ThermalConductance GConIns=0 "Inner thermal conductance for condenser heat loss calculations" annotation (Dialog( group="Heat Losses", tab="Condenser", enable=use_conCap));

7: Name 'GEvaOut' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G. Affected line: parameter Modelica.Units.SI.ThermalConductance GEvaOut=0 "Outer thermal conductance for evaporator heat loss calculations" annotation ( Dialog( group="Heat Losses", tab="Evaporator", enable=use_evaCap));

8: Name 'GEvaIns' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G. Affected line: parameter Modelica.Units.SI.ThermalConductance GEvaIns=0 "Inner thermal conductance for evaporator heat loss calculations" annotation ( Dialog( group="Heat Losses", tab="Evaporator", enable=use_evaCap));

9: Name 'allowFlowReversalCon' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: allow, Reversal. Affected line: parameter Boolean allowFlowReversalCon=true "= false to simplify equations, assuming, but not enforcing, no flow reversal" annotation (Dialog(group="Condenser", tab="Assumptions"));

10: Name 'Q1_flow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Q1. Affected line: Modelica.Units.SI.HeatFlowRate Q1_flow = QCon_flow "Heat transferred into the medium 1";

11: Name 'Q2_flow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Q2. Affected line: Modelica.Units.SI.HeatFlowRate Q2_flow = QEva_flow "Heat transferred into the medium 2";

12: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: RefrigerantCycleInertia refCycIneCon "Inertia model for condenser side" annotation(Placement(transformation( extent={{-10,-10},{10,10}}, rotation=90, origin={0,50})));RefrigerantCycleInertia refCycIneEva "Inertia model for evaporator side" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={0,-50})));


AixLib/Electrical/AC/OnePhase/Lines/Examples/ACSimpleGrid.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Network network( redeclare AixLib.Electrical.Transmission.Grids.TestGrid2Nodes grid, V_nominal=120) "Network model that represents the connection between the source and the load" annotation (Placement(transformation(extent={{20,-10},{0,10}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Loads.Inductive load( mode=Types.Load.VariableZ_P_input, V_nominal=120) "Load connected to the network" annotation (Placement(transformation(extent={{-28,10},{-48,30}})));Sources.FixedVoltage E(f=60, V=120) "Voltage source" annotation (Placement(transformation( extent={{10,-10},{-10,10}}, rotation=180, origin={-70,0})));

3: Name 'load_inputs' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load_inputs. Affected line: Modelica.Blocks.Sources.Ramp load_inputs( height=5000, duration=2, offset=-2000, startTime=0.5) "Input signal for the power consumption of the loads" annotation (Placement(transformation(extent={{-80,20},{-60,40}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/BaseClasses/PartialConverter.mo
1: Name 'conv1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: conv. Affected line: replaceable AixLib.Electrical.Interfaces.PartialConversion conv1 constrainedby AixLib.Electrical.Interfaces.PartialConversion( redeclare package PhaseSystem_p = AixLib.Electrical.PhaseSystems.OnePhase, redeclare package PhaseSystem_n = AixLib.Electrical.PhaseSystems.OnePhase, redeclare Electrical.AC.OnePhase.Interfaces.Terminal_n terminal_n, redeclare Electrical.AC.OnePhase.Interfaces.Terminal_p terminal_p) "Transformer phase 1" annotation (Placement(transformation(extent={{-10,42},{10,62}})));

2: Name 'conv2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: conv. Affected line: replaceable AixLib.Electrical.Interfaces.PartialConversion conv2 constrainedby AixLib.Electrical.Interfaces.PartialConversion( redeclare package PhaseSystem_p = AixLib.Electrical.PhaseSystems.OnePhase, redeclare package PhaseSystem_n = AixLib.Electrical.PhaseSystems.OnePhase, redeclare Electrical.AC.OnePhase.Interfaces.Terminal_n terminal_n, redeclare Electrical.AC.OnePhase.Interfaces.Terminal_p terminal_p) "Transformer phase 2" annotation (Placement(transformation(extent={{-10,-10},{10,10}})));

3: Name 'conv3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: conv3. Affected line: replaceable AixLib.Electrical.Interfaces.PartialConversion conv3 constrainedby AixLib.Electrical.Interfaces.PartialConversion( redeclare package PhaseSystem_p = AixLib.Electrical.PhaseSystems.OnePhase, redeclare package PhaseSystem_n = AixLib.Electrical.PhaseSystems.OnePhase, redeclare Electrical.AC.OnePhase.Interfaces.Terminal_n terminal_n, redeclare Electrical.AC.OnePhase.Interfaces.Terminal_p terminal_p) "Transformer phase 3" annotation (Placement(transformation(extent={{-10,-70},{10,-50}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Interfaces/Examples/WyeToDelta.mo
1: Name 'wyeToDelta' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Delta. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToDelta wyeToDelta "Conversion of the voltages from Y to D" annotation (Placement(transformation(extent={{-10,-10},{10,10}})));

2: Name 'probe_Y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: probe_, Y. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Sensors.ProbeWye probe_Y(perUnit= false, V_nominal=480) "Probe that measures the voltage and the angles on each phase" annotation (Placement(transformation(extent={{-30,10},{-10,30}})));

3: Name 'probeD' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: probe, D. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Sensors.ProbeWye probeD(perUnit= false, V_nominal=480) "Probe that measures the voltage and the angles on each phase" annotation (Placement(transformation(extent={{10,10},{30,30}})));


AixLib/Electrical/Transmission/Functions/computeGMD.mo
1: Name 'd3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: d3. Affected line: input Modelica.Units.SI.Length d3=2*d1 "Distance between conductors";

2: Name 'GMD' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G, M, D. Affected line: output Modelica.Units.SI.Length GMD "Geometric Mean Distance";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/Examples/ACLine_L_N.mo
1: Name 'Lbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Lbase. Affected line: parameter Modelica.Units.SI.Inductance Lbase=10/2/Modelica.Constants.pi/60 "Base value for the line inductances";


AixLib/Electrical/DC/Lines/Examples/DCLines.mo
1: Name 'linearLoads' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: linear, Loads. Affected line: parameter Boolean linearLoads = false "Flag that selects between linearized or nonlinear load models";

2: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Real L = 10 "Length of each cable";

3: Name 'Sloads' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Sloads. Affected line: Modelica.Units.SI.Power Sloads=load1.S[1] + load2.S[1] + load3.S[1] + load4.S[ 1] + load5.S[1] + load6.S[1] + load7.S[1] + load8.S[1] + load9.S[1] + load10.S[1] "Sum of the power consumed by the loads";

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line line( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L, terminal_n(v(each start=0))) "Transmission line" annotation (Placement(transformation(extent={{-2,70},{18,90}})));Sources.ConstantVoltage E(V=50) "Voltage source" annotation (Placement(transformation(extent={{-90,70},{-70,90}})));Line line1( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{-32,70},{-12,90}})));Line line2( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{-34,30},{-14,50}})));

5: Missing documentation, Name 'ground' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground. Affected line: Modelica.Electrical.Analog.Basic.Ground ground annotation (Placement(transformation(extent={{-100,50},{-80,70}})));

6: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Loads.Conductor load1(mode=Types.Load.VariableZ_y_input, V_nominal=50, linearized=linearLoads, P_nominal=-150) "Load" annotation (Placement(transformation(extent={{30,70},{50,90}})));Loads.Conductor load2( V_nominal=50, mode=Types.Load.VariableZ_y_input, linearized=linearLoads, P_nominal=-120) "Load" annotation (Placement(transformation(extent={{30,50},{50,70}})));Loads.Conductor load3( V_nominal=50, mode=Types.Load.VariableZ_y_input, linearized=linearLoads, P_nominal=-200) "Load" annotation (Placement(transformation(extent={{30,30},{50,50}})));

7: Name 'varLoad1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Load. Affected line: Modelica.Blocks.Sources.Trapezoid varLoad1( offset=0.4, amplitude=0.6, rising=600, width=1000, falling=800, period=3600, startTime=1800) "Power consumption profile" annotation (Placement(transformation(extent={{86,30},{66,50}})));

8: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Loads.Conductor load4( V_nominal=50, mode=Types.Load.VariableZ_y_input, linearized=linearLoads, P_nominal=-120) "Load" annotation (Placement(transformation(extent={{30,12},{50,32}})));Line line3( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{2,30},{22,50}})));Line line4( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{0,50},{20,70}})));Line line5( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{2,12},{22,32}})));Line line0( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{-64,70},{-44,90}})));

9: Name 'varLoad2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Load. Affected line: Modelica.Blocks.Sources.Trapezoid varLoad2( startTime=1800, amplitude=0.8, rising=400, width=1300, falling=900, period=4000, offset=0.1) "Power consumption profile" annotation (Placement(transformation(extent={{86,70},{66,90}})));

10: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line line6( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{-34,-10},{-14,10}})));Loads.Conductor load5( V_nominal=50, mode=Types.Load.VariableZ_y_input, linearized=linearLoads, P_nominal=-200) "Load" annotation (Placement(transformation(extent={{30,-10},{50,10}})));

11: Name 'varLoad3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Load3. Affected line: Modelica.Blocks.Sources.Trapezoid varLoad3( amplitude=0.7, rising=660, width=900, falling=300, period=3700, offset=0.3, startTime=200) "Power consumption profile" annotation (Placement(transformation(extent={{86,-10},{66,10}})));

12: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Loads.Conductor load6( V_nominal=50, mode=Types.Load.VariableZ_y_input, linearized=linearLoads, P_nominal=-120) "Load" annotation (Placement(transformation(extent={{30,-28},{50,-8}})));Line line7( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{2,-10},{22,10}})));Line line8( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{2,-28},{22,-8}})));Line line9( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{-34,-50},{-14,-30}})));Loads.Conductor load7( V_nominal=50, mode=Types.Load.VariableZ_y_input, linearized=linearLoads, P_nominal=-200) "Load" annotation (Placement(transformation(extent={{30,-50},{50,-30}})));

13: Name 'varLoad4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Load4. Affected line: Modelica.Blocks.Sources.Trapezoid varLoad4( rising=600, width=1000, falling=800, period=3600, amplitude=0.1, offset=0.8, startTime=3300) "Power consumption profile" annotation (Placement(transformation(extent={{86,-50},{66,-30}})));

14: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Loads.Conductor load8( V_nominal=50, mode=Types.Load.VariableZ_y_input, linearized=linearLoads, P_nominal=-120) "Load" annotation (Placement(transformation(extent={{30,-68},{50,-48}})));Line line10( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{2,-50},{22,-30}})));Line line11( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{2,-68},{22,-48}})));Line line12( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=L) "Transmission line" annotation (Placement(transformation(extent={{-34,-90},{-14,-70}})));Loads.Conductor load9( V_nominal=50, mode=Types.Load.VariableZ_y_input, linearized=linearLoads, P_nominal=-200) "Load" annotation (Placement(transformation(extent={{30,-90},{50,-70}})));

15: Name 'varLoad5' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Load5. Affected line: Modelica.Blocks.Sources.Trapezoid varLoad5( falling=800, amplitude=0.5, rising=800, width=800, period=3000, offset=0.5, startTime=0) "Power consumption profile" annotation (Placement(transformation(extent={{86,-90},{66,-70}})));


AixLib/Fluid/SolarCollectors/Examples/FlatPlateTotalArea.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = AixLib.Media.Water "Medium in the system";


AixLib/Fluid/Chillers/ModularReversible/Validation/BaseClasses/PartialModularComparison.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Modular chi( redeclare final package MediumCon = Medium1, redeclare final package MediumEva = Medium2, QCoo_flow_nominal=-QUse_flow_nominal, redeclare final model RefrigerantCycleInertia = AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.Inertias.NoInertia, final use_rev=false, final use_intSafCtr=false, final tauCon=tau1, final TConCoo_nominal=TCon_nominal, final dTCon_nominal=dTCon_nominal, final dpCon_nominal=dp1_nominal, final use_conCap=false, final CCon=0, final GConOut=0, final TEvaHea_nominal=0, final TConHea_nominal=0, final GConIns=0, final tauEva=tau2, final TEvaCoo_nominal=TEva_nominal, final dTEva_nominal=dTEva_nominal, final dpEva_nominal=dp2_nominal, final use_evaCap=false, final CEva=0, final GEvaOut=0, final GEvaIns=0, final TCon_start=T1_start, final TEva_start=T2_start, final energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial) "Modular chiller model" annotation (Placement(transformation(extent={{-8,-10},{12,10}})));


AixLib/Electrical/Interfaces/Source.mo
1: Name 'potentialReference' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: potential, Reference. Affected line: parameter Boolean potentialReference = true "Serve as potential root for the reference angle theta" annotation (Evaluate=true, Dialog(group="Reference Parameters"));

2: Name 'definiteReference' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: definite, Reference. Affected line: parameter Boolean definiteReference = false "Serve as definite root for the reference angle theta" annotation (Evaluate=true, Dialog(group="Reference Parameters"));

3: Name 'S' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: S. Affected line: Modelica.Units.SI.Power S[PhaseSystem.n]=PhaseSystem.phasePowers_vi(terminal.v, terminal.i) "Complex power S[1] = P, S[2]= Q";


AixLib/Fluid/Movers/Validation/ComparePowerInput.mo
1: Name 'exp_dp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: exp_dp. Affected line: Modelica.Blocks.Sources.RealExpression exp_dp(y=mov1.dpMachine) "Expression to impose the same pressure rise" annotation (Placement(transformation(extent={{-60,-10},{-40,10}})));

2: Name 'exp_m_flow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: exp_m. Affected line: Modelica.Blocks.Sources.RealExpression exp_m_flow(y=mov1.m_flow) "Expression to impose the same mass flow rate" annotation (Placement(transformation(extent={{-58,-60},{-38,-40}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Loads/Impedance.mo
1: Name 'star' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: star. Affected line: parameter Boolean star = true "Type of load connection: true = star, false = triangle" annotation(Evaluate=true, choices( choice=true "Star", choice=false "Triangle", __Dymola_radioButtons=true));

2: Name 'omega' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: omega. Affected line: Modelica.Units.SI.AngularVelocity omega "Frequency of the quasi-stationary sine waves";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/BaseClasses/PartialConverterStepDownYD.mo
1: Name 'wye_to_wyeg' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: wye_to_wyeg. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToWyeGround wye_to_wyeg "Wye to wye grounded connection" annotation (Placement(transformation(extent={{-82,-10},{-62,10}})));

2: Name 'delta_to_wye' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: delta_to_wye. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToDelta delta_to_wye "Delta to wye connection " annotation (Placement(transformation(extent={{80,-10},{60,10}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/Examples/Loads.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.FixedVoltage sou(definiteReference=true, f=60, V=480) "Voltage source" annotation (Placement(transformation(extent={{-94,-10},{-74,10}})));

2: Name 'ph_23' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ph_23. Affected line: Modelica.Blocks.Sources.Constant ph_23(k=0) "Power signal for loads on phase 2 and 3" annotation (Placement(transformation(extent={{100,-10},{80,10}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/BalancedStepDown/DD.mo
1: Missing documentation, Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load(k=-1800e3) annotation (Placement(transformation(extent={{54,62},{74,82}})));

2: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerDD transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));


AixLib/Electrical/DC/Sources/BaseClasses/WindCorrection.mo
1: Name 'vLoc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: Modelica.Blocks.Interfaces.RealOutput vLoc( unit="m/s") "Wind velocity at the location" annotation (Placement(transformation(extent={{100,-10},{120,10}})));

2: Name 'vRef' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: Modelica.Blocks.Interfaces.RealInput vRef(unit="m/s") "Wind velocity at the reference height" annotation (Placement(transformation(extent={{-120,-10},{-100,10}}), iconTransformation(extent={{-142,-20},{-102,20}})));


AixLib/Utilities/IO/Files/WeeklySchedule.mo
1: Name 'Integer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Integer. Affected line: parameter Integer[:] columns = {2} "Columns of the schedule to be produced at the output y. First column is time, hence value must be 2 or larger";

2: Name 'tableOnFile' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: table, File. Affected line: parameter Boolean tableOnFile=false "= true, if table is defined on file; false if defined through parameter data" annotation(Dialog(group="Data source"));

3: Name 'fileName' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: file, Name. Affected line: parameter String fileName = "" "Filename" annotation(Dialog(group="Data source", enable=tableOnFile));

4: Name 'data' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: data. Affected line: parameter String data = "double tab1(3,2) # For week-day, output 1 between 7:00 and 19:00, and 0 otherwise mon,tue,wed,thu,fri:7:00:00 1 mon,tue,wed,thu,fri:19:00:00 0 # For week-end, output always 0. Note that this line is redundant in this example. sat,sun:0:00:00 0" "String data with weekly schedule" annotation(Dialog(group="Data source",enable=not tableOnFile));

5: Name 't_offset' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: t_offset. Affected line: parameter Modelica.Units.SI.Time t_offset=0 "Timestamp that corresponds to midnight from Sunday to Monday";

6: Name 'n_columns' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_columns. Affected line: final parameter Integer n_columns = size(columns,1) "Number of columns";

7: Name 'sourceName' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: source, Name. Affected line: parameter String sourceName = if tableOnFile then fileName else getInstanceName() +".data";

8: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: pure function getCalendarValue "Returns the interpolated (zero order hold) value" extends Modelica.Icons.Function;

9: Name 'ID' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: D. Affected line: input AixLib.Utilities.IO.Files.BaseClasses.WeeklyScheduleObject ID "Pointer to file writer object";

10: Name 'iCol' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: input Integer iCol "Column index";


AixLib/ThermalZones/ISO13790/Validation/BESTEST/Data/Case600FFResults.mo
1: Name 'TavgMax' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Tavg. Affected line: parameter Modelica.Units.SI.Temperature TavgMax=299.05 "Maximum average annual air temperature";

2: Name 'TavgMin' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Tavg. Affected line: parameter Modelica.Units.SI.Temperature TavgMin=297.35 "Minimum average annual air temperature";


AixLib/Fluid/Sources/BaseClasses/PartialAirSource.mo
1: Name 'nPorts' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Ports. Affected line: parameter Integer nPorts=0 "Number of ports" annotation(Dialog(connectorSizing=true));

2: Name 'verifyInputs' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: verify, Inputs. Affected line: parameter Boolean verifyInputs = false "Set to true to stop the simulation with an error if the medium temperature is outside its allowable range" annotation(Evaluate=true, Dialog(tab="Advanced"));

3: Name 'ports' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ports. Affected line: Modelica.Fluid.Interfaces.FluidPorts_b ports[nPorts]( redeclare each package Medium = Medium, each m_flow(max=if flowDirection == Modelica.Fluid.Types.PortFlowDirection.Leaving then 0 else +Modelica.Constants.inf, min=if flowDirection == Modelica.Fluid.Types.PortFlowDirection.Entering then 0 else -Modelica.Constants.inf), each h_outflow(nominal=Medium.h_default), each Xi_outflow(each nominal=0.01)) "Fluid ports" annotation (Placement(transformation(extent={{90,40},{110,-40}})));

4: Name 'flowDirection' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Direction. Affected line: protected parameter Modelica.Fluid.Types.PortFlowDirection flowDirection=Modelica.Fluid.Types.PortFlowDirection.Bidirectional "Allowed flow direction" annotation (Evaluate=true, Dialog(tab="Advanced"));

5: Name 'p_in_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: p_in. Affected line: Modelica.Blocks.Interfaces.RealInput p_in_internal(final unit="Pa") "Needed to connect to conditional connector";

6: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Medium.BaseProperties medium( T(start=Medium.T_default) ) if verifyInputs "Medium in the source";

7: Name 'Xi_in_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Xi_in. Affected line: Modelica.Blocks.Interfaces.RealInput Xi_in_internal[Medium.nXi]( each final unit = "kg/kg") "Needed to connect to conditional connector";

8: Name 'X_in_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: X_in. Affected line: Modelica.Blocks.Interfaces.RealInput X_in_internal[Medium.nX]( each final unit = "kg/kg") "Needed to connect to conditional connector";

9: Name 'C_in_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: C_in. Affected line: Modelica.Blocks.Interfaces.RealInput C_in_internal[Medium.nC]( final quantity=Medium.extraPropertiesNames) "Needed to connect to conditional connector";


AixLib/Electrical/DC/Loads/Examples/Resistor.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.ConstantVoltage sou(V=12) "Voltage source" annotation (Placement(transformation(extent={{-80,20},{-60,40}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Lines.TwoPortResistance res(R=2) "Line resistance" annotation (Placement(transformation(extent={{-40,20},{-20,40}})));Sensors.GeneralizedSensor sen "Sensor" annotation (Placement(transformation(extent={{0,20},{20,40}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortInductance.mo
1: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance L "Inductance";


AixLib/Fluid/Geothermal/Borefields/BaseClasses/HeatTransfer/ThermalResponseFactors/finiteLineSource_SteadyState.mo
1: Name 'includeRealSource' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: include, Real, Source. Affected line: input Boolean includeRealSource = true "True if contribution of real source is included";

2: Name 'includeMirrorSource' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: include, Mirror, Source. Affected line: input Boolean includeMirrorSource = true "True if contribution of mirror source is included";

3: Name 'f' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: protected Real f "Intermediate variable for FLS solution";

4: Name 'q' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: q. Affected line: Real q[4] "Intermediate variable for axial distances";


AixLib/Fluid/HeatPumps/ModularReversible/RefrigerantCycle/Frosting/FunctionalIcingFactor.mo
1: Name 'icingFactor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: icing, Factor. Affected line: replaceable function icingFactor = AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.Frosting.Functions.partialIcingFactor constrainedby AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.Frosting.Functions.partialIcingFactor "Replaceable function to calculate current icing factor" annotation(choicesAllMatching=true);


AixLib/Fluid/HeatPumps/ModularReversible/CarnotWithLosses.mo
1: Name 'etaCarnot_nominal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Carnot. Affected line: parameter Real etaCarnot_nominal=0.3 "Constant Carnot effectiveness";


AixLib/Fluid/SolarCollectors/Data/BaseClasses/validateAngles.mo
1: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: input Real[:] incAngModDat( each final min=0, each final unit="1") "Incident angle modifier data";

2: Missing documentation, Name 'valid;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: valid. Affected line: output Boolean valid;


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/Examples/ACLine_RLC.mo
1: Name 'RBase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.Resistance RBase=3*10 "Base value for the line resistance";

2: Name 'LBase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L, Base. Affected line: parameter Modelica.Units.SI.Inductance LBase=RBase/(2*Modelica.Constants.pi* 60) "Base value for the line inductances";

3: Name 'CBase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.Capacitance CBase=3*0.1/(2*Modelica.Constants.pi* 60) "Base value for the line inductances";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/UnbalancedStepUp/YY.mo
1: Missing documentation, Name 'load2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load2(k=-1800e3) annotation (Placement(transformation(extent={{30,58},{50,78}})));

2: Missing documentation, Name 'load3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load3. Affected line: Modelica.Blocks.Sources.Constant load3(k=-2375e3) annotation (Placement(transformation(extent={{4,74},{24,94}})));

3: Missing documentation, Name 'load1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load1(k=-1275e3) annotation (Placement(transformation(extent={{56,30},{76,50}})));

4: Missing documentation, Name 'pf1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf1(k=0.85) annotation (Placement(transformation(extent={{-6,-28},{14,-8}})));

5: Missing documentation, Name 'pf2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf2(k=0.9) annotation (Placement(transformation(extent={{12,-54},{32,-34}})));

6: Missing documentation. Affected line: Modelica.Blocks.Sources.Constant pf3(k=0.95) annotation (Placement(transformation(extent={{34,-78},{54,-58}})));

7: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformer transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase, conv1(V1(start={6.9E3, -250})), conv2(V1(start={-3.8E3, -5.7E3}))) annotation (Placement(transformation(extent={{-28,0},{-8,20}})));


AixLib/Fluid/Geothermal/Borefields/BaseClasses/HeatTransfer/ThermalResponseFactors/Validation/FiniteLineSource_Equivalent.mo
1: Name 'aSoi' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: a. Affected line: parameter Modelica.Units.SI.ThermalDiffusivity aSoi=1.0e-6 "Ground thermal diffusivity";

2: Name 'Integer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Integer. Affected line: parameter Integer[2] wDis={4, 2} "Number of occurences of each distance";

3: Name 'n_dis' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_dis. Affected line: parameter Integer n_dis=2 "Number of unique distances";

4: Documentation too short, Name 't' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: t. Affected line: Modelica.Units.SI.Time t "Time";


AixLib/Electrical/Interfaces/PartialTwoPort.mo
1: Name 'PhaseSystem_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Phase, System. Affected line: replaceable package PhaseSystem_n = AixLib.Electrical.PhaseSystems.PartialPhaseSystem constrainedby AixLib.Electrical.PhaseSystems.PartialPhaseSystem "Phase system of terminal n" annotation (choicesAllMatching=true);


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/BaseClasses/PartialConverterDD.mo
1: Name 'wye_to_delta' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: wye_to_delta. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToDelta wye_to_delta "Delta to wye connection" annotation (Placement(transformation(extent={{78,-10},{58,10}})));

2: Name 'delta_to_wye' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: delta_to_wye. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToDelta delta_to_wye "Delta to wye connection" annotation (Placement(transformation(extent={{-76,-10},{-56,10}})));


AixLib/Examples/Tutorial/SimpleHouse/SimpleHouse3.mo
1: Name 'hWall' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Wall. Affected line: parameter Modelica.Units.SI.CoefficientOfHeatTransfer hWall=2 "Convective heat transfer coefficient at the wall";


AixLib/Fluid/MixingVolumes/Validation/MSLCombustionAir.mo
1: Missing documentation, Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = Modelica.Media.IdealGases.MixtureGases.CombustionAir;


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sensors/Examples/Sensors.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.FixedVoltage source( f=60, V=480) "Voltage source without neutral cable" annotation (Placement(transformation(extent={{-80,20},{-60,40}})));Loads.Resistive load( V_nominal=480, mode=AixLib.Electrical.Types.Load.VariableZ_P_input) "Load model" annotation (Placement(transformation(extent={{20,20},{40,40}})));ProbeWye probeWye(V_nominal=480) "Probe that measures the phase voltages" annotation (Placement(transformation(extent={{-46,48},{-26,68}})));ProbeDelta probeDelta(V_nominal=480) "Probe that measures the line voltages" annotation (Placement(transformation(extent={{-20,48},{0,68}})));Sources.FixedVoltage_N source_N( f=60, V=480) "Voltage source with neutral cable" annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));Loads.Resistive_N load_N( V_nominal=480, mode=AixLib.Electrical.Types.Load.VariableZ_P_input) "Load model" annotation (Placement(transformation(extent={{20,-40},{40,-20}})));ProbeWye_N probeWye_N(V_nominal=480) annotation (Placement(transformation(extent={{-30,-12},{-10,8}})));GeneralizedSensor sen "Generalized sensor withour neutral cable" annotation (Placement(transformation(extent={{-4,20},{16,40}})));GeneralizedSensor_N sen_N "Generalized sensor with neutral cable" annotation (Placement(transformation(extent={{-8,-40},{12,-20}})));

2: Missing documentation, Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( height=2e4, duration=0.5, offset=-1e4, startTime=0.25) annotation (Placement(transformation(extent={{80,-10},{60,10}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Lines/Examples/ACLine_RL.mo
1: Name 'Rbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rbase. Affected line: parameter Modelica.Units.SI.Resistance Rbase=10 "Base value for the line resistance";

2: Name 'Lbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Lbase. Affected line: parameter Modelica.Units.SI.Inductance Lbase=Rbase/2/Modelica.Constants.pi/60 "Base value for the line inductance";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/BalancedStepDown/YY.mo
1: Missing documentation, Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load(k=-1800e3) annotation (Placement(transformation(extent={{54,62},{74,82}})));

2: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformer transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-28,0},{-8,20}})));


AixLib/Fluid/Movers/BaseClasses/Characteristics/motorEfficiencyCurve.mo
1: Documentation too short. Affected line: constant Integer nPoi=9 "Size";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/Examples/Impedances.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.FixedVoltage_N sou_N(definiteReference=true, f=60, V=480) "Voltage source with neutral cable" annotation (Placement(transformation(extent={{-94,-50},{-74,-30}})));Sensors.GeneralizedSensor_N sen_N "Power sensor with neutral cable" annotation (Placement(transformation(extent={{-60,-50},{-40,-30}})));Impedance_N imp_N( plugPhase2=false, use_R_in=true, RMin=1, RMax=10, use_L_in=true, LMin=0.1, LMax=1) "Impedance with neutral cable" annotation (Placement(transformation(extent={{0,-50},{20,-30}})));Sources.FixedVoltage sou(definiteReference=true, f=60, V=480) "Voltage source without neutral cable" annotation (Placement(transformation(extent={{-94,30},{-74,50}})));Sensors.GeneralizedSensor sen "Power sensor without neutral cable" annotation (Placement(transformation(extent={{-60,30},{-40,50}})));Impedance imp( plugPhase2=false, use_R_in=true, RMin=1, RMax=10, use_L_in=true, LMin=0.1, LMax=1) "Impedance without neutral cable" annotation (Placement(transformation(extent={{0,30},{20,50}})));

2: Name 'var_RL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: var_, L. Affected line: Modelica.Blocks.Sources.Ramp var_RL( duration=0.5, startTime=0.25, height=1, offset=0) "Power signal for loads on phase 1" annotation (Placement(transformation(extent={{60,-10},{40,10}})));


AixLib/Electrical/AC/OnePhase/Sources/Generator.mo
1: Name 'f' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: parameter Modelica.Units.SI.Frequency f(start=60) "Frequency of the source";

2: Name 'thetaRel' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: theta. Affected line: protected Modelica.Units.SI.Angle thetaRel "Absolute angle of rotating system as offset to thetaRef";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Interfaces/Connection3to3Ground_n.mo
1: Name 'ground4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground4. Affected line: AixLib.Electrical.AC.OnePhase.Interfaces.Terminal_n ground4 "Connector for neutral" annotation (Placement(transformation(extent={{-109,-70},{-89,-50}}), iconTransformation(extent={{-109,-70},{-89,-50}})));


AixLib/Fluid/SolarCollectors/BaseClasses/IAM.mo
1: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: input Real[size(incAngDat,1)] incAngModDat( each final min=0, each final max=1, each final unit="1") "Incident angle modifier data";input Real[size(incAngDat,1)] dMonotone "Incident angle modifier spline derivatives";

2: Name 'i' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: protected Integer i "Counter to pick the interpolation interval";

3: Name 'delta' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: delta. Affected line: constant Real delta = 0.0001 "Width of the smoothing function";


AixLib/Fluid/HeatPumps/ModularReversible/BaseClasses/RefrigerantCycle.mo
1: Name 'allowDifferentDeviceIdentifiers' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: allow, Different, Device, Identifiers. Affected line: parameter Boolean allowDifferentDeviceIdentifiers=false "if use_rev=true, device data for cooling and heating need to entered. Set allowDifferentDeviceIdentifiers=true to allow different device identifiers devIde" annotation(Dialog(enable=use_rev));

2: Name 'RefrigerantCycleHeatPumpHeating' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Refrigerant, Cycle, Heat, Pump, Heating. Affected line: replaceable model RefrigerantCycleHeatPumpHeating = AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.BaseClasses.NoHeating( useInHeaPum=true) constrainedby AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.BaseClasses.PartialHeatPumpCycle "Replaceable model for refrigerant cycle of a heat pump in main operation mode" annotation (choicesAllMatching=true);

3: Name 'RefrigerantCycleHeatPumpCooling' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Refrigerant, Cycle, Heat, Pump, Cooling. Affected line: replaceable model RefrigerantCycleHeatPumpCooling = AixLib.Fluid.Chillers.ModularReversible.RefrigerantCycle.BaseClasses.NoCooling( useInChi=true) constrainedby AixLib.Fluid.Chillers.ModularReversible.RefrigerantCycle.BaseClasses.PartialChillerCycle "Replaceable model for refrigerant cycle of a heat pump in reversed operation mode" annotation (Dialog(enable=use_rev),choicesAllMatching=true);

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: RefrigerantCycleHeatPumpHeating refCycHeaPumHea "Refrigerant cycle instance for heating" annotation (Placement(transformation(extent={{20,40},{60,80}}, rotation=0)));RefrigerantCycleHeatPumpCooling refCycHeaPumCoo "Refrigerant cycle instance for cooling" annotation (Placement(transformation(extent={{-60,40},{-19,80}}, rotation=0)));


AixLib/Electrical/BaseClasses/WindTurbine/PartialWindTurbineBase.mo
1: Name 'vOut' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: final parameter Modelica.Units.SI.Velocity vOut=table[size(table, 1), 1] "Cut-out steady wind speed";

2: Name 'scale' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: scale. Affected line: parameter Real scale(min=0)=1 "Scaling factor, used to allow adjusting the power output without changing the table";

3: Name 'tableOnFile' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: table, File. Affected line: parameter Boolean tableOnFile=false "true, if table is defined on file or in function usertab";

4: Name 'table' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: table. Affected line: parameter Real table[:,2]= [3.5, 0;5.5, 0.1;12, 0.9;14, 1;25, 1] "Table of generated power (first column is wind speed, second column is power)";

5: Name 'tableName' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: table, Name. Affected line: parameter String tableName="NoName" "Table name on file or in function usertab (see documentation)";

6: Name 'fileName' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: file, Name. Affected line: parameter String fileName="NoName" "File where matrix is stored";

7: Name 'vWin' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: Modelica.Blocks.Interfaces.RealInput vWin(unit="m/s") "Steady wind speed" annotation (Placement(transformation( origin={0,120}, extent={{-20,-20},{20,20}}, rotation=270), iconTransformation( extent={{-20,-20},{20,20}}, rotation=270, origin={0,120})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/Examples/ACLine.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.FixedVoltage E( definiteReference=true, f=60, V=480) "Voltage source" annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));Loads.Impedance R1(R=10) "Resistive load 1" annotation (Placement(transformation(extent={{22,20},{42,40}})));Loads.Impedance R2(R=10) "Resistive load 2" annotation (Placement(transformation(extent={{22,-10},{42,10}})));Loads.Impedance R3(R=10) "Resistive load 3" annotation (Placement(transformation(extent={{22,-50},{42,-30}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line line_1( l=1000, P_nominal=2000, V_nominal=480, mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu35 commercialCable) "Cable that connects to load 1" annotation (Placement(transformation(extent={{-38,20},{-18,40}})));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line line_2a( l=500, P_nominal=2000, V_nominal=480, mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu35 commercialCable) "Cable that connects to load 2" annotation (Placement(transformation(extent={{-38,-10},{-18,10}})));

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line line_2b( l=500, P_nominal=2000, V_nominal=480, mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu35 commercialCable) "Cable that connects to load 2" annotation (Placement(transformation(extent={{-14,-10},{6,10}})));

5: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line line_3a( l=2000, P_nominal=1000, V_nominal=480, mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu35 commercialCable) "Cable that connects to load 3" annotation (Placement(transformation(extent={{-38,-40},{-18,-20}})));

6: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line line_3b( l=2000, P_nominal=1000, V_nominal=480, mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu35 commercialCable) "Cable that connects to load 3" annotation (Placement(transformation(extent={{-38,-60},{-18,-40}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/ACACConverter.mo
1: Name 'conversionFactor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: conversion, Factor. Affected line: parameter Real conversionFactor "Ratio of QS rms voltage on side 2 / QS rms voltage on side 1";

2: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "Connect side 1 of converter to ground" annotation(Dialog(tab = "Ground", group="side 1"));

3: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "Connect side 2 of converter to ground" annotation(Dialog(tab = "Ground", group="side 2"));


AixLib/Fluid/SolarCollectors/BaseClasses/ASHRAESolarGain.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = Modelica.Media.Interfaces.PartialMedium "Medium in the system";

2: Name 'y_intercept' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_intercept. Affected line: parameter Real y_intercept(final unit="1") "y intercept(maximum efficiency)";

3: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: parameter Real[size(incAngDat,1)] incAngModDat( each final unit="1") "Incidence angle modifier spline derivative coefficients";

4: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: parameter Real[size(incAngDat, 1)] dMonotone(each fixed=false) "Derivatives";

5: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: initial algorithm dMonotone := AixLib.Utilities.Math.Functions.splineDerivatives( x=incAngDat, y=incAngModDat, ensureMonotonicity=false);


AixLib/Examples/Tutorial/SimpleHouse/SimpleHouse4.mo
1: Name 'use_constantHeater' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_constant, Heater. Affected line: constant Boolean use_constantHeater=true "To enable/disable the connection between the constant source and heater and circulation pump";

2: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.Movers.Preconfigured.FlowControlled_m_flow pum( redeclare package Medium = MediumWater, use_inputFilter=false, m_flow_nominal=mWat_flow_nominal, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, allowFlowReversal=false) "Pump" annotation (Placement(transformation(extent={{110,-190},{90,-170}})));


AixLib/Electrical/AC/OnePhase/Sources/FixedVoltage.mo
1: Name 'f' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: parameter Modelica.Units.SI.Frequency f(start=60) "Frequency of the source";

2: Name 'thetaRel' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: theta. Affected line: protected Modelica.Units.SI.Angle thetaRel "Absolute angle of rotating system as offset to thetaRef";


AixLib/Fluid/Geothermal/Aquifer/Validation/SimulationTest.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package Medium = AixLib.Media.Water "Medium model";

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: MultiWell aquWel( redeclare package Medium = Medium, nVol=232, h=200, d=4800, length=40, griFac=1.1, TCol_start=307.15, THot_start=393.15, TGroCol=307.15, TGroHot=393.15, aquDat=AixLib.Fluid.Geothermal.Aquifer.Data.Rock(), m_flow_nominal=1, dpExt_nominal=0) "Aquifer wells" annotation (Placement(transformation(extent={{-20,20},{0,40}})));Sources.Boundary_pT bou( redeclare package Medium = Medium, nPorts=1) "Boundary condition for pressure" annotation (Placement(transformation(extent={{60,50},{40,70}})));


AixLib/Electrical/AC/OnePhase/Conversion/ACACTransformerFull.mo
1: Name 'VHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: parameter Modelica.Units.SI.Voltage VHigh "RMS voltage on side 1 of the transformer (primary side)";

2: Name 'VABase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.ApparentPower VABase "Nominal power of the transformer";

3: Name 'f' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: parameter Modelica.Units.SI.Frequency f(start=60) "Nominal frequency";

4: Name 'L1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter AixLib.Electrical.Types.PerUnit L1(min=0) "Inductance on side 1 of the transformer (pu)";

5: Name 'L2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter AixLib.Electrical.Types.PerUnit L2(min=0) "Inductance on side 2 of the transformer (pu)";

6: Name 'magEffects' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Effects. Affected line: parameter Boolean magEffects = false "If true, introduce magnetization effects" annotation(Evaluate=true, Dialog(group="Magnetization"));

7: Name 'Rm' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rm. Affected line: parameter AixLib.Electrical.Types.PerUnit Rm(min=0) "Magnetization resistance (pu)" annotation(Evaluate=true, Dialog(group="Magnetization", enable = magEffects));

8: Name 'Lm' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Lm. Affected line: parameter AixLib.Electrical.Types.PerUnit Lm(min=0) "Magnetization inductance (pu)" annotation(Evaluate=true, Dialog(group="Magnetization", enable = magEffects));

9: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "Connect side 1 of converter to ground" annotation(Evaluate=true,Dialog(tab = "Ground", group="side 1"));

10: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "Connect side 2 of converter to ground" annotation(Evaluate=true, Dialog(tab = "Ground", group="side 2"));

11: Name 'phi_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: phi_. Affected line: parameter Modelica.Units.SI.Angle phi_1=0 "Angle of the voltage side 1 at initialization" annotation (Evaluate=true, Dialog(tab="Initialization"));

12: Name 'phi_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: phi_. Affected line: parameter Modelica.Units.SI.Angle phi_2=phi_1 "Angle of the voltage side 2 at initialization" annotation (Evaluate=true, Dialog(tab="Initialization"));

13: Name 'PLoss' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Loss. Affected line: Modelica.Units.SI.Power PLoss[2] "Loss power";

14: Missing documentation, Name 'omega_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: omega. Affected line: protected parameter Modelica.Units.SI.AngularVelocity omega_n=2*Modelica.Constants.pi*f;

15: Name 'N' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: N. Affected line: parameter Real N = VHigh/VLow "Winding ratio";

16: Name 'RBaseHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base, High. Affected line: parameter Modelica.Units.SI.Resistance RBaseHigh=VHigh^2/VABase "Base impedance of the primary side";

17: Name 'RBaseLow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.Resistance RBaseLow=VLow^2/VABase "Base impedance of the secondary side";

18: Name 'Z1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z. Affected line: Modelica.Units.SI.Impedance Z1[2]={RBaseHigh*R1,omega*L1*RBaseHigh/omega_n} "Impedance of the primary side of the transformer";

19: Name 'Z2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z. Affected line: Modelica.Units.SI.Impedance Z2[2]={RBaseLow*R2,omega*L2*RBaseLow/omega_n} "Impedance of the secondary side of the transformer";

20: Name 'S_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: S. Affected line: Modelica.Units.SI.Power S_p=Modelica.Fluid.Utilities.regRoot(P_p[1]^2 + P_p[2] ^2, delta=0.1) "Apparent power at terminal p";

21: Name 'S_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: S. Affected line: Modelica.Units.SI.Power S_n=Modelica.Fluid.Utilities.regRoot(P_n[1]^2 + P_n[2] ^2, delta=0.1) "Apparent power at terminal n";

22: Name 'omega' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: omega. Affected line: Modelica.Units.SI.AngularVelocity omega "Angular velocity";

23: Name 'Im' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Im. Affected line: Modelica.Units.SI.Current Im[2] "Magnetization current";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sources/FixedVoltage.mo
1: Name 'f' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: parameter Modelica.Units.SI.Frequency f(start=60) "Frequency of the source";

2: Name 'potentialReference' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: potential, Reference. Affected line: parameter Boolean potentialReference = true "Serve as potential root for the reference angle theta" annotation (Evaluate=true, Dialog(group="Reference Parameters"));

3: Name 'definiteReference' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: definite, Reference. Affected line: parameter Boolean definiteReference = false "Serve as definite root for the reference angle theta" annotation (Evaluate=true, Dialog(group="Reference Parameters"));

4: Name 'angle120' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: angle120. Affected line: constant Modelica.Units.SI.Angle angle120=2*Modelica.Constants.pi/3 "Phase shift between the phase voltages";


AixLib/Electrical/AC/OnePhase/Lines/TwoPortRLC.mo
1: Name 'Vc_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vc. Affected line: parameter Modelica.Units.SI.Voltage Vc_start[2]={V_nominal,0} "Initial voltage phasor of the capacitance located in the middle of the line" annotation (Dialog(enable=(mode == AixLib.Electrical.Types.Load.FixedZ_dynamic)));

2: Name 'mode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mode. Affected line: parameter AixLib.Electrical.Types.Load mode( min=AixLib.Electrical.Types.Load.FixedZ_steady_state, max=AixLib.Electrical.Types.Load.FixedZ_dynamic)= AixLib.Electrical.Types.Load.FixedZ_steady_state "Type of model (e.g., steady state, dynamic, prescribed power consumption, etc.)" annotation (Evaluate=true, Dialog(group="Modeling assumption"));

3: Name 'Vc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vc. Affected line: protected Modelica.Units.SI.Voltage Vc[2](start=Vc_start, each stateSelect=StateSelect.prefer) "Voltage of the Capacitance located in the middle of the line";

4: Name 'Ic' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Ic. Affected line: Modelica.Units.SI.Current Ic[2] "Currenbt of the capacitance located in the middle of the line";

5: Name 'omega' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: omega. Affected line: Modelica.Units.SI.AngularVelocity omega "Frequency of the quasi-stationary sine waves";

6: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: initial equation if C > 0 and mode == AixLib.Electrical.Types.Load.FixedZ_dynamic then Vc = Vc_start;


AixLib/Electrical/AC/OnePhase/Lines/Line.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: protected replaceable TwoPortRL line( R=R/3, L=L/3, mode=modelMode) constrainedby AixLib.Electrical.Transmission.BaseClasses.PartialTwoPortRLC( useHeatPort=true, M=M, T_ref=T_ref) "Model of the line" annotation (Placement(transformation(extent={{-10,-10},{10,10}})));


AixLib/Utilities/Math/Functions/interpolate.mo
1: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: input Real[:] xd "x-axis support points";input Real[size(xd, 1)] yd "y-axis support points";input Real[size(xd, 1)] d "Derivatives at the support points";

2: Name 'z' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: z. Affected line: output Real z "Dependent variable with monotone interpolation";

3: Name 'i' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: protected Integer i "Integer to select data interval";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/ACACTransformerStepUpDY.mo
1: Name 'VHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: parameter Modelica.Units.SI.Voltage VHigh "Rms voltage on side 1 of the transformer (primary side)";

2: Name 'VABase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.ApparentPower VABase "Nominal power of the transformer";

3: Name 'XoverR' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Xover. Affected line: parameter Real XoverR "Ratio between the complex and real components of the impedance (XL/R)";

4: Name 'Zperc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zperc. Affected line: parameter Real Zperc "Short circuit impedance";

5: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "Connect side 1 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 1"));

6: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "Connect side 2 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 2"));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/ACACTransformerStepUpYD.mo
1: Name 'VHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: parameter Modelica.Units.SI.Voltage VHigh "Rms voltage on side 1 of the transformer (primary side)";

2: Name 'VABase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.ApparentPower VABase "Nominal power of the transformer";

3: Name 'XoverR' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Xover. Affected line: parameter Real XoverR "Ratio between the complex and real components of the impedance (XL/R)";

4: Name 'Zperc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zperc. Affected line: parameter Real Zperc "Short circuit impedance";

5: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "Connect side 1 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 1"));

6: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "Connect side 2 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 2"));


AixLib/Electrical/DC/Loads/Examples/VariableLoad.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Conductor loa1( V_nominal=12, linearized=false, P_nominal=-50) "Load" annotation (Placement(transformation(extent={{40,40},{60,60}})));Sources.ConstantVoltage sou(V=12) "Voltage source" annotation (Placement(transformation(extent={{-80,20},{-60,40}})));

2: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Conductor loa2( mode=Types.Load.VariableZ_y_input, V_nominal=12, P_nominal=-50) "Load" annotation (Placement(transformation(extent={{0,0},{20,20}})));

3: Name 'varLoad_y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Load_y. Affected line: Modelica.Blocks.Sources.Ramp varLoad_y( height=0.8, duration=0.5, startTime=0.3, offset=0) "Power signal" annotation (Placement(transformation(extent={{60,0},{40,20}})));

4: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Conductor loa3( V_nominal=12, P_nominal=0, mode=AixLib.Electrical.Types.Load.VariableZ_P_input) "Load" annotation (Placement(transformation(extent={{0,-40},{20,-20}})));

5: Name 'varLoad_P' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Load_. Affected line: Modelica.Blocks.Sources.Ramp varLoad_P( duration=0.5, startTime=0.3, height=120, offset=-20) "Power signal" annotation (Placement(transformation(extent={{60,-40},{40,-20}})));


AixLib/Fluid/Geothermal/Borefields/BaseClasses/HeatTransfer/ThermalResponseFactors/Validation/ClusterBoreholes_100boreholes.mo
1: Name 'rBor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: r. Affected line: parameter Modelica.Units.SI.Radius rBor=0.075 "Borehole radius";

2: Name 'k' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: k. Affected line: parameter Integer k=4 "Number of clusters to be generated";

3: Name 'labels' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: labels. Affected line: parameter Integer labels[nBor](each fixed=false) "Cluster label associated with each data point";

4: Name 'labelsExp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: labels. Affected line: parameter Integer labelsExp[nBor]= {3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 2, 2, 2, 2, 4, 4, 3, 3, 4, 2, 2, 1, 1, 2, 2, 4, 3, 4, 2, 2, 1, 1, 1, 1, 2, 2, 4, 4, 2, 1, 1, 1, 1, 1, 1, 2, 4, 4, 2, 1, 1, 1, 1, 1, 1, 2, 4, 4, 2, 2, 1, 1, 1, 1, 2, 2, 4, 3, 4, 2, 2, 1, 1, 2, 2, 4, 3, 3, 4, 4, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3} "Expected cluster labels";

5: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: initial equation (labels, cluSiz) = AixLib.Fluid.Geothermal.Borefields.BaseClasses.HeatTransfer.ThermalResponseFactors.clusterBoreholes(nBor,cooBor,hBor,dBor,rBor,k);


AixLib/Electrical/AC/OnePhase/Conversion/Examples/ACDCConverter.mo
1: Name 'conversion' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: conversion. Affected line: AixLib.Electrical.AC.OnePhase.Conversion.ACDCConverter conversion( eta=0.9, ground_AC=false, ground_DC=true, conversionFactor=60/120) "AC/DC transformer" annotation (Placement(transformation(extent={{-10,0},{10,20}})));

2: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: AixLib.Electrical.DC.Loads.Conductor load(mode=AixLib.Electrical.Types.Load.VariableZ_P_input, V_nominal=60) "Variable resistive load" annotation (Placement( transformation( extent={{10,-10},{-10,10}}, rotation=180, origin={50,-10})));


AixLib/Fluid/HeatPumps/ModularReversible/Modular.mo
1: Name 'RefrigerantCycleHeatPumpHeating' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Refrigerant, Cycle, Heat, Pump, Heating. Affected line: replaceable model RefrigerantCycleHeatPumpHeating = AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.BaseClasses.PartialHeatPumpCycle (PEle_nominal=0) constrainedby AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.BaseClasses.PartialHeatPumpCycle( final useInHeaPum=true, final QHea_flow_nominal=QHea_flow_nominal, final TCon_nominal=TConHea_nominal, final TEva_nominal=TEvaHea_nominal, final cpCon=cpCon, final cpEva=cpEva) "Refrigerant cycle module for the heating mode" annotation (choicesAllMatching=true);

2: Name 'RefrigerantCycleHeatPumpCooling' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Refrigerant, Cycle, Heat, Pump, Cooling. Affected line: replaceable model RefrigerantCycleHeatPumpCooling = AixLib.Fluid.Chillers.ModularReversible.RefrigerantCycle.BaseClasses.NoCooling constrainedby AixLib.Fluid.Chillers.ModularReversible.RefrigerantCycle.BaseClasses.PartialChillerCycle( final useInChi=false, final cpCon=cpCon, final cpEva=cpEva, final TCon_nominal=TEvaCoo_nominal, final TEva_nominal=TConCoo_nominal, QCoo_flow_nominal=QCoo_flow_nominal) "Refrigerant cycle module for the cooling mode" annotation (Dialog(enable=use_rev),choicesAllMatching=true);


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/UnbalancedStepDown/YD.mo
1: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerStepDownYD transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));

2: Missing documentation, Name 'load3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load3. Affected line: Modelica.Blocks.Sources.Constant load3(k=-2375e3) annotation (Placement(transformation(extent={{14,74},{34,94}})));

3: Missing documentation, Name 'load2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load2(k=-1800e3) annotation (Placement(transformation(extent={{40,56},{60,76}})));

4: Missing documentation, Name 'load1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load1(k=-1275e3) annotation (Placement(transformation(extent={{60,28},{80,48}})));

5: Missing documentation, Name 'pf1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf1(k=0.85) annotation (Placement(transformation(extent={{0,-32},{20,-12}})));

6: Missing documentation, Name 'pf2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf2(k=0.9) annotation (Placement(transformation(extent={{22,-52},{42,-32}})));

7: Missing documentation. Affected line: Modelica.Blocks.Sources.Constant pf3(k=0.95) annotation (Placement(transformation(extent={{44,-72},{64,-52}})));


AixLib/Fluid/SolarCollectors/Validation/ExtremeAmbientConditions.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = AixLib.Media.Water(T_min=273.15, T_max=273.15+100) "Medium in the system";

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ASHRAE93 solAsh( redeclare package Medium = Medium, shaCoe=0, energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial, rho=0.2, nColType=AixLib.Fluid.SolarCollectors.Types.NumberSelection.Number, sysConfig=AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Series, per=AixLib.Fluid.SolarCollectors.Data.GlazedFlatPlate.FP_GuangdongFSPTY95(), nPanels=1, azi=0.3, til=0.5, T_start=313.15) "Flat plate solar collector model using the ASHRAE model" annotation (Placement(transformation(extent={{20,-50},{40,-30}})));EN12975 solEn( redeclare package Medium = Medium, shaCoe=0, energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial, rho=0.2, nColType=AixLib.Fluid.SolarCollectors.Types.NumberSelection.Number, sysConfig=AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Series, nPanels=1, azi=0.3, til=0.5, per=AixLib.Fluid.SolarCollectors.Data.GlazedFlatPlate.FP_VerificationModel(), T_start=313.15) "Flat plate solar collector model using the EN 12975 model" annotation (Placement(transformation(extent={{20,-90},{40,-70}})));Sources.MassFlowSource_T sou( redeclare package Medium = Medium, nPorts=1, m_flow=0) "Inlet boundary conditions" annotation (Placement( transformation( extent={{10,10},{-10,-10}}, rotation=180, origin={-10,-40})));Sources.Boundary_pT sou1( redeclare package Medium = Medium, p(displayUnit="Pa"), use_p_in=false, nPorts=2) "Inlet boundary conditions" annotation (Placement( transformation( extent={{-10,10},{10,-10}}, rotation=180, origin={80,-60})));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.MassFlowSource_T sou2( redeclare package Medium = Medium, nPorts=1, m_flow=0) "Inlet boundary conditions" annotation (Placement( transformation( extent={{10,10},{-10,-10}}, rotation=180, origin={-10,-80})));BoundaryConditions.WeatherData.Bus weaBus annotation (Placement( transformation(extent={{-10,-10},{10,10}}),iconTransformation(extent={{-154, 16},{-134,36}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Lines/Examples/ACSimpleGridMedium.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Lines.Network network( redeclare AixLib.Electrical.Transmission.Grids.TestGrid2NodesMedium grid, lines(redeclare AixLib.Electrical.Transmission.MediumVoltageCables.Generic commercialCable = network.grid.cables, each V_nominal = network.V_nominal), V_nominal=15000) "Network model that represents the connection between the source and the load" annotation (Placement(transformation(extent={{20,-10},{0,10}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Loads.Inductive load(mode=Types.Load.VariableZ_P_input, P_nominal=250000, V_nominal=15000) "Load connected to the network" annotation (Placement(transformation(extent={{-28,10},{-48,30}})));ThreePhasesBalanced.Sources.FixedVoltage E(V=15000, f=60) "Voltage source" annotation (Placement( transformation( extent={{10,-10},{-10,10}}, rotation=180, origin={-70,0})));

3: Name 'load_inputs' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load_inputs. Affected line: Modelica.Blocks.Sources.Ramp load_inputs( height=5000, duration=2, offset=-2000, startTime=0.5) "Input signal for the power consumption of the loads" annotation (Placement(transformation(extent={{-80,20},{-60,40}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/Examples/ACLine_N.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.FixedVoltage_N E( definiteReference=true, f=60, V=480) "Voltage source" annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));Loads.Impedance_N R1(R=10) "Resistive load 1" annotation (Placement(transformation(extent={{22,20},{42,40}})));Loads.Impedance_N R2(R=10) "Resistive load 2" annotation (Placement(transformation(extent={{22,-10},{42,10}})));Loads.Impedance_N R3(R=10) "Resistive load 3" annotation (Placement(transformation(extent={{22,-50},{42,-30}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line_N line_1( l=1000, P_nominal=2000, V_nominal=480, mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu35 commercialCable) "Cable that connects to load 1" annotation (Placement(transformation(extent={{-38,20},{-18,40}})));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line_N line_2a( l=500, P_nominal=2000, V_nominal=480, mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu35 commercialCable) "Cable that connects to load 2" annotation (Placement(transformation(extent={{-44,-10},{-24,10}})));

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line_N line_2b( l=500, P_nominal=2000, V_nominal=480, mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu35 commercialCable) "Cable that connects to load 2" annotation (Placement(transformation(extent={{-14,-10},{6,10}})));

5: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line_N line_3a( l=2000, P_nominal=1000, V_nominal=480, mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu35 commercialCable) "Cable that connects to load 3" annotation (Placement(transformation(extent={{-38,-40},{-18,-20}})));

6: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line_N line_3b( l=2000, P_nominal=1000, V_nominal=480, mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu35 commercialCable) "Cable that connects to load 3" annotation (Placement(transformation(extent={{-38,-60},{-18,-40}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/BaseClasses/PartialConverterStepDownDY.mo
1: Name 'wye_to_wyeg' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: wye_to_wyeg. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToWyeGround wye_to_wyeg "Wye to wye grounded connection" annotation (Placement(transformation(extent={{78,-10},{58,10}})));

2: Name 'delta_to_wye' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: delta_to_wye. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToDelta delta_to_wye "Delta to wye connection" annotation (Placement(transformation(extent={{-76,-10},{-56,10}})));


AixLib/Electrical/Interfaces/Impedance.mo
1: Name 'inductive' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: inductive. Affected line: parameter Boolean inductive=true "If true, the load is inductive, otherwise it is capacitive" annotation (Evaluate=true, choices( choice=true "Inductive", choice=false "Capacitive", __Dymola_radioButtons=true));

2: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance L( start=0, min=0) = 0 "Inductance" annotation (Dialog(enable=inductive and (not use_L_in)));

3: Name 'use_L_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Boolean use_L_in = false "If true, L is specified by an input" annotation(Evaluate=true, Dialog(tab = "Variable load", group="Inductance"));

4: Name 'LMin' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance LMin( start=L, min=Modelica.Constants.eps) = 1e-4 "Minimum value of the inductance" annotation (Evaluate=true, Dialog( enable=use_L_in, tab="Variable load", group="Inductance"));

5: Name 'LMax' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance LMax( start=L, min=Modelica.Constants.eps) = 1e2 "Maximum value of the inductance" annotation (Evaluate=true, Dialog( enable=use_L_in, tab="Variable load", group="Inductance"));

6: Name 'y_R' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_. Affected line: Modelica.Blocks.Interfaces.RealInput y_R(min=0, max=1) if use_R_in "Input that sepecify variable R" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=270, origin={-40,100})));

7: Name 'y_C' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_. Affected line: Modelica.Blocks.Interfaces.RealInput y_C(min=0, max=1) if use_C_in "Input that sepecify variable C" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=270, origin={0,100})));

8: Name 'y_L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_, L. Affected line: Modelica.Blocks.Interfaces.RealInput y_L(min=0, max=1) if use_L_in "Input that sepecify variable L" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=270, origin={40,100})));

9: Name 'y_R_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_. Affected line: protected Modelica.Blocks.Interfaces.RealOutput y_R_internal "Internal signal used to compute the variable R_internal";

10: Name 'y_C_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_. Affected line: Modelica.Blocks.Interfaces.RealOutput y_C_internal "Internal signal used to compute the variable C_internal";

11: Name 'y_L_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_, L. Affected line: Modelica.Blocks.Interfaces.RealOutput y_L_internal "Internal signal used to compute the variable L_internal";

12: Name 'L_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: Modelica.Units.SI.Inductance L_internal "Actual inductance used to compute the impedance";


AixLib/Electrical/Transmission/Functions/Validation/SelectCable_low.mo
1: Name 'safety_factor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: safety_factor. Affected line: parameter Real safety_factor = 1.2 "Safety factor";


AixLib/Fluid/Movers/BaseClasses/Characteristics/efficiency_yMot.mo
1: Name 'i' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: Integer i "Integer to select data interval";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/BalancedStepDown/DY.mo
1: Missing documentation, Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load(k=-1800e3) annotation (Placement(transformation(extent={{54,62},{74,82}})));

2: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerStepDownDY transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/Examples/ACLine_RL_N.mo
1: Name 'Rbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rbase. Affected line: parameter Modelica.Units.SI.Resistance Rbase=3*10 "Base value for the line resistance";

2: Name 'Lbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Lbase. Affected line: parameter Modelica.Units.SI.Inductance Lbase=Rbase/2/Modelica.Constants.pi/60 "Base value for the line inductance";


AixLib/Electrical/Interfaces/PartialAcDcParameters.mo
1: Name 'eta_DCAC' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: eta_, D. Affected line: parameter Real eta_DCAC(min=0, max=1) = 0.9 "Efficiency of DC/AC conversion" annotation (Dialog(group="AC-Conversion"));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortMatrixRLC.mo
1: Name 'Z11' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z1. Affected line: parameter Modelica.Units.SI.Impedance Z11[2] "Element [1,1] of impedance matrix";

2: Name 'Z12' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z1. Affected line: parameter Modelica.Units.SI.Impedance Z12[2] "Element [1,2] of impedance matrix";

3: Name 'Z22' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z2. Affected line: parameter Modelica.Units.SI.Impedance Z22[2] "Element [2,2] of impedance matrix";

4: Name 'Z21' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z2. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z21=Z12 "Element [2,1] of impedance matrix";

5: Name 'Z31' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z3. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z31=Z13 "Element [3,1] of impedance matrix";

6: Name 'Z32' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z3. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z32=Z23 "Element [3,1] of impedance matrix";

7: Name 'B11' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B1. Affected line: parameter Modelica.Units.SI.Admittance B11 "Element [1,1] of admittance matrix";

8: Name 'B12' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B1. Affected line: parameter Modelica.Units.SI.Admittance B12 "Element [1,2] of admittance matrix";

9: Name 'B22' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B2. Affected line: parameter Modelica.Units.SI.Admittance B22 "Element [2,2] of admittance matrix";

10: Name 'B21' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B2. Affected line: final parameter Modelica.Units.SI.Admittance B21=B12 "Element [2,1] of admittance matrix";

11: Name 'B31' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B3. Affected line: final parameter Modelica.Units.SI.Admittance B31=B13 "Element [3,1] of admittance matrix";

12: Name 'B32' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B3. Affected line: final parameter Modelica.Units.SI.Admittance B32=B23 "Element [3,2] of admittance matrix";

13: Name 'v1_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v1. Affected line: Modelica.Units.SI.Voltage v1_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=0), each stateSelect=StateSelect.never) = terminal_n.phase[1].v "Voltage in line 1 at connector N";

14: Name 'v2_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v2. Affected line: Modelica.Units.SI.Voltage v2_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=-2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_n.phase[2].v "Voltage in line 2 at connector N";

15: Name 'v3_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v3. Affected line: Modelica.Units.SI.Voltage v3_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_n.phase[3].v "Voltage in line 3 at connector N";

16: Name 'v1_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v1. Affected line: Modelica.Units.SI.Voltage v1_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=0), each stateSelect=StateSelect.never) = terminal_p.phase[1].v "Voltage in line 1 at connector P";

17: Name 'v2_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v2. Affected line: Modelica.Units.SI.Voltage v2_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=-2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_p.phase[2].v "Voltage in line 2 at connector P";

18: Name 'v3_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v3. Affected line: Modelica.Units.SI.Voltage v3_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_p.phase[3].v "Voltage in line 3 at connector P";

19: Name 'productAC1p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: product. Affected line: protected function productAC1p = AixLib.Electrical.PhaseSystems.OnePhase.product "Product between complex quantities";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/BalancedStepUp/DD.mo
1: Missing documentation, Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load(k=-1800e3) annotation (Placement(transformation(extent={{54,62},{74,82}})));

2: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerDD transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));


AixLib/Electrical/Interfaces/PartialPluggableUnbalanced.mo
1: Name 'plugPhase2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: plug, Phase. Affected line: parameter Boolean plugPhase2 = true "If true, phase 2 is connected";

2: Name 'plugPhase3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: plug, Phase3. Affected line: parameter Boolean plugPhase3 = true "If true, phase 3 is connected";


AixLib/Electrical/AC/OnePhase/Loads/Capacitive.mo
1: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: initial equation if mode == AixLib.Electrical.Types.Load.FixedZ_dynamic then // q = Y[2]*{V_nominal, 0}/omega;


AixLib/Fluid/SolarCollectors/BaseClasses/Examples/EN12975SolarGain.mo
1: Missing documentation, Name 'T3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T3. Affected line: Modelica.Blocks.Sources.Sine T3( f=2/86400, amplitude=50, offset=273.15 + 110) annotation (Placement(transformation(extent={{-50,-50},{-30,-30}})));

2: Missing documentation. Affected line: Modelica.Blocks.Sources.Sine T2( f=2/86400, amplitude=50, offset=273.15 + 100) annotation (Placement(transformation(extent={{-10,-70},{10,-50}})));

3: Missing documentation. Affected line: Modelica.Blocks.Sources.Sine T1( f=2/86400, amplitude=50, offset=273.15 + 90) annotation (Placement(transformation(extent={{30,-90},{50,-70}})));


AixLib/Electrical/AC/OnePhase/Sources/Examples/VariablePowerSource.mo
1: Name 'generator' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: generator. Affected line: AixLib.Electrical.AC.OnePhase.Sources.Generator generator(phiGen(displayUnit="deg") = 0.26179938779915, f=60) "AC generator model" annotation (Placement(transformation(extent={{-50,-10},{-30,10}})));

2: Name 'generation' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: generation. Affected line: Modelica.Blocks.Sources.Sine generation( offset=200, startTime=1, amplitude=100, f=0.05) "Generated power" annotation (Placement(transformation(extent={{-92,-10},{-72,10}})));

3: Name 'RL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Inductive RL(mode=Types.Load.VariableZ_y_input, P_nominal=-300, V_nominal=120) "Load model" annotation (Placement(transformation(extent={{20,-10},{40,10}})));

4: Name 'grid' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: grid. Affected line: AixLib.Electrical.AC.OnePhase.Sources.Grid grid(f=60, V=120) "AC one phase electrical grid" annotation (Placement(transformation(extent={{-20,40},{0,60}})));

5: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Trapezoid load( rising=2, width=3, falling=3, period=10, startTime=1, amplitude=0.8, offset=0.2) "Power consumption profile" annotation (Placement(transformation(extent={{80,-10},{60,10}})));


AixLib/Utilities/Clustering/KMeans.mo
1: Name 'data' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: data. Affected line: input Real data[n_samples,n_features] "Data to be clustered";

2: Name 'n_clusters' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_clusters. Affected line: input Integer n_clusters "Number of clusters to be generated";

3: Name 'n_samples' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_samples. Affected line: input Integer n_samples "Number of samples";

4: Name 'n_features' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_features. Affected line: input Integer n_features "Number of features";

5: Name 'max_iter' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: max_iter. Affected line: input Integer max_iter=500 "Maximum number of k-means iterations";

6: Name 'n_init' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_init. Affected line: input Integer n_init=10 "Number of runs with randomized centroid seeds";

7: Name 'n_cluster_size' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_cluster_size. Affected line: input Integer n_cluster_size=0 "Length of the cluster_size output vector";

8: Name 'centroids' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: centroids. Affected line: output Real centroids[n_clusters,n_features] "Centroids of the clusters";

9: Name 'labels' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: labels. Affected line: output Integer labels[n_samples] "Cluster label associated with each data point";

10: Name 'cluster_size' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cluster_size. Affected line: output Integer cluster_size[max(n_clusters, n_cluster_size)] "Size of the clusters";

11: Name 'old_centroids' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: old_centroids. Affected line: protected Real old_centroids[n_clusters,n_features] "Previous iteration centroids";

12: Name 'new_centroids' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: new_centroids. Affected line: Real new_centroids[n_clusters,n_features] "Next iteration centroids";

13: Name 'delta_centroids' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: delta_centroids. Affected line: Real delta_centroids "Maximum relative displacement of cluster centroids between two k-means iterations";

14: Name 'new_labels' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: new_labels. Affected line: Integer new_labels[n_samples] "Next iteration cluster labels";

15: Name 'new_inertia' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: new_inertia. Affected line: Real new_inertia "Inertia of the samples during the current run";

16: Name 'inertia' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: inertia. Affected line: Real inertia "Minimum inertia of the samples since first run";

17: Name 'id' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: id. Affected line: Integer id "Id of the random integer generator";

18: Name 'k_iter' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: k_iter. Affected line: Integer k_iter "Index of k-means iteration";

19: Name 'min_dis' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: min_dis. Affected line: Real min_dis "Minimum distance between a sample (or a centroid) and a cluster centroid";

20: Name 'seed' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: seed. Affected line: constant Integer seed = 2 "Arbitrary seed value";

21: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: algorithm id := Modelica.Math.Random.Utilities.initializeImpureRandom(seed);


AixLib/Electrical/AC/OnePhase/Lines/Network.mo
1: Name 'modelMode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: model, Mode. Affected line: parameter AixLib.Electrical.Types.Load modelMode=Types.Load.FixedZ_steady_state "Select between steady state and dynamic model" annotation (Dialog( tab="Model", group="Assumptions", enable=use_C), choices(choice=AixLib.Electrical.Types.Load.FixedZ_steady_state "Steady state", choice=AixLib.Electrical.Types.Load.FixedZ_dynamic "Dynamic"));


AixLib/Electrical/Interfaces/Terminal.mo
1: Name 'PhaseSystem' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Phase, System. Affected line: replaceable package PhaseSystem = PhaseSystems.PartialPhaseSystem "Phase system" annotation (choicesAllMatching=true);PhaseSystem.Voltage v[PhaseSystem.n] "Voltage vector";flow PhaseSystem.Current i[PhaseSystem.n](each start=0) "Current vector";PhaseSystem.ReferenceAngle theta[PhaseSystem.m] "Optional vector of phase angles";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sensors/ProbeWye.mo
1: Name 'term' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: term. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.Terminal_n term "Electrical connector" annotation ( Placement(transformation( extent={{-10,-10},{10,10}}, rotation=90, origin={0,-90})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Interfaces/WyeToWyeGround.mo
1: Name 'ground' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground. Affected line: AixLib.Electrical.AC.OnePhase.Basics.Ground ground "Ground reference" annotation (Placement(transformation(extent={{-30,-40},{-10,-20}})));


AixLib/Electrical/AC/OnePhase/Lines/TwoPortInductance.mo
1: Name 'mode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mode. Affected line: parameter AixLib.Electrical.Types.Load mode( min=AixLib.Electrical.Types.Load.FixedZ_steady_state, max=AixLib.Electrical.Types.Load.VariableZ_y_input)= AixLib.Electrical.Types.Load.FixedZ_steady_state "Type of model (e.g., steady state, dynamic, prescribed power consumption, etc.)" annotation (Evaluate=true, Dialog(group="Modeling assumption"));

2: Name 'omega' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: omega. Affected line: protected Modelica.Units.SI.AngularVelocity omega "Frequency of the quasi-stationary sine waves";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortResistance_N.mo
1: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref=298.15 "Reference temperature" annotation (Evaluate=true);

2: Name 'M' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M. Affected line: parameter Modelica.Units.SI.Temperature M=507.65 "Temperature constant (R_actual = R*(M + T_heatPort)/(M + T_ref))" annotation (Evaluate=true);

3: Name 'Rn' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rn. Affected line: parameter Modelica.Units.SI.Resistance Rn "Resistance of neutral cable at temperature T_ref";


AixLib/Electrical/AC/OnePhase/Loads/Examples/TestImpedance.mo
1: Missing documentation. Affected line: AixLib.Electrical.AC.OnePhase.Sources.FixedVoltage V(f=60, V=120) annotation (Placement(transformation(extent={{-80,20},{-60,40}})));

2: Name 'Z1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Z1(R=0, inductive=true, L=1/(2*Modelica.Constants.pi*60)) "Inductive impedance" annotation (Placement(transformation(extent={{-20,20},{0,40}})));

3: Name 'Z2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Z2(R=0, inductive=false, C=1/(2*Modelica.Constants.pi*60)) "Capacitive impedance" annotation (Placement(transformation(extent={{-20,0},{0,20}})));

4: Name 'Z3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z3. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Z3(R=1) "Resistive impedance" annotation (Placement(transformation(extent={{-20,-20},{0,0}})));

5: Name 'Z4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z4. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Z4( R=1, L=1/(2*Modelica.Constants.pi*60)) "Inductive-resistive impedance" annotation (Placement(transformation(extent={{-20,-40},{0,-20}})));

6: Name 'Z5' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z5. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Z5( R=1, inductive=false, C=1/(2*Modelica.Constants.pi*60)) "Capacitive-resistive impedance" annotation (Placement(transformation(extent={{-20,-60},{0,-40}})));


AixLib/Fluid/Movers/Validation/Pump_y_stratos.mo
1: Missing documentation, Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package Medium = Modelica.Media.Water.ConstantPropertyLiquidWater;

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: parameter Data.Pumps.Wilo.Stratos80slash1to12 per "Pump performance data" annotation (Placement(transformation(extent={{-120,80},{-100,100}})));

3: Name 'pump1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pump. Affected line: AixLib.Fluid.Movers.SpeedControlled_y pump1( y_start=1, redeclare package Medium = Medium, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, per=per) "Wilo Stratos pump" annotation (Placement(transformation(extent={{-60,60},{-40,80}})));

4: Name 'pump2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pump. Affected line: AixLib.Fluid.Movers.SpeedControlled_y pump2( y_start=1, redeclare package Medium = Medium, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, per=per) "Wilo Stratos pump" annotation (Placement(transformation(extent={{-60,10},{-40,30}})));

5: Name 'pump3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pump3. Affected line: AixLib.Fluid.Movers.SpeedControlled_y pump3( y_start=1, redeclare package Medium = Medium, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, per=per) "Wilo Stratos pump" annotation (Placement(transformation(extent={{-60,-36},{-40,-16}})));

6: Name 'pump4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pump4. Affected line: AixLib.Fluid.Movers.SpeedControlled_y pump4( y_start=1, redeclare package Medium = Medium, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, per=per) "Wilo Stratos pump" annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));

7: Name 'pump5' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pump5. Affected line: AixLib.Fluid.Movers.SpeedControlled_y pump5( y_start=1, redeclare package Medium = Medium, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, per=per) "Wilo Stratos pump" annotation (Placement(transformation(extent={{-60,-130},{-40,-110}})));

8: Name 'forcedPump1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: forced, Pump. Affected line: AixLib.Fluid.Movers.FlowControlled_m_flow forcedPump1( redeclare package Medium = Medium, nominalValuesDefineDefaultPressureCurve=true, m_flow_nominal=3, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState) "Pump for forcing a certain mass flow rate" annotation (Placement(transformation(extent={{38,60},{58,80}})));

9: Name 'forcedPump2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: forced, Pump. Affected line: AixLib.Fluid.Movers.FlowControlled_m_flow forcedPump2( redeclare package Medium = Medium, nominalValuesDefineDefaultPressureCurve=true, m_flow_nominal=3, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState) "Pump for forcing a certain mass flow rate" annotation (Placement(transformation(extent={{38,10},{58,30}})));

10: Name 'forcedPump3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: forced, Pump3. Affected line: AixLib.Fluid.Movers.FlowControlled_m_flow forcedPump3( redeclare package Medium = Medium, nominalValuesDefineDefaultPressureCurve=true, m_flow_nominal=3, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState) "Pump for forcing a certain mass flow rate" annotation (Placement(transformation(extent={{38,-36},{58,-16}})));

11: Name 'forcedPump4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: forced, Pump4. Affected line: AixLib.Fluid.Movers.FlowControlled_m_flow forcedPump4( redeclare package Medium = Medium, nominalValuesDefineDefaultPressureCurve=true, m_flow_nominal=3, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState) "Pump for forcing a certain mass flow rate" annotation (Placement(transformation(extent={{38,-80},{58,-60}})));

12: Name 'forcedPump5' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: forced, Pump5. Affected line: AixLib.Fluid.Movers.FlowControlled_m_flow forcedPump5( redeclare package Medium = Medium, nominalValuesDefineDefaultPressureCurve=true, m_flow_nominal=3, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState) "Pump for forcing a certain mass flow rate" annotation (Placement(transformation(extent={{38,-130},{58,-110}})));

13: Name 'y3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y3. Affected line: Modelica.Blocks.Sources.Constant y3(k=1930/2610) "Pump speed control signal" annotation (Placement(transformation(extent={{-90,-6},{-78,6}})));

14: Name 'y4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y4. Affected line: Modelica.Blocks.Sources.Constant y4(k=3300/2610) "Pump speed control signal" annotation (Placement(transformation(extent={{-90,-56},{-78,-44}})));

15: Name 'y5' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y5. Affected line: Modelica.Blocks.Sources.Constant y5(k=900/2610) "Pump speed control signal" annotation (Placement(transformation(extent={{-90,-108},{-78,-96}})));

16: Name 'min3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: min3. Affected line: Modelica.Blocks.Math.Min min3 "Minimum for not going outside of the figure range (see documentation)" annotation (Placement(transformation( extent={{-5,-5},{5,5}}, origin={35,-5})));

17: Name 'min4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: min4. Affected line: Modelica.Blocks.Math.Min min4 "Minimum for not going outside of the figure range (see documentation)" annotation (Placement(transformation( extent={{-5,-5},{5,5}}, origin={35,-49})));

18: Name 'min5' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: min5. Affected line: Modelica.Blocks.Math.Min min5 "Minimum for not going outside of the figure range (see documentation)" annotation (Placement(transformation( extent={{-5,-5},{5,5}}, origin={35,-97})));

19: Name 'mMax_flow1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Max_flow. Affected line: Modelica.Blocks.Sources.Constant mMax_flow1(k=40/3.6) "Maximum flow rate of the pump at given speed" annotation (Placement(transformation(extent={{2,76},{14,88}})));

20: Name 'mMax_flow2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Max_flow. Affected line: Modelica.Blocks.Sources.Constant mMax_flow2(k=55/3.6) "Maximum flow rate of the pump at given speed" annotation (Placement(transformation(extent={{0,30},{12,42}})));

21: Name 'mMax_flow3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Max_flow3. Affected line: Modelica.Blocks.Sources.Constant mMax_flow3(k=40/3.6) "Maximum flow rate of the pump at given speed" annotation (Placement(transformation(extent={{0,-20},{12,-8}})));

22: Name 'mMax_flow4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Max_flow4. Affected line: Modelica.Blocks.Sources.Constant mMax_flow4(k=22/3.6) "Maximum flow rate of the pump at given speed" annotation (Placement(transformation(extent={{0,-64},{12,-52}})));

23: Name 'mMax_flow5' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Max_flow5. Affected line: Modelica.Blocks.Sources.Constant mMax_flow5(k=16/3.6) "Maximum flow rate of the pump at given speed" annotation (Placement(transformation(extent={{0,-112},{12,-100}})));


AixLib/ThermalZones/ISO13790/Examples/HeatingCoolingHVAC.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Controls.Continuous.LimPID conHeaPID( Ti=300, k=0.1, reverseActing=true, strict=true) "Controller for heating" annotation (Placement(visible=true, transformation( origin={-10,72}, extent={{-6,-6},{6,6}}, rotation=0)));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.Sources.MassFlowSource_T sou( redeclare package Medium = AixLib.Media.Air, use_m_flow_in=true, T=280.15, nPorts=1) "source of air" annotation (Placement(transformation(extent={{-20,-80},{0,-60}})));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Controls.Continuous.LimPID conCooPID( Ti=300, k=0.1, yMax=0.07, reverseActing=false, strict=true) "Controller for cooling" annotation (Placement(visible=true, transformation( origin={-10,46}, extent={{-6,-6},{6,6}}, rotation=0)));

4: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.Sources.Boundary_pT sin( redeclare package Medium = AixLib.Media.Air, nPorts=1) "sink" annotation (Placement(transformation(extent={{90,-80},{70,-60}})));


AixLib/Electrical/AC/OnePhase/Sources/Grid.mo
1: Name 'f' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: parameter Modelica.Units.SI.Frequency f(start=60) "Frequency of the source";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/ACACTransformer.mo
1: Name 'VHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: parameter Modelica.Units.SI.Voltage VHigh "Rms voltage on side 1 of the transformer (primary side)";

2: Name 'VABase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.ApparentPower VABase "Nominal power of the transformer";

3: Name 'XoverR' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Xover. Affected line: parameter Real XoverR "Ratio between the complex and real components of the impedance (XL/R)";

4: Name 'Zperc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zperc. Affected line: parameter Real Zperc "Short circuit impedance";

5: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "Connect side 1 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 1"));

6: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "Connect side 2 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 2"));


AixLib/Electrical/AC/ThreePhasesBalanced/Sensors/Examples/Probe.mo
1: Name 'probe_source' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: probe_source. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Sensors.Probe probe_source(V_nominal= 480) "Probe that measures at the voltage source" annotation (Placement(transformation(extent={{-50,30},{-30,50}})));

2: Name 'probe_loadRC' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: probe_load. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Sensors.Probe probe_loadRC(V_nominal= 480) "Probe that measures at the RC load" annotation (Placement(transformation(extent={{-10,30},{10,50}})));

3: Name 'loaRL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Loads.Inductive loaRL( mode=AixLib.Electrical.Types.Load.FixedZ_steady_state, P_nominal=-10000, V_nominal=480) "Constant load" annotation (Placement(transformation(extent={{10,-70},{30,-50}})));

4: Name 'probe_loadRL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: probe_load, L. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Sensors.Probe probe_loadRL(V_nominal= 480) "Probe that measures at the RL load" annotation (Placement(transformation(extent={{-10,-28},{10,-8}})));


AixLib/Electrical/AC/OnePhase/Sensors/Probe.mo
1: Name 'perUnit' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Unit. Affected line: parameter Boolean perUnit = true "If true, display voltage in p.u.";

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable Interfaces.Terminal_n term "Electrical connector" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=90, origin={0,-90})));

3: Name 'theta' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: theta. Affected line: Modelica.Blocks.Interfaces.RealOutput theta(unit="rad", displayUnit="deg") "Voltage phasor angle" annotation (Placement( transformation(extent={{60,-40},{80,-20}}), iconTransformation(extent={{60, -40},{80,-20}})));


AixLib/Fluid/Sensors/Examples/HeatMeter.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package Medium = AixLib.Media.Water "Medium model";

2: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.MassFlowSource_T sou( redeclare package Medium = Medium, m_flow=m_flow_nominal, nPorts=1) "Mass flow source" annotation (Placement(transformation(extent={{-70,-10},{-50,10}})));Sources.Boundary_pT sin( redeclare package Medium = Medium, nPorts=1) "Sink" annotation (Placement(transformation(extent={{70,-10},{50,10}})));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: MixingVolumes.MixingVolume vol( redeclare package Medium = Medium, energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial, m_flow_nominal=m_flow_nominal, V=0.1, nPorts=2) "Mixing volume" annotation (Placement(transformation(extent={{-10,30},{10,50}})));TemperatureTwoPort senT( redeclare package Medium = Medium, m_flow_nominal=m_flow_nominal) annotation (Placement(transformation(extent={{-30,-10},{-10,10}})));

4: Missing documentation. Affected line: AixLib.Fluid.Sensors.HeatMeter senHeaFlo( redeclare package Medium = Medium, m_flow_nominal=m_flow_nominal) annotation (Placement(transformation(extent={{10,-10},{30,10}})));


AixLib/Fluid/Chillers/ModularReversible/Examples/LargeScaleWaterToWater.mo
1: Name 'MediumCon' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package MediumCon = AixLib.Media.Water "Medium model for condenser";

2: Name 'MediumEva' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package MediumEva = AixLib.Media.Water "Medium model for evaporator";


AixLib/Fluid/Movers/BaseClasses/Validation/EulerReducedSpeed.mo
1: Name 'per3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: per3. Affected line: parameter AixLib.Fluid.Movers.Data.Generic per3( power(V_flow={0.939939939939939,1.88588588588588,2.83183183183181, 3.28228228228228}, P={1998.476,2535.38,2714.348,2550.294}), pressure(V_flow={0.939939939939939,1.88588588588588,2.83183183183181, 3.28228228228228}, dp={1127.12550607287,903.643724696356, 340.080971659919,0})) "Mover performance curves at reduced speed N=2500";

2: Name 'pow3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pow3. Affected line: Modelica.Units.SI.Power pow3= AixLib.Utilities.Math.Functions.smoothInterpolation( x=m3_flow.y/rhoCon, xSup=per3.power.V_flow, ySup=per3.power.P, ensureMonotonicity=false) "Measured power";

3: Name 'eff3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: eff3. Affected line: AixLib.Fluid.Movers.BaseClasses.FlowMachineInterface eff3( per=per1, rho_default=rhoCon, nOri=nOri, computePowerUsingSimilarityLaws=false) "Flow machine interface using power Euler correlation" annotation (Placement(transformation(extent={{20,-68},{40,-48}})));

4: Name 'y3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y3. Affected line: Modelica.Blocks.Sources.Constant y3(k=2500/4100) "Reduced speed y = 2500/4100 = 0.610" annotation (Placement(transformation(extent={{-60,-50},{-40,-30}})));

5: Name 'm1_flow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: m1. Affected line: Modelica.Blocks.Sources.Ramp m1_flow( height=0.98*max(per1.pressure.V_flow)*rhoCon, duration=1, offset=0.01*max(per1.pressure.V_flow)*rhoCon) "Mass flow rate" annotation (Placement(transformation(extent={{-60,40},{-40,60}})));

6: Name 'm2_flow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: m2. Affected line: Modelica.Blocks.Sources.Ramp m2_flow( height=0.98*max(per2.pressure.V_flow)*rhoCon, duration=1, offset=0.01*max(per2.pressure.V_flow)*rhoCon) "Mass flow rate" annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));

7: Name 'm3_flow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: m3. Affected line: Modelica.Blocks.Sources.Ramp m3_flow( height=0.98*max(per3.pressure.V_flow)*rhoCon, duration=1, offset=0.01*max(per3.pressure.V_flow)*rhoCon) "Mass flow rate" annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));


AixLib/Electrical/AC/OnePhase/Sensors/GeneralizedSensor.mo
1: Name 'S' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: S. Affected line: Modelica.Blocks.Interfaces.RealOutput S[PhaseSystems.OnePhase.n]( each final quantity="Power", each final unit="W")= AixLib.Electrical.PhaseSystems.OnePhase.phasePowers_vi(v=terminal_n.v, i=terminal_n.i) "Phase powers" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={-60,-50}),iconTransformation( extent={{-10,-10},{10,10}}, rotation=270, origin={-60,-90})));


AixLib/Electrical/DC/Conversion/Examples/DCDCConverter.mo
1: Name 'resistor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: resistor. Affected line: AixLib.Electrical.DC.Loads.Conductor resistor( mode=AixLib.Electrical.Types.Load.FixedZ_steady_state, P_nominal=-2000, V_nominal=60) "Resistive load" annotation (Placement(transformation(extent={{38,30},{58,50}})));

2: Name 'conDCDC' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: D, D. Affected line: AixLib.Electrical.DC.Conversion.DCDCConverter conDCDC( VHigh=120, VLow=60, eta=0.9, i_n(start=0)) "DC/DC transformer" annotation (Placement(transformation(extent={{-20,-10},{0,10}})));

3: Name 'conductor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: conductor. Affected line: AixLib.Electrical.DC.Loads.Conductor conductor(mode=AixLib.Electrical.Types.Load.VariableZ_P_input, V_nominal=60, P_nominal=10e3) "Variable resistive load" annotation (Placement(transformation(extent={{38,-30},{58,-10}})));

4: Missing documentation, Name 'varLoad_P' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Load_. Affected line: Modelica.Blocks.Sources.Ramp varLoad_P( duration=0.5, startTime=0.3, offset=-1000, height=10000) annotation (Placement(transformation(extent={{90,-30},{70,-10}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Sources/Examples/VariablePowerSource.mo
1: Name 'generator' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: generator. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Sources.Generator generator(f=60, phiGen=0.26179938779915) "AC generator model" annotation (Placement(transformation(extent={{-50,-10},{-30,10}})));

2: Name 'generation' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: generation. Affected line: Modelica.Blocks.Sources.Sine generation( offset=200, startTime=1, amplitude=100, f=0.05) "Generated power" annotation (Placement(transformation(extent={{-92,-10},{-72,10}})));

3: Name 'RL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Loads.Inductive RL(mode=Types.Load.VariableZ_y_input, P_nominal=-300, V_nominal=480) "Load model" annotation (Placement(transformation(extent={{20,-10},{40,10}})));

4: Name 'grid' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: grid. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Sources.Grid grid(f=60, V=480) "AC one phase electrical grid" annotation (Placement(transformation(extent={{-20,40},{0,60}})));

5: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Trapezoid load( rising=2, width=3, falling=3, period=10, startTime=1, amplitude=0.8, offset=0.2) "Power consumption profile" annotation (Placement(transformation(extent={{80,-10},{60,10}})));


AixLib/Electrical/Interfaces/InductiveLoad.mo
1: Name 'use_pf_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_pf. Affected line: parameter Boolean use_pf_in = false "If true, the power factor is defined by an input" annotation(Dialog(group="Modeling assumption"));

2: Name 'pf' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: parameter Real pf(min=0, max=1) = 0.8 "Power factor" annotation(Dialog(group="Nominal conditions"));

3: Name 'pf_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in( min=0, max=1, unit="1") if (use_pf_in) "Power factor" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=180, origin={100,60}), iconTransformation( extent={{-20,-20},{20,20}}, rotation=180, origin={100,60})));

4: Name 'j' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: j. Affected line: protected function j = PhaseSystem.j "J operator that rotates of 90 degrees";

5: Name 'pf_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Interfaces.RealInput pf_internal "Hidden value of the input load for the conditional connector";

6: Name 'Z' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z. Affected line: Modelica.Units.SI.Impedance Z[2] "Impedance of the load";

7: Name 'omega' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: omega. Affected line: Modelica.Units.SI.AngularVelocity omega "Angular frequency";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortRL.mo
1: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref=298.15 "Reference temperature" annotation (Evaluate=true);

2: Name 'M' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M. Affected line: parameter Modelica.Units.SI.Temperature M=507.65 "Temperature constant (R_actual = R*(M + T_heatPort)/(M + T_ref))" annotation (Evaluate=true);

3: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance L "Inductance";

4: Name 'i1_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i1. Affected line: parameter Modelica.Units.SI.Current i1_start[2]={0,0} "Initial current phasor of phase 1 (positive if entering from terminal p)" annotation (Dialog(enable=(mode == AixLib.Electrical.Types.Load.FixedZ_dynamic)));

5: Name 'i2_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i2. Affected line: parameter Modelica.Units.SI.Current i2_start[2]={0,0} "Initial current phasor of phase 2 (positive if entering from terminal p)" annotation (Dialog(enable=(mode == AixLib.Electrical.Types.Load.FixedZ_dynamic)));

6: Name 'i3_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i3. Affected line: parameter Modelica.Units.SI.Current i3_start[2]={0,0} "Initial current phasor of phase 3 (positive if entering from terminal p)" annotation (Dialog(enable=(mode == AixLib.Electrical.Types.Load.FixedZ_dynamic)));

7: Name 'mode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mode. Affected line: parameter AixLib.Electrical.Types.Load mode( min=AixLib.Electrical.Types.Load.FixedZ_steady_state, max=AixLib.Electrical.Types.Load.FixedZ_dynamic) = AixLib.Electrical.Types.Load.FixedZ_steady_state "Type of model (e.g., steady state, dynamic, prescribed power consumption, etc.)" annotation (Evaluate=true, Dialog(group="Modeling assumption"));


AixLib/Electrical/DC/Lines/Examples/RCModel.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: TwoPortRCLine RC_ss( C=1, V_nominal=50, R=8) "Line resistance" annotation (Placement(transformation(extent={{-30,10},{-10,30}})));Sources.ConstantVoltage constantVoltage(V=50) "Voltage source" annotation (Placement(transformation(extent={{-60,10},{-40,30}})));

2: Missing documentation, Name 'ground' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground. Affected line: Modelica.Electrical.Analog.Basic.Ground ground annotation (Placement(transformation(extent={{-72,-16},{-52,4}})));


AixLib/Electrical/Transmission/Functions/selectCable_low.mo
1: Name 'cable' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cable. Affected line: output AixLib.Electrical.Transmission.LowVoltageCables.Generic cable "Cable";

2: Missing documentation, Name 'safety_factor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: safety_factor. Affected line: protected parameter Real safety_factor = 1.2;

3: Missing documentation, Name 'cu10;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cu10. Affected line: AixLib.Electrical.Transmission.LowVoltageCables.Cu10 cu10;

4: Missing documentation, Name 'cu20;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cu20. Affected line: AixLib.Electrical.Transmission.LowVoltageCables.Cu20 cu20;

5: Missing documentation, Name 'cu25;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cu25. Affected line: AixLib.Electrical.Transmission.LowVoltageCables.Cu25 cu25;

6: Missing documentation, Name 'cu35;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cu35. Affected line: AixLib.Electrical.Transmission.LowVoltageCables.Cu35 cu35;

7: Missing documentation, Name 'cu50;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cu50. Affected line: AixLib.Electrical.Transmission.LowVoltageCables.Cu50 cu50;

8: Missing documentation, Name 'cu95;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cu95. Affected line: AixLib.Electrical.Transmission.LowVoltageCables.Cu95 cu95;

9: Missing documentation, Name 'cu100;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cu100. Affected line: AixLib.Electrical.Transmission.LowVoltageCables.Cu100 cu100;


AixLib/Electrical/Transmission/BaseClasses/PartialBaseLine.mo
1: Name 'f_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: final parameter Modelica.Units.SI.Frequency f_n=50 "Frequency considered in the definition of cables properties";

2: Name 'modelMode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: model, Mode. Affected line: parameter AixLib.Electrical.Types.Load modelMode=AixLib.Electrical.Types.Load.FixedZ_steady_state "Select between steady state and dynamic model" annotation(Evaluate=true, Dialog(tab="Model", group="Assumptions", enable = use_C), choices(choice=AixLib.Electrical.Types.Load.FixedZ_steady_state "Steady state", choice=AixLib.Electrical.Types.Load.FixedZ_dynamic "Dynamic"));

3: Name 'TCable' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Cable. Affected line: parameter Modelica.Units.SI.Temperature TCable=T_ref "Fixed temperature of the cable" annotation (Dialog( tab="Model", group="Thermal", enable=not use_T));

4: Name 'mode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mode. Affected line: parameter AixLib.Electrical.Types.CableMode mode=AixLib.Electrical.Types.CableMode.automatic "Select if choosing the cable automatically or between a list of commercial options" annotation(Evaluate=true, Dialog(tab="Tech. specification", group="Auto/Manual mode"), choicesAllMatching=true);

5: Name 'commercialCable' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: commercial, Cable. Affected line: replaceable parameter AixLib.Electrical.Transmission.LowVoltageCables.Generic commercialCable constrainedby AixLib.Electrical.Transmission.BaseClasses.BaseCable "Commercial cables options" annotation(Evaluate=true, Dialog(tab="Tech. specification", group="Manual mode", enable = mode == AixLib.Electrical.Types.CableMode.commercial), choicesAllMatching = true);

6: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: final parameter Modelica.Units.SI.Temperature T_ref=commercialCable.T_ref "Reference temperature of the line" annotation (Evaluate=True);

7: Name 'M' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M. Affected line: final parameter Modelica.Units.SI.Temperature M=commercialCable.M "Temperature constant (R_actual = R*(M + T_heatPort)/(M + T_ref))";

8: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: final parameter Modelica.Units.SI.Inductance L=commercialCable.lineInductance( l, f_n, commercialCable) "Inductance of the cable due to mutual and self inductance" annotation (Evaluate=True);

9: Name 'cableTemp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cable, Temp. Affected line: Modelica.Thermal.HeatTransfer.Sources.PrescribedTemperature cableTemp "Temperature of the cable" annotation (Placement(transformation(extent={{-60,12},{-40,32}})));

10: Name 'cableTemperature' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cable, Temperature. Affected line: Modelica.Blocks.Sources.RealExpression cableTemperature(y=T_in) "Temperature of the cable" annotation (Placement(transformation(extent={{-92,12},{-72,32}})));


AixLib/Utilities/IO/Files/Examples/WeeklySchedule.mo
1: Name 'data' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: data. Affected line: parameter String data = "#test: mon:0:0:10 - 3 1 - tue,thu:20:30:59 123 - 45 - wed 12 1 4 -" "Contents of schedule.txt";

2: Name 'weeSchStri' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Stri. Affected line: AixLib.Utilities.IO.Files.WeeklySchedule weeSchStri( columns={2,3,4,5}, data=data, t_offset=1e6) "Weekly schedule example using parameter data source" annotation (Placement(transformation(extent={{-10,-32},{10,-12}})));


AixLib/Fluid/HeatPumps/ModularReversible/RefrigerantCycle/Inertias/VariableOrder.mo
1: Name 'x_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: x. Affected line: parameter Real x_start[nthOrd]=zeros(nthOrd) "Initial or guess values of states" annotation (Dialog( tab="Initialization", group="Refrigerant inertia"));


AixLib/Fluid/HeatPumps/ModularReversible/Examples/BaseClasses/OneRoomRadiatorHeatPumpControl.mo
1: Name 'swiHeaCooYSet' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Y. Affected line: Modelica.Blocks.Logical.Switch swiHeaCooYSet if witCoo "Switch ySet for heating and cooling" annotation (Placement(transformation( extent={{-10,10},{10,-10}}, origin={30,70}, rotation=0)));

2: Name 'constYSetZer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Y. Affected line: Modelica.Blocks.Sources.Constant constYSetZer(final k=0) "ySet equals zero" annotation (Placement(transformation(extent={{-10,-10},{10,10}}, rotation=0, origin={30,-18})));

3: Name 'swiYSet' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Y. Affected line: Modelica.Blocks.Logical.Switch swiYSet "If no demand, switch heat pump off" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=0, origin={70,50})));


AixLib/Electrical/DC/Sources/Examples/VoltageSource.mo
1: Missing documentation, Name 'ground' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground. Affected line: Modelica.Electrical.Analog.Basic.Ground ground annotation (Placement(transformation(extent={{-92,-40},{-72,-20}})));

2: Name 'cosine' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cosine. Affected line: Modelica.Blocks.Sources.Sine cosine( phase=0, f=1, offset=12, amplitude=3) "Variable voltage signal" annotation (Placement(transformation(extent={{-120,-4},{-100,16}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortRLC_N.mo
1: Name 'Rn' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rn. Affected line: parameter Modelica.Units.SI.Resistance Rn "Resistance of neutral cable at temperature T_ref";

2: Name 'Cn' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Cn. Affected line: parameter Modelica.Units.SI.Capacitance Cn "Capacityof neutral cable";

3: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance L "Inductance";

4: Name 'Ln' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Ln. Affected line: parameter Modelica.Units.SI.Inductance Ln "Inductance of neutral cable";

5: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref=298.15 "Reference temperature" annotation (Evaluate=true);

6: Name 'M' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M. Affected line: parameter Modelica.Units.SI.Temperature M=507.65 "Temperature constant (R_actual = R*(M + T_heatPort)/(M + T_ref))" annotation (Evaluate=true);

7: Name 'mode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mode. Affected line: parameter AixLib.Electrical.Types.Load mode( min=AixLib.Electrical.Types.Load.FixedZ_steady_state, max=AixLib.Electrical.Types.Load.FixedZ_dynamic)= AixLib.Electrical.Types.Load.FixedZ_steady_state "Type of model (e.g., steady state, dynamic, prescribed power consumption, etc.)" annotation (Evaluate=true, Dialog(group="Modeling assumption"));


AixLib/Fluid/SolarCollectors/BaseClasses/EN12975HeatLoss.mo
1: Name 'a1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: a. Affected line: parameter Modelica.Units.SI.CoefficientOfHeatTransfer a1(final min=0) "a1 from ratings data";

2: Name 'a2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: a. Affected line: parameter Real a2(final unit = "W/(m2.K2)", final min=0) "a2 from ratings data";


AixLib/Fluid/SolarCollectors/Examples/Tubular.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = AixLib.Media.Water "Medium in the system";

2: Missing documentation, Name 'sine' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: sine. Affected line: Modelica.Blocks.Sources.Sine sine( f=3/86400, offset=101325, amplitude=-0.1*solCol.dp_nominal) annotation (Placement(transformation(extent={{-80,-18},{-60,2}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/BalancedStepDown/YD.mo
1: Missing documentation, Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load(k=-1800e3) annotation (Placement(transformation(extent={{54,62},{74,82}})));

2: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerStepDownYD transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase, conv1( terminal_p(i(start={-477, 327})), V1(start={7000, -400}))) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sources/BaseClasses/BaseUnbalancedWindTurbine.mo
1: Name 'scaleFraction' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: scale, Fraction. Affected line: parameter Real scaleFraction[3](each min=0, each max=1.0) = ones(3)/3 "Fraction of power allocated to the wind turbines of each phase";

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable OnePhase.Sources.WindTurbine wt_phase2( pf=pf, eta_DCAC=eta_DCAC, scale=scale*scaleFraction[2], h=h, hRef=hRef, nWin=nWin, tableOnFile=tableOnFile, table=table, tableName=tableName, fileName=fileName, V_nominal=V_nominal/sqrt(3)) if plugPhase2 "Wind turbine phase 2" annotation (Placement(transformation(extent={{-20,-10},{-40,10}})));replaceable OnePhase.Sources.WindTurbine wt_phase3( pf=pf, eta_DCAC=eta_DCAC, scale=scale*scaleFraction[3], h=h, hRef=hRef, nWin=nWin, tableOnFile=tableOnFile, table=table, tableName=tableName, fileName=fileName, V_nominal=V_nominal/sqrt(3)) if plugPhase3 "Wind turbine phase 3" annotation (Placement(transformation(extent={{-20,-60},{-40,-40}})));replaceable OnePhase.Sources.WindTurbine wt_phase1( pf=pf, eta_DCAC=eta_DCAC, scale=scale*scaleFraction[1], h=h, hRef=hRef, nWin=nWin, tableOnFile=tableOnFile, table=table, tableName=tableName, fileName=fileName, V_nominal=V_nominal/sqrt(3)) if plugPhase1 "Wind turbine phase 1" annotation (Placement(transformation(extent={{-18,40},{-38,60}})));

3: Name 'sumBlock' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Block. Affected line: Modelica.Blocks.Math.Add3 sumBlock "Sum of th epower generated on each phase" annotation (Placement(transformation(extent={{32,50},{52,70}})));


AixLib/Fluid/Chillers/ModularReversible/Modular.mo
1: Name 'RefrigerantCycleChillerCooling' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Refrigerant, Cycle, Chiller, Cooling. Affected line: replaceable model RefrigerantCycleChillerCooling = AixLib.Fluid.Chillers.ModularReversible.RefrigerantCycle.BaseClasses.PartialChillerCycle (PEle_nominal=0) constrainedby AixLib.Fluid.Chillers.ModularReversible.RefrigerantCycle.BaseClasses.PartialChillerCycle( final useInChi=true, final TCon_nominal=TConCoo_nominal, final TEva_nominal=TEvaCoo_nominal, final QCoo_flow_nominal=QCoo_flow_nominal, final cpCon=cpCon, final cpEva=cpEva) "Refrigerant cycle module for the cooling mode" annotation (choicesAllMatching=true);

2: Name 'RefrigerantCycleChillerHeating' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Refrigerant, Cycle, Chiller, Heating. Affected line: replaceable model RefrigerantCycleChillerHeating = AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.BaseClasses.NoHeating (PEle_nominal=PEle_nominal) constrainedby AixLib.Fluid.HeatPumps.ModularReversible.RefrigerantCycle.BaseClasses.PartialHeatPumpCycle( final useInHeaPum=false, final TCon_nominal=TEvaHea_nominal, final TEva_nominal=TConHea_nominal, final QHea_flow_nominal=QHea_flow_nominal, final cpCon=cpCon, final cpEva=cpEva) "Refrigerant cycle module for the heating mode" annotation (Dialog(enable=use_rev),choicesAllMatching=true);


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/Capacitive.mo
1: Name 'use_pf_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_pf. Affected line: parameter Boolean use_pf_in = false "If true, the power factor is defined by an input" annotation(Dialog(group="Modeling assumption"));

2: Name 'pf' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: parameter Real pf(min=0, max=1) = 0.8 "Power factor" annotation(Dialog(group="Nominal conditions"));

3: Name 'pf_in_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_1( min=0, max=1, unit="1") if (use_pf_in and plugPhase1) "Power factor of load on phase 1" annotation (Placement( transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={-60,-120}), iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={-60,-100})));

4: Name 'pf_in_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_2( min=0, max=1, unit="1") if (use_pf_in and plugPhase2) "Power factor of load on phase 2" annotation (Placement( transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={30,-120}),iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={0,-100})));

5: Name 'pf_in_3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_3. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_3( min=0, max=1, unit="1") if (use_pf_in and plugPhase3) "Power factor of load on phase 3" annotation (Placement( transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={80,-120}),iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={60,-100})));


AixLib/BoundaryConditions/WeatherData/BaseClasses/PartialConvertTime.mo
1: Name 'canRepeatWeatherFile' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Repeat, Weather, File. Affected line: parameter Boolean canRepeatWeatherFile = abs(mod(lenWea, 365*24*3600)) < 1E-2 "=true, if the weather file can be repeated, since it has the length of a year or a multiple of it";

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: discrete Modelica.Units.SI.Time tNext(start=0, fixed=true) "Start time of next period";


AixLib/Fluid/SolarCollectors/BaseClasses/Examples/ASHRAEHeatLoss.mo
1: Name 'T3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T3. Affected line: Modelica.Blocks.Sources.Sine T3( f=0.1, amplitude=15, offset=273.15 + 20) "Temperature of the third segment" annotation (Placement(transformation(extent={{-50,-50},{-30,-30}})));


AixLib/Electrical/Utilities/Examples/TestVoltageCTRL.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: VoltageControl voltageControl( redeclare AixLib.Electrical.DC.Interfaces.Terminal_p terminal, redeclare package PhaseSystem = AixLib.Electrical.PhaseSystems.TwoConductor, V_nominal=120, tDelay=2) "Voltage controller" annotation (Placement(transformation(extent={{-10,-10},{10,10}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: DC.Sources.VoltageSource sou "Varriable voltage source" annotation (Placement(transformation(extent={{-60,-10},{-40,10}})));

3: Missing documentation, Name 'ground' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground. Affected line: Modelica.Electrical.Analog.Basic.Ground ground annotation (Placement(transformation(extent={{-70,-36},{-50,-16}})));

4: Name 'cosine' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cosine. Affected line: Modelica.Blocks.Sources.Sine cosine( amplitude=20, f=0.1, phase=0, offset=120) "Variable voltage signal" annotation (Placement(transformation(extent={{-94,-4},{-74,16}})));

5: Name 'Vtr_high' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vtr_high. Affected line: Modelica.Blocks.Sources.Constant Vtr_high(k=120*(1 + 0.1)) "Voltage threshold high" annotation (Placement(transformation(extent={{-60,40},{-40,60}})));


AixLib/Fluid/Chillers/ModularReversible/Examples/CarnotWithLosses.mo
1: Name 'MediumCon' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package MediumCon = AixLib.Media.Water "Medium model for condenser";

2: Name 'MediumEva' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package MediumEva = AixLib.Media.Water "Medium model for evaporator";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/BalancedStepUp/YD.mo
1: Missing documentation, Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load(k=-1800e3) annotation (Placement(transformation(extent={{54,62},{74,82}})));

2: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerStepUpYD transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/BaseClasses/PartialConverterStepUpYD.mo
1: Name 'wye_to_wyeg' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: wye_to_wyeg. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToWyeGround wye_to_wyeg "Wye to wye grounded connection" annotation (Placement(transformation(extent={{-82,-10},{-62,10}})));

2: Name 'delta_to_wye' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: delta_to_wye. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToDelta delta_to_wye "Delta to wye connection" annotation (Placement(transformation(extent={{80,-10},{60,10}})));


AixLib/Electrical/AC/OnePhase/Conversion/ACACTransformer.mo
1: Name 'VHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: parameter Modelica.Units.SI.Voltage VHigh "Rms voltage on side 1 of the transformer (primary side)";

2: Name 'VABase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.ApparentPower VABase "Nominal power of the transformer";

3: Name 'XoverR' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Xover. Affected line: parameter Real XoverR "Ratio between the complex and real components of the impedance (XL/R)";

4: Name 'Zperc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zperc. Affected line: parameter Real Zperc "Short circuit impedance";

5: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "If true, connect side 1 of converter to ground" annotation(Evaluate=true,Dialog(tab = "Ground", group="side 1"));

6: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "If true, connect side 2 of converter to ground" annotation(Evaluate=true, Dialog(tab = "Ground", group="side 2"));

7: Name 'phi_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: phi_. Affected line: parameter Modelica.Units.SI.Angle phi_1=0 "Angle of the voltage side 1 at initialization" annotation (Evaluate=true, Dialog(tab="Initialization"));

8: Name 'phi_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: phi_. Affected line: parameter Modelica.Units.SI.Angle phi_2=phi_1 "Angle of the voltage side 2 at initialization" annotation (Evaluate=true, Dialog(tab="Initialization"));

9: Name 'PLoss' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Loss. Affected line: Modelica.Units.SI.Power PLoss[2] "Loss power";

10: Name 'N' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: N. Affected line: protected Real N = VHigh/VLow "Winding ratio";

11: Name 'IHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: Modelica.Units.SI.Current IHigh=VABase/VHigh "Nominal current on primary side";

12: Name 'IscHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: Modelica.Units.SI.Current IscHigh=IHigh/Zperc "Short circuit current on primary side";

13: Name 'Zp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zp. Affected line: Modelica.Units.SI.Impedance Zp=VHigh/IscHigh "Impedance of the primary side (module)";

14: Name 'Z1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z. Affected line: Modelica.Units.SI.Impedance Z1[2]={Zp*cos(atan(XoverR)),Zp*sin(atan(XoverR))} "Impedance of the primary side of the transformer";

15: Name 'Zs' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zs. Affected line: Modelica.Units.SI.Impedance Zs=VLow/IscLow "Impedance of the secondary side (module)";

16: Name 'Z2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z. Affected line: Modelica.Units.SI.Impedance Z2[2]={Zs*cos(atan(XoverR)),Zs*sin(atan(XoverR))} "Impedance of the secondary side of the transformer";

17: Name 'S_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: S. Affected line: Modelica.Units.SI.Power S_p=Modelica.Fluid.Utilities.regRoot(P_p[1]^2 + P_p[2] ^2, delta=0.1) "Apparent power at terminal p";

18: Name 'S_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: S. Affected line: Modelica.Units.SI.Power S_n=Modelica.Fluid.Utilities.regRoot(P_n[1]^2 + P_n[2] ^2, delta=0.1) "Apparent power at terminal n";

19: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: equation // Efficiency eta = AixLib.Utilities.Math.Functions.smoothMin( x1= Modelica.Fluid.Utilities.regRoot(P_p[1]^2 + P_p[2]^2, delta=0.01)/ Modelica.Fluid.Utilities.regRoot(P_n[1]^2 + P_n[2]^2 + 1e-6, delta=0.01), x2= Modelica.Fluid.Utilities.regRoot(P_n[1]^2 + P_n[2]^2, delta=0.01)/ Modelica.Fluid.Utilities.regRoot(P_p[1]^2 + P_p[2]^2 + 1e-6, delta=0.01), deltaX = 0.01);


AixLib/Utilities/IO/Files/Examples/WeeklySchedule7to19.mo
1: Missing documentation. Affected line: AixLib.Utilities.IO.Files.WeeklySchedule sch annotation (Placement(transformation(extent={{-10,-10},{10,10}})));


AixLib/Electrical/AC/Interfaces/PowerOutput.mo
1: Name 'apparent' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: apparent. Affected line: output Modelica.Units.SI.ReactivePower apparent "Apparent power";


AixLib/Electrical/Transmission/Functions/Validation/SelectCable_med.mo
1: Name 'safety_factor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: safety_factor. Affected line: parameter Real safety_factor = 1.2 "Safety factor";


AixLib/Fluid/SolarCollectors/Examples/FlatPlateShaCoeTrue.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = AixLib.Media.Water "Medium in the system";


AixLib/Fluid/HeatPumps/ModularReversible/RefrigerantCycle/BaseClasses/PartialTableData2D.mo
1: Name 'mEva_flow_min' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Eva_flow. Affected line: parameter Modelica.Units.SI.MassFlowRate mEva_flow_min "Minimal evaporator mass flow rate";

2: Name 'mEva_flow_max' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Eva_flow. Affected line: parameter Modelica.Units.SI.MassFlowRate mEva_flow_max "Maximal evaporator mass flow rate";

3: Name 'mCon_flow_min' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Con_flow. Affected line: parameter Modelica.Units.SI.MassFlowRate mCon_flow_min "Minimal evaporator mass flow rate";

4: Name 'mCon_flow_max' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Con_flow. Affected line: parameter Modelica.Units.SI.MassFlowRate mCon_flow_max "Maximal evaporator mass flow rate";


AixLib/Electrical/AC/ThreePhasesBalanced/Sensors/GeneralizedSensor.mo
1: Name 'S' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: S. Affected line: Modelica.Blocks.Interfaces.RealOutput S[PhaseSystems.OnePhase.n]( each final quantity="Power", each final unit="W")= AixLib.Electrical.PhaseSystems.OnePhase.phasePowers_vi(v=terminal_n.v, i=terminal_n.i) "Phase powers" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={-60,-50}),iconTransformation( extent={{-10,-10},{10,10}}, rotation=270, origin={-60,-90})));


AixLib/Electrical/PhaseSystems/ThreePhase_d.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function phaseVoltages "Return phase to neutral voltages" extends Modelica.Icons.Function;

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: input SI.Voltage V "system voltage";input SI.Angle phi = 0 "phase angle";output SI.Voltage v[n] "phase to neutral voltages";algorithm v := {V}/sqrt(3);end phaseVoltages;

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function systemVoltage "Return system voltage as function of phase voltages" extends Modelica.Icons.Function;


AixLib/Electrical/Transmission/Functions/selectCable_med.mo
1: Name 'cable' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cable. Affected line: output AixLib.Electrical.Transmission.MediumVoltageCables.Generic cable "Cable";

2: Missing documentation, Name 'safety_factor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: safety_factor. Affected line: protected parameter Real safety_factor = 1.2;

3: Missing documentation, Name 'Al10;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Al10. Affected line: AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_10 Al10;

4: Missing documentation, Name 'Al30;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Al30. Affected line: AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_30 Al30;

5: Missing documentation, Name 'Al40;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Al40. Affected line: AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_40 Al40;

6: Missing documentation, Name 'Al350;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Al350. Affected line: AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_350 Al350;

7: Missing documentation, Name 'Al500;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Al500. Affected line: AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_500 Al500;

8: Missing documentation, Name 'Al1000;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Al1000. Affected line: AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_1000 Al1000;

9: Missing documentation, Name 'Al1500;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Al1500. Affected line: AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_1500 Al1500;


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/Examples/ACSimpleGrid_N.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Network_N network( redeclare AixLib.Electrical.Transmission.Grids.TestGrid2Nodes grid, V_nominal=480) "Network model that represents the connection between the source and the load" annotation (Placement(transformation(extent={{20,-10},{0,10}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Loads.Inductive_N load( V_nominal=480, mode=AixLib.Electrical.Types.Load.VariableZ_P_input, plugPhase3=false) "Load connected to the network" annotation (Placement(transformation(extent={{-34,10},{-54,30}})));Sources.FixedVoltage_N E( f=60, V=480, definiteReference=true) "Voltage source" annotation ( Placement(transformation( extent={{10,-10},{-10,10}}, rotation=180, origin={-50,-20})));

3: Name 'load_inputs' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load_inputs. Affected line: Modelica.Blocks.Sources.Ramp load_inputs( height=5000, offset=-2000, duration=0.5, startTime=0.25) "Input signal for the power consumption of the loads" annotation (Placement(transformation(extent={{-90,10},{-70,30}})));


AixLib/Electrical/Transmission/Functions/selectVoltageLevel.mo
1: Name 'level' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: level. Affected line: output AixLib.Electrical.Types.VoltageLevel level "Type of voltage level";


AixLib/Electrical/AC/OnePhase/Examples/GeneratorLoadGrid.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.Grid grid( f=60, V=120, phiSou=0.5235987755983) "Electrical grid" annotation (Placement(transformation(extent={{0,40},{20,60}})));Sources.Generator sou(f=60, phiGen(displayUnit="rad")) "Gas turbine" annotation (Placement(transformation( extent={{-10,10},{10,-10}}, origin={-30,-10})));

2: Missing documentation, Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( height=1e4, duration=0.6, startTime=0.1, offset=0) annotation (Placement(transformation(extent={{-80,-20},{-60,0}})));


AixLib/Fluid/Movers/Examples/StaticReset.mo
1: Missing documentation, Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package Medium = AixLib.Media.Air;

2: Name 'fan3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: fan3. Affected line: AixLib.Fluid.Movers.SpeedControlled_y fan3( redeclare package Medium = Medium, energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial, per( powerOrEfficiencyIsHydraulic=fan1.per.powerOrEfficiencyIsHydraulic, pressure=fan1.per.pressure, etaHydMet=AixLib.Fluid.Movers.BaseClasses.Types.HydraulicEfficiencyMethod.Efficiency_VolumeFlowRate, etaMotMet=AixLib.Fluid.Movers.BaseClasses.Types.MotorEfficiencyMethod.NotProvided, efficiency(eta={0.7}))) "Fan using constant efficiency" annotation (Placement(transformation(extent={{-10,-30},{10,-10}})));

3: Name 'pDucSta3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Sta3. Affected line: AixLib.Fluid.Sensors.RelativePressure pDucSta3( redeclare package Medium = Medium) "Duct static pressure" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=180, origin={-50,-50})));

4: Name 'conPID3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: con3. Affected line: AixLib.Controls.Continuous.LimPID conPID3( Td=1, k=0.5, Ti=15) "PI controller" annotation (Placement(transformation(extent={{-60,0},{-40,20}})));

5: Documentation too short. Affected line: Modelica.Blocks.Math.Gain gai1(k=2/dp_nominal) "Gain" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=90, origin={-50,180})));

6: Documentation too short. Affected line: Modelica.Blocks.Math.Gain gai2(k=2/dp_nominal) "Gain" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=90, origin={-50,78})));

7: Documentation too short, Name 'gai3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: gai3. Affected line: Modelica.Blocks.Math.Gain gai3(k=2/dp_nominal) "Gain" annotation ( Placement(transformation( extent={{-10,-10},{10,10}}, rotation=90, origin={-50,-22})));


AixLib/ThermalZones/ISO13790/Zone5R1C/Zone.mo
1: Name 'b' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: b. Affected line: parameter Real b=0.5 "Adjustment factor for ground heat transfer" annotation (Dialog(group="Opaque constructions"));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable parameter ISO13790.Data.Generic buiMas "Building mass" annotation ( choicesAllMatching=true, Placement(transformation(extent={{-100,-130},{-80,-110}})));

3: Name 'nOrientations' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Orientations. Affected line: parameter Integer nOrientations(min=1) = 4 "Number of orientations for vertical walls";

4: Name 'gFac' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: g. Affected line: parameter Real gFac(min=0, max=1) "Energy transmittance of glazings" annotation(Dialog(group="Windows"));

5: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BaseClasses.GlazedElements win( final n=nOrientations, final AWin=AWin, final surTil=surTil, final surAzi=surAzi, final gFac=gFac, final winFra=winFra) "Solar heat gains of glazed elements" annotation (Placement(transformation(extent={{-100,-60},{-80,-40}})));BaseClasses.OpaqueElements opa( final n=nOrientations, final AWal=AWal, final ARoo=ARoo, final UWal=UWal, final URoo=URoo, final surTil=surTil, final surAzi=surAzi) "Solar heat gains of opaque elements" annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));BaseClasses.GainSurface phiSur( ATot=AFlo*ratSur, facMas=buiMas.facMas, AFlo=AFlo, HWinGai=HWin.G) "Heat flow injected to surface node" annotation (Placement(transformation(extent={{120,-10},{100,10}})));

6: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BaseClasses.GainMass phiMas( ATot=AFlo*ratSur, facMas=buiMas.facMas, AFlo=AFlo) "Heat flow injected to mass node" annotation (Placement(transformation(extent={{120,-90},{100,-70}})));

7: Missing documentation. Affected line: Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow heaAir annotation (Placement(transformation(extent={{80,70},{60,90}})));

8: Missing documentation. Affected line: Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow heaSur annotation (Placement(transformation(extent={{80,-10},{60,10}})));

9: Missing documentation. Affected line: Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow heaMas annotation (Placement(transformation(extent={{80,-90},{60,-70}})));


AixLib/Fluid/HeatPumps/ModularReversible/Validation/Comparative/BaseClasses/PartialComparison.mo
1: Name 'Medium2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package Medium2 = AixLib.Media.Water "Medium model";

2: Name 'etaCarnot_nominal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Carnot. Affected line: parameter Real etaCarnot_nominal=0.3 "Carnot effectiveness (=COP/COP_Carnot) used during simulation if use_eta_Carnot_nominal = true";

3: Name 'T1_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T1. Affected line: parameter Modelica.Units.SI.Temperature T1_start=303.15 "Initial or guess value of set point";

4: Name 'T2_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T2. Affected line: parameter Modelica.Units.SI.Temperature T2_start=278.15 "Initial or guess value of set point";

5: Name 'm2_flow_nominal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: m2. Affected line: parameter Modelica.Units.SI.MassFlowRate m2_flow_nominal "Nominal mass flow rate at chilled water side";

6: Name 'm1_flow_nominal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: m1. Affected line: parameter Modelica.Units.SI.MassFlowRate m1_flow_nominal "Nominal mass flow rate at condenser water wide";

7: Missing documentation. Affected line: AixLib.Fluid.Sources.Boundary_pT sin1(redeclare package Medium = Medium1) annotation (Placement( transformation( extent={{10,-10},{-10,10}}, origin={70,30})));

8: Missing documentation. Affected line: AixLib.Fluid.Sources.Boundary_pT sin2(redeclare package Medium = Medium2) annotation (Placement( transformation( extent={{-10,-10},{10,10}}, origin={-50,-30})));


AixLib/Electrical/Transmission/BaseClasses/PartialTwoPortInductance.mo
1: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance L "Inductance" annotation (Evaluate=true);


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/BalancedStepUp/DY.mo
1: Missing documentation, Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load(k=-1800e3) annotation (Placement(transformation(extent={{54,62},{74,82}})));

2: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerStepUpDY transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase, conv1(V1(start={11E3, 6E3})), conv2(V1(start={-700, -11E3}))) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));


AixLib/Electrical/DC/Lines/TwoPortRCLine.mo
1: Name 'Vc_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vc. Affected line: parameter Modelica.Units.SI.Voltage Vc_start=V_nominal "Initial value of the voltage of the capacitance in the middle of the line";

2: Name 'Vc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vc. Affected line: Modelica.Units.SI.Voltage Vc(start=Vc_start, stateSelect=StateSelect.prefer) "Voltage of the capacitor";


AixLib/Utilities/Math/Examples/Interpolate.mo
1: Name 'table' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: table. Affected line: parameter Real table[:,:]=[-50,-0.08709; -25,-0.06158; -10,-0.03895; -5,-0.02754;-3,-0.02133; -2,-0.01742; -1,-0.01232; 0,0; 1,0.01232; 2,0.01742; 3,0.02133;4.5,0.02613; 50,0.02614] "Table of mass flow rate in kg/s (second column) as a function of pressure difference in Pa (first column)";parameter Real[:] xd=table[:,1] "x-axis support points";parameter Real[size(xd, 1)] yd=table[:,2] "y-axis support points";

2: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: parameter Real[size(xd, 1)] d = AixLib.Utilities.Math.Functions.splineDerivatives( x=xd, y=yd, ensureMonotonicity=true) "Derivatives at the support points";

3: Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( duration=500, height=100, offset=-50) "Ramp from -50Pa to +50Pa" annotation (Placement(transformation(extent={{-60,-10},{-40,10}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Loads/Examples/ThreePhases.mo
1: Name 'errorY' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: error, Y. Affected line: Modelica.Units.SI.Power errorY=sqrt((sen_Y.S[1] - (sen_a.S[1] + sen_b.S[1] + sen_c.S[1]))^2 + (sen_Y.S[2] - (sen_a.S[2] + sen_b.S[2] + sen_c.S[2]))^2) "Difference of the power consumption in the star (Y) connection";

2: Name 'errorD' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: error, D. Affected line: Modelica.Units.SI.Power errorD=sqrt((sen_D.S[1] - (sen_ab.S[1] + sen_bc.S[1] + sen_ca.S[1]))^2 + (sen_D.S[2] - (sen_ab.S[2] + sen_bc.S[2] + sen_ca.S[ 2]))^2) "Difference of the power consumption in the triangle (D) connection";


AixLib/Electrical/Transmission/BaseClasses/PartialLine.mo
1: Name 'VoltageLosses' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Voltage, Losses. Affected line: Real VoltageLosses(unit = "1") = abs(PhaseSystem_p.systemVoltage(terminal_p.v) - PhaseSystem_n.systemVoltage(terminal_n.v))/ AixLib.Utilities.Math.Functions.smoothMax( PhaseSystem_p.systemVoltage(terminal_p.v), PhaseSystem_n.systemVoltage(terminal_n.v), 1.0) "Percentage of voltage losses across the line";

2: Name 'n_' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_. Affected line: protected parameter Integer n_ = size(terminal_n.i,1) "Number of cables";

3: Name 'nominal_i_' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: nominal_i_. Affected line: parameter Real nominal_i_ = P_nominal / V_nominal "Nominal current flowing through the line";

4: Name 'nominal_v_' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: nominal_v_. Affected line: parameter Real nominal_v_ = V_nominal "Nominal voltage of the line";


AixLib/Fluid/HeatPumps/ModularReversible/Examples/BaseClasses/PartialOneRoomRadiator.mo
1: Name 'MediumWat' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package MediumWat = AixLib.Media.Water "Medium model for water";


AixLib/ThermalZones/ISO13790/Examples/FreeFloating.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Zone5R1C.Zone zon5R1C( airRat=0.5, AWin={0,0,3,0}, UWin=1.8, AWal={12,12,9,12}, ARoo=16, UWal=1.3, URoo=1.3, UFlo=1, AFlo=16, VRoo=16*3, redeclare replaceable AixLib.ThermalZones.ISO13790.Data.Light buiMas, nOrientations=4, surTil={1.5707963267949,1.5707963267949,1.5707963267949,1.5707963267949}, surAzi={3.1415926535898,-1.5707963267949,0,1.5707963267949}, gFac=0.5) "Thermal zone" annotation (Placement(transformation(extent={{26,-12},{54,16}})));

2: Name 'intGains' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Gains. Affected line: Modelica.Blocks.Sources.Constant intGains(k=10) "internal heat gains in Watt" annotation (Placement(transformation(extent={{-80,-20},{-60,0}})));


AixLib/Electrical/PhaseSystems/ThreePhase_dq.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends systemVoltage "Return system voltage as function of phase voltages" algorithm V := Modelica.Fluid.Utilities.regRoot(3*v*v, delta = 1e-5);

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends systemCurrent "Return system current as function of phase currents" algorithm I := Modelica.Fluid.Utilities.regRoot(i*i, delta = 1e-5);


AixLib/Fluid/HeatPumps/ModularReversible/RefrigerantCycle/BaseClasses/PartialCarnot.mo
1: Name 'etaCarnot_nominal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Carnot. Affected line: parameter Real etaCarnot_nominal=0.3 "Constant Carnot effectiveness";

2: Name 'reaCarnotCOP' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Carnot. Affected line: Modelica.Blocks.Sources.RealExpression reaCarnotCOP(final y=TUseSidAct/ AixLib.Utilities.Math.Functions.smoothMax( x1=dTCarMin, x2=(TConAct - TEvaAct), deltaX=0.25)) "Internal calculation of Carnot COP" annotation (Placement(transformation(extent={{-100,60},{-80,80}})));

3: Name 'pasThrYMea' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Y. Affected line: Modelica.Blocks.Routing.RealPassThrough pasThrYMea "From signal bus" annotation (Placement(transformation(extent={{20,60},{40,80}})));

4: Name 'reaCarnotEff' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Carnot. Affected line: Modelica.Blocks.Sources.RealExpression reaCarnotEff(y=etaCarnot_nominal) "Internal calculation of Carnot effectiveness" annotation (Placement(transformation(extent={{-100,40},{-80,60}})));


AixLib/ThermalZones/ISO13790/Zone5R1C/ZoneHVAC.mo
1: Missing documentation, Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = Modelica.Media.Interfaces.PartialMedium annotation ( choices(choice(redeclare package Medium = AixLib.Media.Air "Moist air")));

2: Name 'nPorts' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Ports. Affected line: parameter Integer nPorts=0 "Number of fluid ports" annotation (Evaluate=true, Dialog( connectorSizing=true, tab="General", group="Ports"));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.MixingVolumes.MixingVolumeMoistAir vol( redeclare final package Medium = Medium, energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial, m_flow_nominal=VRoo*AixLib.Media.Air.dStp*3/3600, V=VRoo, nPorts=nPorts) "Air volume" annotation (Placement(transformation(extent={{-50,32},{-30,52}})));

4: Name 'ports' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ports. Affected line: Modelica.Fluid.Vessels.BaseClasses.VesselFluidPorts_b ports[nPorts]( redeclare each final package Medium = Medium) "Fluid port for adding HVAC system, air infiltration and exfiltration" annotation (Placement(transformation( extent={{-39,-10},{39,10}}, rotation=90, origin={-140,-80}), iconTransformation( extent={{-39,-10},{39,10}}, rotation=90, origin={-130,-82})));

5: Name 'h_fg' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: h_fg. Affected line: protected constant Modelica.Units.SI.SpecificEnergy h_fg= AixLib.Media.Air.enthalpyOfCondensingGas(273.15 + 37) "Latent heat of water vapor";


AixLib/Electrical/AC/OnePhase/Conversion/ACACConverter.mo
1: Name 'conversionFactor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: conversion, Factor. Affected line: parameter Real conversionFactor(min = Modelica.Constants.eps) "Ratio of QS rms voltage on side 2 / QS rms voltage on side 1";

2: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "If true, connect side 1 of converter to ground" annotation(Evaluate=true,Dialog(tab = "Ground", group="side 1"));

3: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "If true, connect side 2 of converter to ground" annotation(Evaluate=true, Dialog(tab = "Ground", group="side 2"));

4: Name 'LossPower' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Loss, Power. Affected line: Modelica.Units.SI.Power LossPower[2] "Loss power";


AixLib/Electrical/AC/OnePhase/Sources/Examples/FixedVoltageSource.mo
1: Name 'RL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Inductive RL( P_nominal=-300, mode=AixLib.Electrical.Types.Load.FixedZ_steady_state, V_nominal=120) "Load model" annotation (Placement(transformation(extent={{20,-10},{40,10}})));


AixLib/ThermalZones/ISO13790/BaseClasses/GlazedElements.mo
1: Name 'gFac' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: g. Affected line: parameter Real gFac "Energy transmittance of glazings";

2: Missing documentation. Affected line: AixLib.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement( transformation(extent={{-120,-20},{-80,20}}), iconTransformation(extent= {{-110,-10},{-90,10}})));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BoundaryConditions.SolarIrradiation.DirectTiltedSurface HDirTil[n]( final til=surTil, final azi=surAzi) "Direct solar irradiation on surface" annotation (Placement(transformation(extent={{-60,20},{-40,40}})));

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BoundaryConditions.SolarIrradiation.DiffusePerez HDifTil[n]( final til=surTil, final azi=surAzi) "Diffuse solar irradiation on surface" annotation (Placement(transformation(extent={{-60,-40},{-40,-20}})));

5: Name 'multiSum' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: multi. Affected line: Modelica.Blocks.Math.MultiSum multiSum(final nu=n) "Sum of all orientations" annotation (Placement(transformation(extent={{62,-6},{74,6}})));


AixLib/ThermalZones/ISO13790/Examples/HeatingCooling.mo
1: Missing documentation, Name 'multiplex2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: multiplex. Affected line: Modelica.Blocks.Routing.Multiplex2 multiplex2 annotation ( Placement(visible = true, transformation(extent={{30,56},{38,64}}, rotation = 0)));


AixLib/Fluid/Movers/BaseClasses/Validation/EulerCurve.mo
1: Name 'x' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: x. Affected line: Real x "log10(Eu/Eu_peak)";

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: function correlation input Real x "log10(Eu/Eu_peak)";

3: Missing documentation, Name 'a' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: a. Affected line: protected constant Real a=-2.732094, b=2.273014, c=0.196344, d=5.267518;

4: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Real Z1, Z2, Z3;


AixLib/Fluid/SolarCollectors/Validation/EN12975NPanels.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = AixLib.Media.Water "Medium in the system";

2: Name 'nPanels' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Panels. Affected line: parameter Integer nPanels=10 "Number of panels";

3: Name 'gaiNPan' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: N. Affected line: Modelica.Blocks.Math.Gain gaiNPan(k=nPanels) "Gain for number of panels" annotation (Placement(transformation(extent={{-50,-30},{-30,-10}})));


AixLib/Electrical/Interfaces/PartialConversion.mo
1: Name 'v_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: Modelica.Units.SI.Voltage v_p "Voltage drop between the two positive pins";

2: Name 'v_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: Modelica.Units.SI.Voltage v_n "Voltage drop between the two negative pins";

3: Name 'i_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: Modelica.Units.SI.Current i_p "Current flowing through the positive pins";

4: Name 'i_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: Modelica.Units.SI.Current i_n "Current flowing through the negative pins";


AixLib/Fluid/Geothermal/Aquifer/MultiWell.mo
1: Name 'length' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: length. Affected line: parameter Modelica.Units.SI.Height length "Length of one well, used to compute pressure drop";

2: Name 'rWB' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: r, W, B. Affected line: parameter Modelica.Units.SI.Radius rWB=0.1 "Wellbore radius" annotation ( Dialog(group="Subsurface"));

3: Name 'rMax' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: r. Affected line: parameter Modelica.Units.SI.Radius rMax=d/2 "Domain radius" annotation ( Dialog(group="Subsurface"));

4: Name 'dpAquifer_nominal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Aquifer. Affected line: parameter Modelica.Units.SI.PressureDifference dpAquifer_nominal(displayUnit= "Pa")= m_flow_nominal/nPai*Modelica.Constants.g_n/2/Modelica.Constants.pi/h/aquDat.K*log(d/rWB) "Pressure drop at nominal mass flow rate in the aquifer" annotation ( Dialog(group="Hydraulic circuit"));

5: Name 'dpWell_nominal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Well. Affected line: final parameter Modelica.Units.SI.PressureDifference dpWell_nominal( displayUnit="Pa") = 2*resWelCol.dp_nominal "Pressure drop at nominal mass flow rate in the well" annotation (Dialog(group="Hydraulic circuit"));

6: Name 'rVol' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: r. Affected line: final parameter Modelica.Units.SI.Radius rVol[nVol]( each final fixed=false) "Radius to the center of the i-th domain";

7: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Movers.Preconfigured.SpeedControlled_y pumCol( redeclare final package Medium = Medium, final m_flow_nominal=m_flow_nominal/nPai, final dp_nominal=resAqu.dpMea_nominal + 2* resWelCol.dp_nominal + dpExt_nominal) "Pump to extract from cold well" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=90, origin={-120,0})));Movers.Preconfigured.SpeedControlled_y pumHot( redeclare final package Medium = Medium, final m_flow_nominal=pumCol.m_flow_nominal, final dp_nominal=pumCol.dp_nominal) "Pump to extract from hot well" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=90, origin={120,0})));

8: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: FixedResistances.PressureDrop resWelCol( redeclare final package Medium = Medium, m_flow_nominal=m_flow_nominal/nPai, final from_dp=false, dp_nominal= Modelica.Fluid.Pipes.BaseClasses.WallFriction.Detailed.pressureLoss_m_flow( m_flow=m_flow_nominal/nPai, rho_a=rhoWat, rho_b=rhoWat, mu_a=mu, mu_b=mu, length=length, diameter=rWB, roughness=2.5e-5)) "Pressure drop in the cold well" annotation ( Placement(transformation( extent={{10,-10},{-10,10}}, rotation=-90, origin={-120,70})));

9: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sensors.RelativePressure dpWelCol( redeclare package Medium = Medium) "Pressure drop of cold well" annotation (Placement(transformation( extent={{10,-10},{-10,10}}, rotation=90, origin={-100,70})));Airflow.Multizone.Point_m_flow resAqu( redeclare final package Medium = Medium, m=1, final dpMea_nominal=dpAquifer_nominal, final mMea_flow_nominal=m_flow_nominal/nPai) "Pressure drop in the cold and warm side of the aquifer" annotation ( Placement(transformation( extent={{10,-10},{-10,10}}, rotation=0, origin={0,-70})));

10: Name 'r' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: r. Affected line: protected parameter Modelica.Units.SI.Radius r[nVol + 1](each fixed=false) "Radius to the boundary of the i-th domain";

11: Name 'kVol' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: k. Affected line: parameter Real kVol(fixed=false) "Heat conductivity normalized with volume";

12: Name 'mu' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mu. Affected line: parameter Modelica.Units.SI.DynamicViscosity mu=Medium.dynamicViscosity(Medium.setState_pTX( Medium.p_default, Medium.T_default, Medium.X_default)) "Water dynamic viscosity";

13: Name 'kWat' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: k. Affected line: parameter Modelica.Units.SI.ThermalConductivity kWat=Medium.thermalConductivity(Medium.setState_pTX( Medium.p_default, Medium.T_default, Medium.X_default)) "Water thermal conductivity";

14: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: MixingVolumes.MixingVolume volHot[nVol]( redeclare final package Medium = Medium, each T_start=THot_start, each m_flow_nominal=m_flow_nominal, V=VWat, each nPorts=2) "Array of fluid volumes representing the fluid flow in the warm side of the aquifer" annotation (Placement(transformation(extent={{50,-80},{30,-100}})));


AixLib/Fluid/SolarCollectors/BaseClasses/EN12975SolarGain.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = Modelica.Media.Interfaces.PartialMedium "Medium in the system";

2: Name 'eta0' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: eta0. Affected line: parameter Real eta0(final unit="1") "Optical efficiency (maximum efficiency)";

3: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: parameter Real[size(incAngDat,1)] incAngModDat(each final unit="1") "Incidence angle modifier spline derivative coefficients";

4: Name 'iamDiff' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Diff. Affected line: parameter Real iamDiff "Incidence angle modifier for diffuse radiation";

5: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: parameter Real[size(incAngDat, 1)] dMonotone(each fixed=false) "Derivatives";

6: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: initial algorithm dMonotone := AixLib.Utilities.Math.Functions.splineDerivatives( x=incAngDat, y=incAngModDat, ensureMonotonicity=false);


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/BaseClasses/IEEE4.mo
1: Name 'VLL_side1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L, L_side. Affected line: parameter Modelica.Units.SI.Voltage VLL_side1=12.47e3 "Voltage line to line side 1";

2: Name 'VLL_side2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L, L_side. Affected line: parameter Modelica.Units.SI.Voltage VLL_side2=4.16e3 "Voltage line to line side 2";

3: Name 'VARbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rbase. Affected line: parameter Modelica.Units.SI.ApparentPower VARbase=6000e3 "Base VA power of the transformer";

4: Name 'line1_use_Z_y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: line1_use_. Affected line: parameter Boolean line1_use_Z_y = true "Choose between Zy or Zd impedance matrix for line 1";

5: Name 'line2_use_Z_y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: line2_use_. Affected line: parameter Boolean line2_use_Z_y = true "Choose between Zy or Zd impedance matrix for line 2";

6: Name 'V2_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: V2_ref. Affected line: parameter Modelica.Units.SI.Voltage V2_ref[3]={7107,7140,7121} "Reference RMS voltage node 2 - IEEE results";

7: Name 'V3_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: V3_ref. Affected line: parameter Modelica.Units.SI.Voltage V3_ref[3]={2247,2269,2256} "Reference RMS voltage node 3 - IEEE results";

8: Name 'V4_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: V4_ref. Affected line: parameter Modelica.Units.SI.Voltage V4_ref[3]={1918,2061,1981} "Reference RMS voltage node 4 - IEEE results";

9: Name 'Theta2_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Theta2_ref. Affected line: parameter Modelica.Units.SI.Angle Theta2_ref[3](each displayUnit="deg") = {-0.3, -120.3,119.6} "Reference voltage phase angle node 2 - IEEE results";

10: Name 'Theta3_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Theta3_ref. Affected line: parameter Modelica.Units.SI.Angle Theta3_ref[3](each displayUnit="deg") = {-3.7, -123.5,116.4} "Reference voltage phase angle node 3 - IEEE results";

11: Name 'Theta4_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Theta4_ref. Affected line: parameter Modelica.Units.SI.Angle Theta4_ref[3](each displayUnit="deg") = {-9.1, -128.3,110.9} "Reference voltage phase angle node 4 - IEEE results";

12: Name 'err_V2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_. Affected line: Modelica.Units.SI.Voltage err_V2[3]=node2.V - V2_ref "Error on voltage at node 2";

13: Name 'err_V3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, V3. Affected line: Modelica.Units.SI.Voltage err_V3[3]=node3.V - V3_ref "Error on voltage at node 3";

14: Name 'err_V4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, V4. Affected line: Modelica.Units.SI.Voltage err_V4[3]=node4.V - V4_ref "Error on voltage at node 4";

15: Name 'err_Theta2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, Theta. Affected line: Modelica.Units.SI.Angle err_Theta2[3](each displayUnit="deg") = node2.theta - Theta2_ref "Error on voltage at node 2";

16: Name 'err_Theta3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, Theta3. Affected line: Modelica.Units.SI.Angle err_Theta3[3](each displayUnit="deg") = node3.theta - Theta3_ref "Error on voltage at node 3";

17: Name 'err_Theta4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, Theta4. Affected line: Modelica.Units.SI.Angle err_Theta4[3](each displayUnit="deg") = node4.theta - Theta4_ref "Error on voltage at node 4";

18: Name 'err_V2_percent' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, V2_percent. Affected line: Real err_V2_percent[3] = 100*{err_V2[i]/V2_ref[i] for i in 1:3} "Error in RMS voltage at node 2 -- percent";

19: Name 'err_V3_percent' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, V3_percent. Affected line: Real err_V3_percent[3] = 100*{err_V3[i]/V3_ref[i] for i in 1:3} "Error in RMS voltage at node 3 -- percent";

20: Name 'err_V4_percent' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, V4_percent. Affected line: Real err_V4_percent[3] = 100*{err_V4[i]/V4_ref[i] for i in 1:3} "Error in RMS voltage at node 4 -- percent";

21: Name 'err_Theta2_percent' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, Theta2_percent. Affected line: Real err_Theta2_percent[3] = 100*{err_Theta2[i]/Theta2_ref[i] for i in 1:3} "Error in voltage phase angle at node 2 -- percent";

22: Name 'err_Theta3_percent' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, Theta3_percent. Affected line: Real err_Theta3_percent[3] = 100*{err_Theta3[i]/Theta3_ref[i] for i in 1:3} "Error in voltage phase angle at node 3 -- percent";

23: Name 'err_Theta4_percent' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: err_, Theta4_percent. Affected line: Real err_Theta4_percent[3] = 100*{err_Theta4[i]/Theta4_ref[i] for i in 1:3} "Error in voltage phase angle at node 4 -- percent";

24: Name 'source' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: source. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Sources.FixedVoltage source( f=60, V=VLL_side1) "Voltage source" annotation (Placement(transformation(extent={{-98,0},{-78,20}})));

25: Name 'line1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: line. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Lines.TwoPortMatrixRL line1( Z11=L1*(if line1_use_Z_y then Z11_y else Z11_d), Z12=L1*(if line1_use_Z_y then Z12_y else Z12_d), Z13=L1*(if line1_use_Z_y then Z13_y else Z13_d), Z22=L1*(if line1_use_Z_y then Z22_y else Z22_d), Z23=L1*(if line1_use_Z_y then Z23_y else Z23_d), Z33=L1*(if line1_use_Z_y then Z33_y else Z33_d), V_nominal=VLL_side1) "Line at primary side" annotation (Placement(transformation(extent={{-68,0},{-48,20}})));

26: Name 'line2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: line. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Lines.TwoPortMatrixRL line2( Z11=L2*(if line2_use_Z_y then Z11_y else Z11_d), Z12=L2*(if line2_use_Z_y then Z12_y else Z12_d), Z13=L2*(if line2_use_Z_y then Z13_y else Z13_d), Z22=L2*(if line2_use_Z_y then Z22_y else Z22_d), Z23=L2*(if line2_use_Z_y then Z23_y else Z23_d), Z33=L2*(if line2_use_Z_y then Z33_y else Z33_d), V_nominal=VLL_side2) "Line at secondary side" annotation (Placement(transformation(extent={{12,0},{32,20}})));

27: Documentation too short, Name 'loadRL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load, L. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Loads.Inductive loadRL( pf=0.9, V_nominal=VLL_side2, mode=AixLib.Electrical.Types.Load.VariableZ_P_input, use_pf_in=true) "Load" annotation (Placement(transformation(extent={{54,0},{74,20}})));

28: Name 'node1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: node. Affected line: replaceable AixLib.Electrical.AC.ThreePhasesUnbalanced.Sensors.BaseClasses.GeneralizedProbe node1(perUnit=false, V_nominal=VLL_side1) "Probe at source" annotation (Placement(transformation(extent={{-84,28},{-64,48}})));

29: Name 'node2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: node. Affected line: replaceable AixLib.Electrical.AC.ThreePhasesUnbalanced.Sensors.BaseClasses.GeneralizedProbe node2(perUnit=false, V_nominal=VLL_side1) "Probe at the primary side of the transformer" annotation (Placement(transformation(extent={{-52,28},{-32,48}})));

30: Name 'node3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: node3. Affected line: replaceable AixLib.Electrical.AC.ThreePhasesUnbalanced.Sensors.BaseClasses.GeneralizedProbe node3(perUnit=false, V_nominal=VLL_side2) "Probe at the secondary side of the transformer" annotation (Placement(transformation(extent={{-4,28},{16,48}})));

31: Name 'node4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: node4. Affected line: replaceable AixLib.Electrical.AC.ThreePhasesUnbalanced.Sensors.BaseClasses.GeneralizedProbe node4(perUnit=false, V_nominal=VLL_side2) "Probe at the load" annotation (Placement(transformation(extent={{28,28},{48,48}})));

32: Name 'L1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: protected parameter Real L1 = 2000*(1.0/5280.0) "Length line 1 in miles";

33: Name 'L2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Real L2 = 2500*(1.0/5280.0) "Length line 2 in miles";

34: Name 'Z11_d' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z11_d. Affected line: parameter Modelica.Units.SI.Impedance Z11_d[2]={0.4013,1.4133} "Element [1,1] of impedance matrix";

35: Name 'Z12_d' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z12_d. Affected line: parameter Modelica.Units.SI.Impedance Z12_d[2]={0.0953,0.8515} "Element [1,2] of impedance matrix";

36: Name 'Z13_d' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z13_d. Affected line: parameter Modelica.Units.SI.Impedance Z13_d[2]={0.0953,0.7266} "Element [1,3] of impedance matrix";

37: Name 'Z22_d' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z22_d. Affected line: parameter Modelica.Units.SI.Impedance Z22_d[2]={0.4013,1.4133} "Element [2,2] of impedance matrix";

38: Name 'Z23_d' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z23_d. Affected line: parameter Modelica.Units.SI.Impedance Z23_d[2]={0.0953,0.7802} "Element [2,3] of impedance matrix";

39: Name 'Z33_d' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z33_d. Affected line: parameter Modelica.Units.SI.Impedance Z33_d[2]={0.4013,1.4133} "Element [3,3] of impedance matrix";

40: Name 'Z11_y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z11_y. Affected line: parameter Modelica.Units.SI.Impedance Z11_y[2]={0.4576,1.078} "Element [1,1] of impedance matrix";

41: Name 'Z12_y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z12_y. Affected line: parameter Modelica.Units.SI.Impedance Z12_y[2]={0.1559,0.5017} "Element [1,2] of impedance matrix";

42: Name 'Z13_y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z13_y. Affected line: parameter Modelica.Units.SI.Impedance Z13_y[2]={0.1535,0.3849} "Element [1,3] of impedance matrix";

43: Name 'Z22_y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z22_y. Affected line: parameter Modelica.Units.SI.Impedance Z22_y[2]={0.4666,1.0482} "Element [2,2] of impedance matrix";

44: Name 'Z23_y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z23_y. Affected line: parameter Modelica.Units.SI.Impedance Z23_y[2]={0.158,0.4236} "Element [2,3] of impedance matrix";

45: Name 'Z33_y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z33_y. Affected line: parameter Modelica.Units.SI.Impedance Z33_y[2]={0.4615,1.0651} "Element [3,3] of impedance matrix";


AixLib/Utilities/IO/Files/BaseClasses/WeeklyScheduleObject.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: impure function constructor "Creates an object for the weekly schedule" extends Modelica.Icons.Function;

2: Name 'tableOnFile' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: table, File. Affected line: input Boolean tableOnFile "Table is on file";

3: Name 'sourceName' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: source, Name. Affected line: input String sourceName "Data source";

4: Name 't_offset' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: t_offset. Affected line: input Real t_offset "When time=t_offset, the time is assumed to be monday at midnight";

5: Name 'data' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: data. Affected line: input String data "Data, when tableOnFile=false";


AixLib/Electrical/DC/Loads/Conductor.mo
1: Name 'absDV' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: D. Affected line: protected Modelica.Units.SI.Voltage absDV "Absolute value of the voltage difference between the two conductors (used by the linearized model)";


AixLib/Electrical/AC/OnePhase/Conversion/Examples/ACACTransformer.mo
1: Name 'tra_load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_load. Affected line: AixLib.Electrical.AC.OnePhase.Conversion.ACACTransformer tra_load( Zperc=0.03, VABase=4000, XoverR=8, VHigh=120, VLow=60) "Transformer with load" annotation (Placement(transformation(extent={{-18,40},{2,60}})));

2: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Inductive load( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, pf=0.8, V_nominal=60) "Load model" annotation (Placement(transformation(extent={{10,40},{30,60}})));

3: Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( duration=0.5, startTime=0.3, offset=0, height=-4000*0.8) "Load power consumption profile" annotation (Placement(transformation(extent={{70,40},{50,60}})));

4: Name 'tra_cc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_cc. Affected line: AixLib.Electrical.AC.OnePhase.Conversion.ACACTransformer tra_cc( XoverR=8, Zperc=0.03, VABase=4000, VHigh=120, VLow=60) "Transformer with short circuit" annotation (Placement(transformation(extent={{-16,0},{4,20}})));

5: Name 'shortCircuit' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: short, Circuit. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance shortCircuit(R=1e-8) "Short circuit" annotation (Placement(transformation(extent={{10,0},{30,20}})));

6: Name 'tra_void' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_void. Affected line: AixLib.Electrical.AC.OnePhase.Conversion.ACACTransformer tra_void( XoverR=8, Zperc=0.03, VABase=4000, VHigh=120, VLow=60) "Transformer with secondary not connected" annotation (Placement(transformation(extent={{-16,-30},{4,-10}})));


AixLib/Electrical/AC/OnePhase/Loads/Examples/VariableImpedance.mo
1: Name 'Z_L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z_, L. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Z_L( R=0, inductive=true, L=1/(2*Modelica.Constants.pi*60), use_L_in=true, LMin=1/(2*Modelica.Constants.pi*60), LMax=2/(2*Modelica.Constants.pi*60)) "Impedance with variable L" annotation (Placement(transformation(extent={{-20,-60},{0,-40}})));

2: Name 'Z_C' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z_. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Z_C( R=0, inductive=false, C=1/(2*Modelica.Constants.pi*60), use_C_in=true, CMin=1/(2*Modelica.Constants.pi*60), CMax=2/(2*Modelica.Constants.pi*60)) "Impedance with variable C" annotation (Placement(transformation(extent={{-20,-10},{0,10}})));

3: Name 'Z_R' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z_. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Z_R( R=1, RMin=1, RMax=2, use_R_in=true, L=0) "Impedance with variable R" annotation (Placement(transformation(extent={{-20,40},{0,60}})));

4: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Ramp load(duration=0.5, startTime=0.2, height=1, offset=0) "Input signal for the loads" annotation (Placement(transformation(extent={{60,-10},{40,10}})));


AixLib/Examples/Tutorial/SimpleHouse/SimpleHouse0.mo
1: Name 'MediumAir' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package MediumAir = AixLib.Media.Air "Medium model for air";

2: Name 'MediumWater' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium, Water. Affected line: package MediumWater = AixLib.Media.Water "Medium model for water";

3: Name 'AWall' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Wall. Affected line: parameter Modelica.Units.SI.Area AWall = 100 "Wall area";

4: Name 'dWall' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Wall. Affected line: parameter Modelica.Units.SI.Length dWall = 0.25 "Wall thickness";

5: Name 'kWall' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: k, Wall. Affected line: parameter Modelica.Units.SI.ThermalConductivity kWall = 0.04 "Wall thermal conductivity";

6: Name 'rhoWall' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Wall. Affected line: parameter Modelica.Units.SI.Density rhoWall = 2000 "Wall density";

7: Name 'cpWall' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Wall. Affected line: parameter Modelica.Units.SI.SpecificHeatCapacity cpWall = 1000 "Wall specific heat capacity";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortRL_N.mo
1: Name 'Rn' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rn. Affected line: parameter Modelica.Units.SI.Resistance Rn "Resistance of neutral cable at temperature T_ref";

2: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref=298.15 "Reference temperature" annotation (Evaluate=true);

3: Name 'M' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M. Affected line: parameter Modelica.Units.SI.Temperature M=507.65 "Temperature constant (R_actual = R*(M + T_heatPort)/(M + T_ref))" annotation (Evaluate=true);

4: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance L "Inductance";

5: Name 'Ln' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Ln. Affected line: parameter Modelica.Units.SI.Inductance Ln "Inductance of neutral cable";

6: Name 'i1_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i1. Affected line: parameter Modelica.Units.SI.Current i1_start[2]={0,0} "Initial current phasor of phase 1 (positive if entering from terminal p)" annotation (Dialog(enable=(mode == AixLib.Electrical.Types.Load.FixedZ_dynamic)));

7: Name 'i2_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i2. Affected line: parameter Modelica.Units.SI.Current i2_start[2]={0,0} "Initial current phasor of phase 2 (positive if entering from terminal p)" annotation (Dialog(enable=(mode == AixLib.Electrical.Types.Load.FixedZ_dynamic)));

8: Name 'i3_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i3. Affected line: parameter Modelica.Units.SI.Current i3_start[2]={0,0} "Initial current phasor of phase 3 (positive if entering from terminal p)" annotation (Dialog(enable=(mode == AixLib.Electrical.Types.Load.FixedZ_dynamic)));

9: Name 'mode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mode. Affected line: parameter AixLib.Electrical.Types.Load mode( min=AixLib.Electrical.Types.Load.FixedZ_steady_state, max=AixLib.Electrical.Types.Load.FixedZ_dynamic) = AixLib.Electrical.Types.Load.FixedZ_steady_state "Type of model (e.g., steady state, dynamic, prescribed power consumption, etc.)" annotation (Evaluate=true, Dialog(group="Modeling assumption"));


AixLib/Electrical/BaseClasses/WindTurbine/PartialWindTurbine.mo
1: Name 'PhaseSystem' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Phase, System. Affected line: replaceable package PhaseSystem = AixLib.Electrical.PhaseSystems.PartialPhaseSystem constrainedby AixLib.Electrical.PhaseSystems.PartialPhaseSystem "Phase system" annotation (choicesAllMatching=true);


AixLib/Electrical/AC/ThreePhasesUnbalanced/Interfaces/Adapter3to3.mo
1: Name 'terminals' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: terminals. Affected line: AixLib.Electrical.Interfaces.Terminal terminals[3]( redeclare final package PhaseSystem = PhaseSystems.OnePhase) "Generalized terminal" annotation (Placement(transformation(extent={{-92,-6},{-108,10}}), iconTransformation(extent={{-106,8},{-90,-8}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/Inductive_N.mo
1: Name 'use_pf_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_pf. Affected line: parameter Boolean use_pf_in = false "If true, the power factor is defined by an input" annotation(Dialog(group="Modeling assumption"));

2: Name 'pf' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: parameter Real pf(min=0, max=1) = 0.8 "Power factor" annotation(Dialog(group="Nominal conditions"));

3: Name 'pf_in_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_1( min=0, max=1, unit="1") if (use_pf_in and plugPhase1) "Power factor of load on phase 1" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={80,-120}),iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={-60,-100})));

4: Name 'pf_in_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_2( min=0, max=1, unit="1") if (use_pf_in and plugPhase2) "Power factor of load on phase 2" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={40,-120}),iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={0,-100})));

5: Name 'pf_in_3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_3. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_3( min=0, max=1, unit="1") if (use_pf_in and plugPhase3) "Power factor of load on phase 3" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={-60,-120}), iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={62,-100})));


AixLib/Fluid/Chillers/ModularReversible/CarnotWithLosses.mo
1: Name 'etaCarnot_nominal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Carnot. Affected line: parameter Real etaCarnot_nominal=0.3 "Constant Carnot effectiveness";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/ACACTransformerDD.mo
1: Name 'VHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: parameter Modelica.Units.SI.Voltage VHigh "Rms voltage on side 1 of the transformer (primary side)";

2: Name 'VABase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.ApparentPower VABase "Nominal power of the transformer";

3: Name 'XoverR' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Xover. Affected line: parameter Real XoverR "Ratio between the complex and real components of the impedance (XL/R)";

4: Name 'Zperc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zperc. Affected line: parameter Real Zperc "Short circuit impedance";

5: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "Connect side 1 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 1"));

6: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "Connect side 2 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 2"));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/Examples/LoadCtrl.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.FixedVoltage_N sou(f=60, V=480) "Voltage source" annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));

2: Name 'pow_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pow_. Affected line: Modelica.Blocks.Sources.Sine pow_1( f=0.1, amplitude=4500, offset=6000) "Power on phase 1" annotation (Placement(transformation(extent={{60,10},{40,30}})));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Resistive_N load_ctrl( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, vThresh=0.05, tDelay=2, voltageCtrl=true, plugPhase2=false, plugPhase3=false, V_nominal=480) "Voltage controlled load" annotation (Placement(transformation(extent={{-8,-10},{12,10}})));

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Lines.Line_N line1( mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu10 commercialCable, l=400, P_nominal=10000, V_nominal=480) "Transmission line to voltage controlled load" annotation (Placement(transformation(extent={{-46,-10},{-26,10}})));

5: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Resistive_N load( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, plugPhase2=false, plugPhase3=false, V_nominal=480) "Load" annotation (Placement(transformation(extent={{-8,-40},{12,-20}})));

6: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Lines.Line_N line( mode=AixLib.Electrical.Types.CableMode.commercial, redeclare AixLib.Electrical.Transmission.LowVoltageCables.Cu10 commercialCable, l=400, P_nominal=10000, V_nominal=480) annotation (Placement(transformation(extent={{-46,-40},{-26,-20}})));


AixLib/ThermalZones/ReducedOrder/EquivalentAirTemperature/BaseClasses/SourceSelector.mo
1: Name 'useInput' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Input. Affected line: parameter Boolean useInput "Use input (if true) or parameter value (if false)" annotation(Evaluate=true);


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/BaseClasses/LoadCtrl_N.mo
1: Name 'connection3to4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: connection3to4. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.Connection3to4_n connection3to4 "Connection from three-phase and neutral to three-phase" annotation (Placement(transformation(extent={{-84,-10},{-64,10}})));


AixLib/Electrical/AC/OnePhase/Conversion/ACDCConverter.mo
1: Name 'conversionFactor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: conversion, Factor. Affected line: parameter Real conversionFactor(min = Modelica.Constants.eps) "Ratio of DC voltage / AC RMS voltage";

2: Name 'PLoss' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Loss. Affected line: Modelica.Units.SI.Power PLoss "Loss power";

3: Name 'ground_AC' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_AC = false "Connect AC side of converter to ground" annotation(Evaluate=true, Dialog(tab = "Ground", group="AC side"));

4: Name 'ground_DC' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_, D. Affected line: parameter Boolean ground_DC = true "Connect DC side of converter to ground" annotation(Evaluate=true, Dialog(tab = "Ground", group="DC side"));

5: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: protected PhaseSystem_p.Current i_dc "DC current";PhaseSystem_p.Voltage v_dc "DC voltage";


AixLib/Fluid/Geothermal/Aquifer/Validation/NumberWells.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package Medium = AixLib.Media.Water "Medium model";

2: Name 'MyWell' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: My, Well. Affected line: model MyWell = MultiWell ( redeclare package Medium = AixLib.Media.Water, nVol=50, h=10, d=4800, length=200, THot_start=303.15, TGroCol=273.15, TGroHot=303.15, aquDat=AixLib.Fluid.Geothermal.Aquifer.Data.Rock(), m_flow_nominal=0.1, dpExt_nominal=0) "Well model";

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: MyWell aquWel1(d=4800) "ATES with one pair of wells" annotation (Placement(transformation(extent={{-20,20},{0,40}})));MyWell aquWel2( d=4800, nPai=2, m_flow_nominal=0.2) "ATES with two pairs of wells" annotation (Placement(transformation(extent={{-20,-60},{0,-40}})));

4: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.Boundary_pT bou( redeclare package Medium = Medium, nPorts=2) "Sink" annotation (Placement(transformation(extent={{60,-10},{40,10}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sensors/GeneralizedSensor_N.mo
1: Name 'S' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: S. Affected line: Modelica.Blocks.Interfaces.RealOutput S[4, AixLib.Electrical.PhaseSystems.OnePhase.n]( each final quantity="Power", each final unit="W") "Phase powers" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={-50,-40}),iconTransformation( extent={{-10,-10},{10,10}}, rotation=270, origin={-60,-90})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/Examples/ACLine_RLC_N.mo
1: Name 'RBase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.Resistance RBase=3*10 "Base value for the line resistance";

2: Name 'LBase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L, Base. Affected line: parameter Modelica.Units.SI.Inductance LBase=RBase/(2*Modelica.Constants.pi* 60) "Base value for the line inductances";

3: Name 'CBase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.Capacitance CBase=3*0.1/(2*Modelica.Constants.pi* 60) "Base value for the line inductances";


AixLib/Electrical/AC/OnePhase/Lines/Examples/ACLine_RL.mo
1: Name 'Rbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rbase. Affected line: parameter Modelica.Units.SI.Resistance Rbase=10 "Base value for the line resistance";

2: Name 'Lbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Lbase. Affected line: parameter Modelica.Units.SI.Inductance Lbase=Rbase/2/Modelica.Constants.pi/60 "Base value for the line inductance";


AixLib/Fluid/Geothermal/Borefields/BaseClasses/HeatTransfer/ThermalResponseFactors/Validation/FiniteLineSource_Integrand_Equivalent.mo
1: Name 'aSoi' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: a. Affected line: parameter Modelica.Units.SI.ThermalDiffusivity aSoi=1.0e-6 "Ground thermal diffusivity";

2: Name 'Integer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Integer. Affected line: parameter Integer[2] wDis={4, 2} "Number of occurences of each distance";

3: Name 'n_dis' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_dis. Affected line: parameter Integer n_dis=2 "Number of unique distances";


AixLib/Electrical/Transmission/Functions/R_AC_correction.mo
1: Name 'material' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: material. Affected line: input AixLib.Electrical.Transmission.Types.Material material "Material of the cable";

2: Name 'correction' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: correction. Affected line: output Real correction "Correction factor";


AixLib/Electrical/AC/ThreePhasesBalanced/Conversion/Examples/ACACTransformer.mo
1: Name 'tra_load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_load. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Conversion.ACACTransformer tra_load( Zperc=0.03, VABase=4000, XoverR=8, VHigh=480, VLow=120) "Transformer with load" annotation (Placement(transformation(extent={{-18,40},{2,60}})));

2: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Loads.Inductive load( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, pf=0.8, V_nominal=120) "Load model" annotation (Placement(transformation(extent={{10,40},{30,60}})));

3: Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( duration=0.5, startTime=0.3, offset=0, height=-4000*0.8) "Load power consumption profile" annotation (Placement(transformation(extent={{70,40},{50,60}})));

4: Name 'tra_cc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_cc. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Conversion.ACACTransformer tra_cc( XoverR=8, Zperc=0.03, VABase=4000, VHigh=480, VLow=120) "Transformer with short circuit" annotation (Placement(transformation(extent={{-16,0},{4,20}})));

5: Name 'shortCircuit' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: short, Circuit. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Loads.Impedance shortCircuit(R=1e-8) "Short circuit" annotation (Placement(transformation(extent={{10,0},{30,20}})));

6: Name 'tra_void' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_void. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Conversion.ACACTransformer tra_void( XoverR=8, Zperc=0.03, VABase=4000, VHigh=480, VLow=120) "Transformer with secondary not connected" annotation (Placement(transformation(extent={{-16,-30},{4,-10}})));


AixLib/ThermalZones/ISO13790/Validation/BESTEST/Case600FF.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Zone5R1C.Zone zon5R1C( airRat=0.5, AWin={0,0,12,0}, UWin=2.984, AWal={21.6,16.2,9.6,16.2}, ARoo=48, UWal=0.56, URoo=0.33, UFlo=1, b=0, AFlo=48, VRoo=129.6, hInt=2.74, redeclare replaceable AixLib.ThermalZones.ISO13790.Validation.BESTEST.Data.Case600Mass buiMas, nOrientations=4, surTil={1.5707963267949,1.5707963267949,1.5707963267949,1.5707963267949}, surAzi={3.1415926535898,-1.5707963267949,0,1.5707963267949}, gFac=0.789) "Thermal zone" annotation (Placement(transformation(extent={{-14,-14},{14,14}})));

2: Name 'daiComBESTESTFF' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B, S, S, F, F. Affected line: Modelica.Blocks.Sources.CombiTimeTable daiComBESTESTFF(table=[0,0,0,0,0,0,0,0;259200,0,0,0,0,0,0,0; 262800,-8.88,-12.04,-12.3,-12.21,-12.1,-12.02,-13.04;266400,-10.48,-13.52,-14.1,-13.8,-13.7,-13.5,-14.59; 270000,-11.76,-14.4, -15.4,-14.9,-14.7,-14.7,-15.65; 273600,-12.75,-15.26,-16.3,-15.79,-15.6, -15.65,-16.46; 277200,-13.69,-16,-17.1,-16.55,-16.4,-16.47,-17.16;280800,-14.49,-16.4,-17.9,-17.2,-17,-17.14,-17.79; 284400,-15.15,-17.01, -18.5,-17.74,-17.6,-17.7,-18.32; 288000,-15.63,-17.05,-18.8,-17.85,-17.8, -17.59,-18.47; 291600,-14.63,-13.74,-14.7,-14.88,-14.6,-13.46,-15.47;295200,-10.03,-7.99,-7.8,-9.07,-8.9,-7.1,-9.56; 298800,-2.2,2.6,3.2, 1.01,1,3.66,0.49; 302400,8.84,12.22,13.4,11.21,10.7,13.49,10.39; 306000, 18.96,20.86,22.3,20.03,19.2,21.77,18.75; 309600,27.19,27.53,29.5,27.27, 26.1,28.26,25.48; 313200,33.22,31.33,33.8,31.34,29.8,32.09,29.21;316800,35.51,31.06,33.5,31.47,29.7,32.16,28.97; 320400,31.46,24.28,27, 25.96,23.9,25.71,22.58; 324000,23.99,17.46,19.7,18.96,17.6,18.84,15.59;327600,18.08,12.05,13.7,13.04,12.2,13.1,10.2; 331200,13.02,7.57,8.7, 8.31,7.8,8.41,6.02; 334800,8.87,3.6,4.4,4.27,4,4.39,2.39; 338400,5.12, 0.52,1,0.99,0.9,0.97,-0.59; 342000,2.03,-1.94,-1.9,-1.66,-1.7,-1.78,-3.04;345600,-1.03,-4.07,-4.4,-3.92,-3.9,-4.03,-5.14; 345600,0,0,0,0,0,0,0;3153600,0,0,0,0,0,0,0]) "Daily comparison BESTEST FF" annotation (Placement(transformation(extent={{60,-80},{80,-60}})));

3: Name 'annComBESTESTFF' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B, S, S, F, F. Affected line: AixLib.ThermalZones.ISO13790.Validation.BESTEST.Data.Case600FFResults annComBESTESTFF "Annual comparison BESTEST FF" annotation (Placement(transformation(extent={{20,-80},{40,-60}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/Examples/ACSimpleGrid.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Network network( redeclare AixLib.Electrical.Transmission.Grids.TestGrid2Nodes grid, V_nominal=480) "Network model that represents the connection between the source and the load" annotation (Placement(transformation(extent={{20,-10},{0,10}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Loads.Inductive load( V_nominal=480, mode=AixLib.Electrical.Types.Load.VariableZ_P_input, plugPhase3=false) "Load connected to the network" annotation (Placement(transformation(extent={{-34,10},{-54,30}})));Sources.FixedVoltage E(f=60, V=480, definiteReference=true) "Voltage source" annotation ( Placement(transformation( extent={{10,-10},{-10,10}}, rotation=180, origin={-50,-20})));

3: Name 'load_inputs' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load_inputs. Affected line: Modelica.Blocks.Sources.Ramp load_inputs( height=5000, offset=-2000, duration=0.5, startTime=0.25) "Input signal for the power consumption of the loads" annotation (Placement(transformation(extent={{-90,10},{-70,30}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/UnbalancedStepDown/YY.mo
1: Missing documentation, Name 'load1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load1(k=-1275e3) annotation (Placement(transformation(extent={{54,30},{74,50}})));

2: Missing documentation, Name 'load2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load2(k=-1800e3) annotation (Placement(transformation(extent={{28,58},{48,78}})));

3: Missing documentation, Name 'load3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load3. Affected line: Modelica.Blocks.Sources.Constant load3(k=-2375e3) annotation (Placement(transformation(extent={{2,74},{22,94}})));

4: Missing documentation, Name 'pf1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf1(k=0.85) annotation (Placement(transformation(extent={{-16,-38},{4,-18}})));

5: Missing documentation, Name 'pf2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf2(k=0.9) annotation (Placement(transformation(extent={{2,-64},{22,-44}})));

6: Missing documentation. Affected line: Modelica.Blocks.Sources.Constant pf3(k=0.95) annotation (Placement(transformation(extent={{24,-88},{44,-68}})));

7: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformer transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-28,0},{-8,20}})));


AixLib/Fluid/SolarCollectors/BaseClasses/PartialSolarCollector.mo
1: Name 'nColType' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Type. Affected line: parameter AixLib.Fluid.SolarCollectors.Types.NumberSelection nColType= AixLib.Fluid.SolarCollectors.Types.NumberSelection.Number "Selection of area specification format" annotation(Dialog(group="Area declarations"));

2: Name 'nPanels' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Panels. Affected line: parameter Integer nPanels= 0 "Desired number of panels in the simulation" annotation(Dialog(group="Area declarations", enable= (nColType == AixLib.Fluid.SolarCollectors.Types.NumberSelection.Number)));

3: Name 'totalArea' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: total, Area. Affected line: parameter Modelica.Units.SI.Area totalArea=0 "Total area of panels in the simulation" annotation (Dialog(group= "Area declarations", enable=(nColType == AixLib.Fluid.SolarCollectors.Types.NumberSelection.Area)));

4: Name 'sysConfig' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Config. Affected line: parameter AixLib.Fluid.SolarCollectors.Types.SystemConfiguration sysConfig= AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Series "Selection of system configuration" annotation(Dialog(group="Configuration declarations"));

5: Name 'nPanelsSer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Panels. Affected line: parameter Integer nPanelsSer=0 "Number of array panels in series" annotation(Dialog(group="Configuration declarations", enable= (sysConfig == AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Array)));

6: Name 'nPanelsPar' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Panels. Affected line: parameter Integer nPanelsPar=0 "Number of array panels in parallel" annotation(Dialog(group="Configuration declarations", enable= (sysConfig == AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Array)));

7: Name 'm_flow_nominal_final' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: m_flow_nominal_final. Affected line: final parameter Modelica.Units.SI.MassFlowRate m_flow_nominal_final( displayUnit="kg/s") = nPanelsPar_internal*per.mperA_flow_nominal*per.A "Nominal mass flow rate through the system of collectors";

8: Name 'dp_nominal_final' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: dp_nominal_final. Affected line: final parameter Modelica.Units.SI.PressureDifference dp_nominal_final( displayUnit="Pa") = nPanelsSer_internal*per.dp_nominal "Nominal pressure loss across the system of collectors";

9: Name 'nPanels_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Panels. Affected line: parameter Real nPanels_internal= if nColType == AixLib.Fluid.SolarCollectors.Types.NumberSelection.Number then nPanels else totalArea/per.A "Number of panels used in the simulation";

10: Name 'nPanelsSer_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Panels. Affected line: parameter Real nPanelsSer_internal= if sysConfig == AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Series then nPanels else if sysConfig == AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Parallel then 1 else nPanelsSer "Number of panels in series";

11: Name 'nPanelsPar_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Panels. Affected line: parameter Real nPanelsPar_internal= if sysConfig == AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Parallel then nPanels else if sysConfig == AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Series then 1 else nPanelsPar "Number of panels in parallel";

12: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: parameter Medium.ThermodynamicState sta_default = Medium.setState_pTX( T=Medium.T_default, p=Medium.p_default, X=Medium.X_default[1:Medium.nXi]) "Medium state at default properties";

13: Name 'cp_default' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: cp_default. Affected line: parameter Modelica.Units.SI.SpecificHeatCapacity cp_default= Medium.specificHeatCapacityCp(sta_default) "Specific heat capacity of the fluid";

14: Name 'rho_default' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: rho_default. Affected line: parameter Modelica.Units.SI.Density rho_default=Medium.density(sta_default) "Density, used to compute fluid mass";


AixLib/Electrical/PhaseSystems/ThreePhase_dq0.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function jj "Vectorized version of j" extends Modelica.Icons.Function;

2: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: input Real[:,:] xx "array of voltage or current vectors";output Real[size(xx,1),size(xx,2)] yy "array of rotated vectors";algorithm yy := cat(1, {-xx[2,:], xx[1,:]}, zeros(size(xx,1)-2, size(xx,2)));annotation(Inline=true);end jj;redeclare function extends thetaRel "Return absolute angle of rotating system as offset to thetaRef" algorithm thetaRel := theta[1];annotation(Inline=true);end thetaRel;redeclare function extends thetaRef "Return absolute angle of rotating reference system" algorithm thetaRef := theta[2];annotation(Inline=true);end thetaRef;redeclare function extends phase "Return phase" algorithm phase := atan2(x[2], x[1]);annotation(Inline=true);end phase;redeclare function extends phaseVoltages "Return phase to neutral voltages" protected Voltage neutral_v = 0;algorithm v := {V*cos(phi), V*sin(phi), sqrt(3)*neutral_v}/sqrt(3);annotation(Inline=true);end phaseVoltages;redeclare function extends phaseCurrents "Return phase currents" algorithm i := {I*cos(phi), I*sin(phi), 0};annotation(Inline=true);end phaseCurrents;redeclare function extends phasePowers "Return phase powers" algorithm p := {P, P*tan(phi), 0};annotation(Inline=true);end phasePowers;redeclare function extends phasePowers_vi "Return phase powers" algorithm p := {v[1:2]*i[1:2], -j(v[1:2])*i[1:2], v[3]*i[3]};annotation(Inline=true);end phasePowers_vi;

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends systemVoltage "Return system voltage as function of phase voltages" algorithm V := Modelica.Fluid.Utilities.regRoot(v*v, delta = 1e-5);

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends systemCurrent "Return system current as function of phase currents" algorithm I := Modelica.Fluid.Utilities.regRoot(i*i, delta = 1e-5);


AixLib/Fluid/SolarCollectors/BaseClasses/PartialHeatLoss.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = Modelica.Media.Interfaces.PartialMedium "Medium in the component";


AixLib/Fluid/SolarCollectors/Validation/EN12975_Series.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = AixLib.Media.Water "Medium in the system";

2: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: model Collector extends AixLib.Fluid.SolarCollectors.EN12975( redeclare final package Medium = AixLib.Media.Water, final show_T = true, final per=AixLib.Fluid.SolarCollectors.Data.GlazedFlatPlate.FP_VerificationModel(), final shaCoe=0, final azi=0, final energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial, final rho=0.2, final nColType=AixLib.Fluid.SolarCollectors.Types.NumberSelection.Number, nPanels=1, final til=0.78539816339745, final use_shaCoe_in=false, final sysConfig=AixLib.Fluid.SolarCollectors.Types.SystemConfiguration.Series);

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sensors.TemperatureTwoPort senTem( redeclare package Medium = Medium, tau=0, m_flow_nominal=m_flow_nominal) "Temperature sensor" annotation (Placement(transformation(extent={{20,40},{40,20}})));Sensors.TemperatureTwoPort senTem1( redeclare package Medium = Medium, tau=0, m_flow_nominal=m_flow_nominal) "Temperature sensor" annotation (Placement(transformation(extent={{20,-20},{40,-40}})));


AixLib/Electrical/Transmission/Functions/computeGMR.mo
1: Name 'N' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: N. Affected line: input Integer N = 1 "Number of conductors";

2: Name 'GMR' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G, M. Affected line: output Modelica.Units.SI.Length GMR "Geometric Mean Radius";


AixLib/Electrical/DC/Lines/Examples/DCLine.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Line line( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=100) "Transmission line" annotation (Placement(transformation(extent={{0,0},{20,20}})));Sources.ConstantVoltage E(V=50) "Voltage source" annotation (Placement(transformation(extent={{-80,0},{-60,20}})));Line line1( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=100) "Transmission line" annotation (Placement(transformation(extent={{0,-20},{20,0}})));Line line2( P_nominal=500, V_nominal=50, mode=Types.CableMode.commercial, commercialCable=Transmission.LowVoltageCables.PvcAl16(), l=100) "Transmission line" annotation (Placement(transformation(extent={{0,-40},{20,-20}})));

2: Missing documentation, Name 'ground' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground. Affected line: Modelica.Electrical.Analog.Basic.Ground ground annotation (Placement(transformation(extent={{-90,-20},{-70,0}})));

3: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Loads.Conductor load1(mode=Types.Load.VariableZ_y_input, V_nominal=50, linearized=false, P_nominal=-50) "Variable load" annotation (Placement(transformation(extent={{40,0},{60,20}})));Loads.Conductor load2( V_nominal=50, linearized=false, P_nominal=-150) "Load" annotation (Placement(transformation(extent={{40,-20},{60,0}})));Loads.Conductor load3( V_nominal=50, linearized=false, P_nominal=-200) "Load" annotation (Placement(transformation(extent={{40,-40},{60,-20}})));

4: Name 'varLoad' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Load. Affected line: Modelica.Blocks.Sources.Ramp varLoad( height=0.8, duration=0.5, offset=0.2, startTime=0.3) "Load consumption profile" annotation (Placement(transformation(extent={{96,0},{76,20}})));


AixLib/Electrical/AC/OnePhase/Loads/Examples/DynamicLoads.mo
1: Name 'source' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: source. Affected line: AixLib.Electrical.AC.OnePhase.Sources.FixedVoltage source( f=60, V=120) "Voltage source" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, origin={-70,10})));

2: Name 'line' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: line. Affected line: AixLib.Electrical.AC.OnePhase.Lines.TwoPortResistance line(R=0.1) "Line resistance" annotation (Placement(transformation(extent={{-40,0},{-20,20}})));

3: Name 'dynRL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Inductive dynRL( pf=0.8, mode=AixLib.Electrical.Types.Load.FixedZ_dynamic, P_nominal=-1200, V_nominal=120) "Dynamic RL load" annotation (Placement(transformation(extent={{0,10},{20,30}})));


AixLib/Fluid/SolarCollectors/BaseClasses/Examples/ASHRAESolarGain.mo
1: Missing documentation, Name 'T3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T3. Affected line: Modelica.Blocks.Sources.Sine T3( f=2/86400, amplitude=50, offset=273.15 + 110) annotation (Placement(transformation(extent={{-50,-50},{-30,-30}})));

2: Missing documentation. Affected line: Modelica.Blocks.Sources.Sine T2( f=2/86400, amplitude=50, offset=273.15 + 100) annotation (Placement(transformation(extent={{-10,-70},{10,-50}})));

3: Missing documentation. Affected line: Modelica.Blocks.Sources.Sine T1( f=2/86400, amplitude=50, offset=273.15 + 90) annotation (Placement(transformation(extent={{30,-90},{50,-70}})));


AixLib/Fluid/Movers/BaseClasses/Euler/efficiency.mo
1: Name 'peak' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: peak. Affected line: input AixLib.Fluid.Movers.BaseClasses.Euler.peak peak "Operation point with maximum efficiency";

2: Name 'V_flow_dp_small' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: V_flow_dp. Affected line: input Real V_flow_dp_small( final unit="m3.Pa/s", min = Modelica.Constants.eps) "Small number for regularisation";

3: Name 'log_r_Eu' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: log_r_, Eu. Affected line: protected Real log_r_Eu "Log10 of Eu/Eu_peak";

4: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: algorithm log_r_Eu:= log10( AixLib.Utilities.Math.Functions.smoothMax( x1=dp * peak.V_flow^2, x2=V_flow_dp_small, deltaX=V_flow_dp_small/2) /AixLib.Utilities.Math.Functions.smoothMax( x1=peak.dp * V_flow^2, x2=V_flow_dp_small, deltaX=V_flow_dp_small/2));


AixLib/Fluid/HeatPumps/ModularReversible/BaseClasses/EvaporatorCondenserWithCapacity.mo
1: Name 'GOut' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G. Affected line: Modelica.Units.SI.ThermalConductance GOut "Exterior heat transfer coefficient, set to zero to ignore external heat loss but keep the dry mass" annotation (Dialog(group="Heat losses", enable=use_cap));

2: Name 'GInn' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G. Affected line: Modelica.Blocks.Interfaces.RealOutput GInn "Interior heat transfer coefficient" annotation (Dialog(group="Heat losses", enable=use_cap));


AixLib/Utilities/IO/Files/Validation/WeeklyScheduleWindowsLineEndings.mo
1: Name 'data' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: data. Affected line: parameter String data = "double tab1(3,5) #test: mon:0:0:10 - 3 1 - tue,thu:20:30:59 123 - 45 - wed 12 1 4 -" "Contents of schedule.txt";


AixLib/Fluid/Movers/BaseClasses/Euler/correlation.mo
1: Name 'x' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: x. Affected line: input Real x "log10(Eu/Eu_peak)";

2: Name 'a' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: a. Affected line: protected Real a "Polynomial coefficient";

3: Name 'b' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: b. Affected line: Real b "Polynomial coefficient";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/BaseClasses/BaseImpedance.mo
1: Name 'load1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: replaceable AixLib.Electrical.AC.OnePhase.Loads.Impedance load1( inductive=inductive, R=R, L=L, C=C, use_R_in=use_R_in, RMin=RMin, RMax=RMax, use_C_in=use_C_in, CMin=CMin, CMax=CMax, use_L_in=use_L_in, LMin=LMin, LMax=LMax) if plugPhase1 "Load 1" annotation (Placement(transformation(extent={{-10,30},{10,50}})));

2: Name 'load2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: replaceable AixLib.Electrical.AC.OnePhase.Loads.Impedance load2( inductive=inductive, R=R, L=L, C=C, use_R_in=use_R_in, RMin=RMin, RMax=RMax, use_C_in=use_C_in, CMin=CMin, CMax=CMax, use_L_in=use_L_in, LMin=LMin, LMax=LMax) if plugPhase2 "Load 2" annotation (Placement(transformation(extent={{-10,-10},{10,10}})));

3: Name 'load3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load3. Affected line: replaceable AixLib.Electrical.AC.OnePhase.Loads.Impedance load3( inductive=inductive, R=R, L=L, C=C, use_R_in=use_R_in, RMin=RMin, RMax=RMax, use_C_in=use_C_in, CMin=CMin, CMax=CMax, use_L_in=use_L_in, LMin=LMin, LMax=LMax) if plugPhase3 "Load 3" annotation (Placement(transformation(extent={{-10,-50},{10,-30}})));

4: Name 'loadConn' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load, Conn. Affected line: parameter AixLib.Electrical.Types.LoadConnection loadConn= AixLib.Electrical.Types.LoadConnection.wye_to_wyeg "Type of load connection (Yg or D)";

5: Name 'inductive' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: inductive. Affected line: parameter Boolean inductive=true "If =true the load is inductive, otherwise it is capacitive" annotation (Evaluate=true, choices( choice=true "Inductive", choice=false "Capacitive", __Dymola_radioButtons=true));

6: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance L( start=0, min=0) = 0 "Inductance" annotation (Dialog(enable=inductive and (not use_L_in)));

7: Name 'use_L_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Boolean use_L_in = false "if true, L is specified by an input" annotation(Evaluate=true, Dialog(tab = "Variable load", group="Inductance"));

8: Name 'LMin' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance LMin( start=L, min=Modelica.Constants.eps) = 1e-4 "Minimum value of the inductance" annotation (Evaluate=true, Dialog( enable=use_L_in, tab="Variable load", group="Inductance"));

9: Name 'LMax' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance LMax( start=L, min=Modelica.Constants.eps) = 1e2 "Maximum value of the inductance" annotation (Evaluate=true, Dialog( enable=use_L_in, tab="Variable load", group="Inductance"));

10: Name 'y_R' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_. Affected line: Modelica.Blocks.Interfaces.RealInput y_R(min=0, max=1) if use_R_in "Input that sepecifies variable R" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=270, origin={-40,100})));

11: Name 'y_C' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_. Affected line: Modelica.Blocks.Interfaces.RealInput y_C(min=0, max=1) if use_C_in "Input that sepecifies variable C" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=270, origin={0,100})));

12: Name 'y_L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_, L. Affected line: Modelica.Blocks.Interfaces.RealInput y_L(min=0, max=1) if use_L_in "Input that sepecifies variable L" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=270, origin={40,100})));

13: Name 'wyeToDelta' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Delta. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToDelta wyeToDelta if (loadConn == AixLib.Electrical.Types.LoadConnection.wye_to_delta) "Wye to delta load connection" annotation (Placement(transformation(extent={{-64,0},{-44,20}})));

14: Name 'wyeToWyeGround' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Ground. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToWyeGround wyeToWyeGround if (loadConn == AixLib.Electrical.Types.LoadConnection.wye_to_wyeg) "Wye to grounded wye connection" annotation (Placement(transformation(extent={{-64,-20},{-44,0}})));

15: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: protected Interfaces.Adapter3to3 adaDel if (loadConn == AixLib.Electrical.Types.LoadConnection.wye_to_delta) "Adapter" annotation (Placement(transformation(extent={{-40,-50},{-60,-30}})));

16: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Interfaces.Adapter3to3 adaWye if (loadConn == AixLib.Electrical.Types.LoadConnection.wye_to_wyeg) "Adapter" annotation (Placement(transformation(extent={{-40,-80},{-60,-60}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/Inductive.mo
1: Name 'use_pf_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_pf. Affected line: parameter Boolean use_pf_in = false "If true, the power factor is defined by an input" annotation(Dialog(group="Modeling assumption"));

2: Name 'pf' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: parameter Real pf(min=0, max=1) = 0.8 "Power factor" annotation(Dialog(group="Nominal conditions"));

3: Name 'pf_in_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_1( min=0, max=1, unit="1") if (use_pf_in and plugPhase1) "Power factor of load on phase 1" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={-60,-120}), iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={-60,-100})));

4: Name 'pf_in_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_2( min=0, max=1, unit="1") if (use_pf_in and plugPhase2) "Power factor of load on phase 2" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={50,-120}),iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={0,-100})));

5: Name 'pf_in_3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_3. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_3( min=0, max=1, unit="1") if (use_pf_in and plugPhase3) "Power factor of load on phase 3" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={20,-120}),iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={62,-100})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/UnbalancedStepDown/DD.mo
1: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerDD transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));

2: Missing documentation, Name 'load3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load3. Affected line: Modelica.Blocks.Sources.Constant load3(k=-2375e3) annotation (Placement(transformation(extent={{8,76},{28,96}})));

3: Missing documentation, Name 'load2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load2(k=-1800e3) annotation (Placement(transformation(extent={{34,58},{54,78}})));

4: Missing documentation, Name 'load1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load1(k=-1275e3) annotation (Placement(transformation(extent={{54,30},{74,50}})));

5: Missing documentation, Name 'pf1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf1(k=0.85) annotation (Placement(transformation(extent={{-6,-30},{14,-10}})));

6: Missing documentation, Name 'pf2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf2(k=0.9) annotation (Placement(transformation(extent={{16,-50},{36,-30}})));

7: Missing documentation. Affected line: Modelica.Blocks.Sources.Constant pf3(k=0.95) annotation (Placement(transformation(extent={{38,-70},{58,-50}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Lines/Examples/ACSimpleGrid.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Lines.Network network( redeclare AixLib.Electrical.Transmission.Grids.TestGrid2Nodes grid, V_nominal=480) "Network model that represents the connection between the source and the load" annotation (Placement(transformation(extent={{20,-10},{0,10}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Loads.Inductive load( P_nominal=2500, mode=Types.Load.VariableZ_P_input, V_nominal=480) "Load connected to the network" annotation (Placement(transformation(extent={{-28,10},{-48,30}})));ThreePhasesBalanced.Sources.FixedVoltage E(f=60, V=480) "Voltage source" annotation (Placement( transformation( extent={{10,10},{-10,-10}}, rotation=180, origin={-70,0})));

3: Name 'load_inputs' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load_inputs. Affected line: Modelica.Blocks.Sources.Ramp load_inputs( height=5000, duration=2, offset=-2000, startTime=0.5) "Input signal for the power consumption of the loads" annotation (Placement(transformation(extent={{-80,20},{-60,40}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Conversion/Examples/ACDCConverter.mo
1: Name 'conversion' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: conversion. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Conversion.ACDCConverter conversion( eta=0.9, ground_AC=false, ground_DC=true, conversionFactor=120/480) "AC/DC transformer" annotation (Placement(transformation(extent={{-10,0},{10,20}})));

2: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: AixLib.Electrical.DC.Loads.Conductor load( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, V_nominal=120) "Variable resistive load" annotation (Placement( transformation( extent={{10,-10},{-10,10}}, rotation=180, origin={50,-10})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/UnbalancedStepUp/DY.mo
1: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerStepUpDY transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase, conv1(V1(start={10E3, 5.5E3}))) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));

2: Missing documentation, Name 'load3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load3. Affected line: Modelica.Blocks.Sources.Constant load3(k=-2375e3) annotation (Placement(transformation(extent={{14,76},{34,96}})));

3: Missing documentation, Name 'load2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load2(k=-1800e3) annotation (Placement(transformation(extent={{40,58},{60,78}})));

4: Missing documentation, Name 'pf1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf1(k=0.85) annotation (Placement(transformation(extent={{0,-30},{20,-10}})));

5: Missing documentation, Name 'pf2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf2(k=0.9) annotation (Placement(transformation(extent={{22,-50},{42,-30}})));

6: Missing documentation. Affected line: Modelica.Blocks.Sources.Constant pf3(k=0.95) annotation (Placement(transformation(extent={{44,-70},{64,-50}})));

7: Missing documentation, Name 'load1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load1(k=-1275e3) annotation (Placement(transformation(extent={{60,30},{80,50}})));


AixLib/Fluid/SolarCollectors/Data/BaseClasses/Generic.mo
1: Documentation too short. Affected line: parameter Modelica.Units.SI.Area A "Area";

2: Name 'mperA_flow_nominal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mper. Affected line: parameter Real mperA_flow_nominal(final unit="kg/(s.m2)") "Nominal mass flow rate per unit area of collector";

3: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: parameter Real[size(incAngDat,1)] incAngModDat( each final min=0, each final unit="1") "Incident angle modifier data";

4: Name 'validated' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: validated. Affected line: final parameter Boolean validated = validateAngles( incAngDat=incAngDat, incAngModDat=incAngModDat) "True if data are valid, otherwise an assertion is issued";


AixLib/Fluid/Geothermal/Aquifer/Data/Template.mo
1: Name 'kSoi' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: k. Affected line: parameter Modelica.Units.SI.ThermalConductivity kSoi "Thermal conductivity of the soil material";

2: Name 'K' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: K. Affected line: parameter Modelica.Units.SI.Velocity K "Hydraulic conductivity";


AixLib/Electrical/AC/OnePhase/Lines/TwoPortRL.mo
1: Name 'i_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: parameter Modelica.Units.SI.Current i_start[PhaseSystem_p.n]=zeros( PhaseSystem_p.n) "Initial current phasor of the line (positive if entering from terminal p)" annotation (Dialog(enable=(mode == AixLib.Electrical.Types.Load.FixedZ_dynamic)));

2: Name 'mode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mode. Affected line: parameter AixLib.Electrical.Types.Load mode( min=AixLib.Electrical.Types.Load.FixedZ_steady_state, max=AixLib.Electrical.Types.Load.FixedZ_dynamic)= AixLib.Electrical.Types.Load.FixedZ_steady_state "Type of model (e.g., steady state, dynamic, prescribed power consumption, etc.)" annotation (Evaluate=true, Dialog(group="Modeling assumption"));

3: Name 'i_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: protected Modelica.Units.SI.Current i_p[2](start=i_start, each stateSelect=StateSelect.prefer) "Current phasor at terminal p";

4: Name 'omega' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: omega. Affected line: Modelica.Units.SI.AngularVelocity omega "Frequency of the quasi-stationary sine waves";


AixLib/Electrical/AC/ThreePhasesBalanced/Lines/Examples/ACLineMedium.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Sources.FixedVoltage E(definiteReference=true, V=15000, f=60) "Voltage source" annotation (Placement(transformation(extent={{-100,-10},{-80,10}})));ThreePhasesBalanced.Loads.Impedance R1(R=10) "Resistive load 1" annotation (Placement(transformation(extent={{0,-10},{20,10}})));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Lines.Line line_1( P_nominal=5000, l=2000, redeclare AixLib.Electrical.Transmission.MediumVoltageCables.Generic commercialCable = AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_10(), V_nominal=15000) "Resistive line that connects to load 1" annotation (Placement(transformation(extent={{-58,-10},{-38,10}})));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Lines.Line line_2a( P_nominal=5000, l=1000, redeclare AixLib.Electrical.Transmission.MediumVoltageCables.Generic commercialCable = AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_10(), V_nominal=15000) "Resistive line that connects to load 2" annotation (Placement(transformation(extent={{-60,-30},{-40,-10}})));

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Loads.Impedance R2(R=10) "Resistive load 2" annotation (Placement(transformation(extent={{0,-30},{20,-10}})));

5: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Lines.Line line_2b( P_nominal=5000, l=1000, redeclare AixLib.Electrical.Transmission.MediumVoltageCables.Generic commercialCable = AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_10(), V_nominal=15000) "Resistive line that connects to load 2" annotation (Placement(transformation(extent={{-32,-30},{-12,-10}})));

6: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Lines.Line line_3a( P_nominal=5000, l=4000, redeclare AixLib.Electrical.Transmission.MediumVoltageCables.Generic commercialCable = AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_10(), V_nominal=15000) "Resistive line that connects to load 3" annotation (Placement(transformation(extent={{-60,-50},{-40,-30}})));

7: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Lines.Line line_3b( P_nominal=5000, l=4000, redeclare AixLib.Electrical.Transmission.MediumVoltageCables.Generic commercialCable = AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_10(), V_nominal=15000) "Resistive line that connects to load 3" annotation (Placement(transformation(extent={{-60,-70},{-40,-50}})));

8: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Loads.Impedance R3(R=10) "Resistive load 3" annotation (Placement(transformation(extent={{0,-60},{20,-40}})));

9: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: ThreePhasesBalanced.Lines.Line line_sc( P_nominal=5000, l=2000, redeclare AixLib.Electrical.Transmission.MediumVoltageCables.Generic commercialCable = AixLib.Electrical.Transmission.MediumVoltageCables.Annealed_Al_10(), V_nominal=15000) "Line that connects the source and the short circuit" annotation (Placement(transformation(extent={{-58,20},{-38,40}})));


AixLib/Electrical/AC/OnePhase/Loads/Examples/ThreePhases.mo
1: Name 'Va' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Va. Affected line: AixLib.Electrical.AC.OnePhase.Sources.FixedVoltage Va( definiteReference=true, f=60, V=120) "Source phase A" annotation (Placement(transformation(extent={{-40,40},{-20,60}})));

2: Name 'Za' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Za. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Za( inductive=true, L=1/(2*Modelica.Constants.pi*60), R=12) "Impedance phase A" annotation (Placement(transformation(extent={{20,40},{40,60}})));

3: Name 'Vb' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vb. Affected line: AixLib.Electrical.AC.OnePhase.Sources.FixedVoltage Vb( definiteReference=true, phiSou=-2.0943951023932, f=60, V=120) "Source phase B" annotation (Placement(transformation(extent={{-40,0},{-20,20}})));

4: Name 'Zb' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zb. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Zb( inductive=true, L=1/(2*Modelica.Constants.pi*60), R=12) "Impedance phase B" annotation (Placement(transformation(extent={{20,0},{40,20}})));

5: Name 'Vc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vc. Affected line: AixLib.Electrical.AC.OnePhase.Sources.FixedVoltage Vc( definiteReference=true, phiSou=2.0943951023932, f=60, V=120) "Source phase C" annotation (Placement(transformation(extent={{-40,-40},{-20, -20}})));

6: Name 'Zc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zc. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance Zc( inductive=true, L=1/(2*Modelica.Constants.pi*60), R=12) "Impedance phase C" annotation (Placement(transformation(extent={{20,-40},{40,-20}})));


AixLib/Electrical/Utilities/Controllers/StateMachineVoltCtrl.mo
1: Name 'vThresh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v, Thresh. Affected line: parameter Real vThresh(min=0.0, max=1.0) = 0.1 "Threshold that activates voltage ctrl (ratio of nominal voltage)";

2: Name 'tDelay' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: t, Delay. Affected line: parameter Modelica.Units.SI.Time tDelay=300 "Time to wait before plugging the load back";

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: protected discrete Boolean connected "Boolean variable that indicates when the load is connected";

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: discrete Real tSwitch "Time instant when the last event occurred";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/Examples/BaseClasses/TransformerExample.mo
1: Name 'V_primary' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: V_primary. Affected line: parameter Modelica.Units.SI.Voltage V_primary=12470 "RMS Voltage on the primary side of the transformer";

2: Name 'V_secondary' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: V_secondary. Affected line: parameter Modelica.Units.SI.Voltage V_secondary=4160 "RMS Voltage on the secondary side of the transformer";

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.FixedVoltage sou( f=60, V=V_primary) "Voltage source" annotation (Placement(transformation(extent={{-70,-10},{-50,10}})));


AixLib/Electrical/AC/OnePhase/Sources/WindTurbine.mo
1: Name 'pf' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: parameter Real pf(min=0, max=1) = 0.9 "Power factor" annotation (Dialog(group="AC-Conversion"));

2: Name 'eta_DCAC' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: eta_, D. Affected line: parameter Real eta_DCAC(min=0, max=1) = 0.9 "Efficiency of DC/AC conversion" annotation (Dialog(group="AC-Conversion"));

3: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: replaceable AixLib.Electrical.AC.OnePhase.Loads.Capacitive load( final mode=AixLib.Electrical.Types.Load.VariableZ_P_input, final pf=pf, final P_nominal=0, final V_nominal=V_nominal) "Load model" annotation (Placement(transformation(extent={{12,-10},{32,10}})));

4: Missing documentation, Name 'gain_DCAC' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: gain_, D. Affected line: protected Modelica.Blocks.Math.Gain gain_DCAC(final k=eta_DCAC) annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=180, origin={52,0})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sources/Examples/WindTurbine_N.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Loads.Resistive_N res(P_nominal=-500, V_nominal=480) "Resistive line" annotation (Placement(transformation(extent={{-22,-30},{-2,-10}})));Grid_N sou(f=60, V=480) "Voltage source" annotation (Placement(transformation(extent={{-80,10},{-60,30}})));Sensors.GeneralizedSensor_N sen "Generalized sensor" annotation (Placement(transformation(extent={{8,-10},{28,10}})));

2: Missing documentation, Name 'line' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: line. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Lines.Line_N line( l=200, P_nominal=5000, V_nominal=480) annotation (Placement(transformation(extent={{-40,-10},{-20,10}})));


AixLib/Fluid/SolarCollectors/Data/GenericEN12975.mo
1: Name 'IAMDiff' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M, Diff. Affected line: parameter Real IAMDiff(final min=0, final max=1, final unit="1") "Incidence angle modifier for diffuse irradiance (incidence angle of 50°)";

2: Name 'eta0' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: eta0. Affected line: parameter Real eta0(final min=0, final max=1, final unit="1") "Optical efficiency (Maximum efficiency)";

3: Name 'a1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: a. Affected line: parameter Modelica.Units.SI.CoefficientOfHeatTransfer a1(final min=0) "First order heat loss coefficient";

4: Name 'a2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: a. Affected line: parameter Real a2(final unit="W/(m2.K2)", final min=0) "Second order heat loss coefficient";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/Examples/ACLine_L.mo
1: Name 'Lbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Lbase. Affected line: parameter Modelica.Units.SI.Inductance Lbase=10/2/Modelica.Constants.pi/60 "Base value for the line inductances";


AixLib/Fluid/Geothermal/Borefields/BaseClasses/HeatTransfer/ThermalResponseFactors/finiteLineSource_Integrand_Equivalent.mo
1: Missing documentation, Name 'wDis' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: w. Affected line: input Integer wDis[n_dis];

2: Name 'n_dis' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_dis. Affected line: input Integer n_dis "Number of unique distances between emitting and receiving boreholes";

3: Name 'includeRealSource' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: include, Real, Source. Affected line: input Boolean includeRealSource = true "true if contribution of real source is included";

4: Name 'includeMirrorSource' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: include, Mirror, Source. Affected line: input Boolean includeMirrorSource = true "true if contribution of mirror source is included";

5: Name 'f' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: protected Real f "Intermediate variable";


AixLib/Fluid/HeatPumps/ModularReversible/Validation/ConstantCarnotEffectiveness.mo
1: Name 'etaCarnot_nominal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Carnot. Affected line: parameter Real etaCarnot_nominal=0.4318 "Calibrated constant Carnot effectiveness";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/UnbalancedStepUp/YD.mo
1: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerStepUpYD transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));

2: Missing documentation, Name 'load3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load3. Affected line: Modelica.Blocks.Sources.Constant load3(k=-2375e3) annotation (Placement(transformation(extent={{14,76},{34,96}})));

3: Missing documentation, Name 'load2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load2(k=-1800e3) annotation (Placement(transformation(extent={{40,58},{60,78}})));

4: Missing documentation, Name 'load1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load1(k=-1275e3) annotation (Placement(transformation(extent={{60,30},{80,50}})));

5: Missing documentation, Name 'pf1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf1(k=0.85) annotation (Placement(transformation(extent={{0,-30},{20,-10}})));

6: Missing documentation, Name 'pf2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf2(k=0.9) annotation (Placement(transformation(extent={{22,-50},{42,-30}})));

7: Missing documentation. Affected line: Modelica.Blocks.Sources.Constant pf3(k=0.95) annotation (Placement(transformation(extent={{44,-70},{64,-50}})));


AixLib/ThermalZones/ISO13790/BaseClasses/OpaqueElements.mo
1: Missing documentation. Affected line: AixLib.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement( transformation(extent={{-120,-20},{-80,20}}), iconTransformation(extent= {{-110,-10},{-90,10}})));

2: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BoundaryConditions.SolarIrradiation.DirectTiltedSurface HDirTil[n]( final til=surTil, final azi=surAzi) annotation (Placement(transformation(extent={{-80,60},{-60,80}})));

3: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BoundaryConditions.SolarIrradiation.DiffusePerez HDifTil [n]( final til=surTil, final azi=surAzi) annotation (Placement(transformation(extent={{-80,20},{-60,40}})));

4: Missing documentation, Name 'multiSum' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: multi. Affected line: Modelica.Blocks.Math.MultiSum multiSum(nu=n) annotation (Placement(transformation(extent={{48,44},{60,56}})));

5: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BoundaryConditions.SolarIrradiation.DirectTiltedSurface HDirTilRoo(til=0, azi= 0) annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));BoundaryConditions.SolarIrradiation.DiffusePerez HDifTilRof(til=0, azi=0) annotation (Placement(transformation(extent={{-80,-80},{-60,-60}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Sources/Examples/FixedVoltageSource.mo
1: Name 'RL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Loads.Inductive RL( P_nominal=-300, mode=AixLib.Electrical.Types.Load.FixedZ_steady_state, V_nominal=480) "Load model" annotation (Placement(transformation(extent={{20,-10},{40,10}})));


AixLib/Fluid/Movers/Validation/BaseClasses/ComparePower.mo
1: Name 'rho_default' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: rho_default. Affected line: final parameter Modelica.Units.SI.Density rho_default= Medium.density_pTX( p=Medium.p_default, T=Medium.T_default, X=Medium.X_default) "Default medium density";

2: Name 'mov3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mov3. Affected line: replaceable AixLib.Fluid.Movers.BaseClasses.PartialFlowMachine mov3 constrainedby AixLib.Fluid.Movers.BaseClasses.PartialFlowMachine "Mover (fan or pump)" annotation (Placement(transformation(extent={{-40,-80},{-20,-60}})));

3: Name 'damExp3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Exp3. Affected line: AixLib.Fluid.Actuators.Dampers.Exponential damExp3( redeclare final package Medium = Medium, final m_flow_nominal=m_flow_nominal, use_inputFilter=false, final dpDamper_nominal=dp_nominal/2, y_start=1, final dpFixed_nominal=dp_nominal/2) "Damper" annotation (Placement(transformation(extent={{40,-80},{60,-60}})));

4: Documentation too short. Affected line: AixLib.Fluid.Sources.Boundary_pT sin( redeclare final package Medium = Medium, nPorts=3) "Sink" annotation (Placement(transformation(extent={{100,-10},{80,10}})));


AixLib/Examples/Tutorial/SimpleHouse/SimpleHouse6.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.Movers.Preconfigured.FlowControlled_dp fan( redeclare package Medium = MediumAir, show_T=true, dp_nominal=dpAir_nominal, use_inputFilter=false, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, m_flow_nominal=mAir_flow_nominal) "Constant head fan" annotation (Placement(transformation( extent={{-10,10},{10,-10}}, origin={0,130})));

2: Name 'booRea3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rea3. Affected line: Modelica.Blocks.Math.BooleanToReal booRea3(realTrue=dpAir_nominal) "Boolean to real" annotation (Placement(transformation(extent={{30,80},{10,100}})));


AixLib/Electrical/Interfaces/CapacitiveLoad.mo
1: Name 'use_pf_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_pf. Affected line: parameter Boolean use_pf_in = false "If true, the power factor is defined by an input" annotation(Dialog(group="Modeling assumption"));

2: Name 'pf' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: parameter Real pf(min=0, max=1) = 0.8 "Power factor" annotation(Dialog(group="Nominal conditions"));

3: Name 'pf_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in( min=0, max=1, unit="1") if (use_pf_in) "Power factor" annotation (Placement(transformation( extent={{-20,-20},{20,20}}, rotation=180, origin={100,60}), iconTransformation( extent={{-20,-20},{20,20}}, rotation=180, origin={100,60})));

4: Name 'j' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: j. Affected line: protected function j = PhaseSystem.j "J operator that rotates of 90 degrees";

5: Name 'pf_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Interfaces.RealInput pf_internal "Hidden value of the input load for the conditional connector";

6: Name 'q' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: q. Affected line: Modelica.Units.SI.ElectricCharge q[2](each stateSelect=StateSelect.prefer) "Electric charge";

7: Name 'Y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Y. Affected line: Modelica.Units.SI.Admittance[2] Y "Admittance";

8: Name 'omega' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: omega. Affected line: Modelica.Units.SI.AngularVelocity omega "Angular velocity";


AixLib/Fluid/SolarCollectors/Controls/BaseClasses/GCritCalc.mo
1: Name 'slope' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: slope. Affected line: parameter Modelica.Units.SI.CoefficientOfHeatTransfer slope "Slope from ratings data";

2: Name 'y_intercept' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_intercept. Affected line: parameter Real y_intercept(final unit="1") "y_intercept from ratings data";

3: Name 'G_TC' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G_. Affected line: Modelica.Blocks.Interfaces.RealOutput G_TC( final unit="W/m2", quantity = "RadiantEnergyFluenceRate") "Critical radiation level" annotation (Placement(transformation(extent={{100,-16},{132,16}})));


AixLib/Electrical/DC/Lines/Examples/Resistance.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: TwoPortResistance lineR(R=10) "Line resistance" annotation (Placement(transformation(extent={{-30,10},{-10,30}})));Sources.ConstantVoltage constantVoltage(V=50) "Voltage source" annotation (Placement(transformation(extent={{-60,10},{-40,30}})));

2: Missing documentation, Name 'ground' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground. Affected line: Modelica.Electrical.Analog.Basic.Ground ground annotation (Placement(transformation(extent={{-72,-16},{-52,4}})));


AixLib/Fluid/SolarCollectors/Validation/FlatPlate.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = AixLib.Media.Water "Medium in the system";


AixLib/Fluid/Geothermal/Aquifer/Examples/CoolingOffice.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package Medium = AixLib.Media.Water "Medium model";

2: Name 'deltaT' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: delta. Affected line: parameter Modelica.Units.SI.TemperatureDifference deltaT=4 "Temperature difference at heat exchanger";

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: HeatExchangers.HeaterCooler_u hea( redeclare package Medium = Medium, m_flow_nominal=mWat_flow_nominal, dp_nominal=100, energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial, Q_flow_nominal=QCoo_flow_nominal) "Heat exchanger" annotation (Placement(transformation(extent={{-10,54},{10,74}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Conversion/Examples/ACACConverter.mo
1: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Loads.Inductive load( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, V_nominal=120) "Load model" annotation (Placement(transformation(extent={{24,0},{44,20}})));

2: Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( duration=0.5, startTime=0.3, height=2000, offset=-1000) "Power consumed by the model" annotation (Placement(transformation(extent={{80,0},{60,20}})));


AixLib/Fluid/Movers/BaseClasses/Validation/MotorEfficiencyMethods.mo
1: Name 'eff3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: eff3. Affected line: AixLib.Fluid.Movers.BaseClasses.FlowMachineInterface eff3( per( pressure=per.pressure, etaHydMet=per.etaHydMet, etaMotMet=AixLib.Fluid.Movers.BaseClasses.Types.MotorEfficiencyMethod.Efficiency_MotorPartLoadRatio, motorEfficiency_yMot(y={0,0.25,0.5,1}, eta={0,0.56,0.7,0.7}), WMot_nominal=500), rho_default=rhoFlu, nOri=2, preVar=AixLib.Fluid.Movers.BaseClasses.Types.PrescribedVariable.Speed, computePowerUsingSimilarityLaws=true) "FlowMachineInterface with per.etaMotMet=.Efficiency_MotorPartLoadRatio" annotation (Placement(transformation(extent={{40,-40},{60,-20}})));

2: Name 'eff4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: eff4. Affected line: AixLib.Fluid.Movers.BaseClasses.FlowMachineInterface eff4( per( pressure=per.pressure, etaHydMet=per.etaHydMet, etaMotMet=AixLib.Fluid.Movers.BaseClasses.Types.MotorEfficiencyMethod.GenericCurve, etaMot_max=0.7, WMot_nominal=500), rho_default=rhoFlu, nOri=2, preVar=AixLib.Fluid.Movers.BaseClasses.Types.PrescribedVariable.Speed, computePowerUsingSimilarityLaws=true) "FlowMachineInterface with per.etaMotMet=.GenericCurve" annotation (Placement(transformation(extent={{40,-80},{60,-60}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Conversion/Examples/ACACTransformerFull.mo
1: Name 'tra_load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_load. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Conversion.ACACTransformerFull tra_load( R1=0.0001, L1=0.0001, R2=0.0001, L2=0.0001, VABase=4000, magEffects=true, Rm=10, Lm=10, VHigh=480, VLow=120, f=60) "Transformer with load" annotation (Placement(transformation(extent={{-18,40},{2,60}})));

2: Documentation too short, Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Loads.Inductive load( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, pf=0.8, V_nominal=120) "Load" annotation (Placement(transformation(extent={{10,40},{30,60}})));

3: Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( duration=0.5, startTime=0.3, offset=0, height=-4000*0.8) "Load power consumption profile" annotation (Placement(transformation(extent={{70,40},{50,60}})));

4: Name 'tra_cc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_cc. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Conversion.ACACTransformerFull tra_cc( VABase=4000, R1=0.01, L1=0.01, R2=0.01, L2=0.01, magEffects=false, Rm=100, Lm=100, VHigh=480, VLow=120, f=60) "Transformer with short circuit connection" annotation (Placement(transformation(extent={{-16,0},{4,20}})));

5: Name 'shortCircuit' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: short, Circuit. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Loads.Impedance shortCircuit(R=1e-8) "Short circuit" annotation (Placement(transformation(extent={{10,0},{30,20}})));

6: Name 'tra_void' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_void. Affected line: AixLib.Electrical.AC.ThreePhasesBalanced.Conversion.ACACTransformerFull tra_void( VABase=4000, R1=0.01, L1=0.01, R2=0.01, L2=0.01, magEffects=false, Rm=100, Lm=100, VHigh=480, VLow=120, f=60) "Transformer with open connection" annotation (Placement(transformation(extent={{-16,-30},{4,-10}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sensors/ProbeDelta.mo
1: Name 'term' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: term. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.Terminal_n term "Electrical connector" annotation ( Placement(transformation( extent={{-10,-10},{10,10}}, rotation=90, origin={0,-90})));


AixLib/Fluid/Movers/BaseClasses/Validation/HydraulicEfficiencyMethods.mo
1: Name 'eff3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: eff3. Affected line: AixLib.Fluid.Movers.BaseClasses.FlowMachineInterface eff3( per( powerOrEfficiencyIsHydraulic=per.powerOrEfficiencyIsHydraulic, pressure=per.pressure, etaMotMet=per.etaMotMet, etaHydMet=AixLib.Fluid.Movers.BaseClasses.Types.HydraulicEfficiencyMethod.Power_VolumeFlowRate, power(V_flow={0,0.25,0.5,0.75,1}, P={480,540,510,550,710})), rho_default=rhoFlu, nOri=2, preVar=AixLib.Fluid.Movers.BaseClasses.Types.PrescribedVariable.Speed, computePowerUsingSimilarityLaws=true) "FlowMachineInterface with per.etaHydMet=.Power_VolumeFlowRate" annotation (Placement(transformation(extent={{40,-40},{60,-20}})));

2: Name 'eff4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: eff4. Affected line: AixLib.Fluid.Movers.BaseClasses.FlowMachineInterface eff4( per( powerOrEfficiencyIsHydraulic=per.powerOrEfficiencyIsHydraulic, pressure=per.pressure, etaMotMet=per.etaMotMet, etaHydMet=AixLib.Fluid.Movers.BaseClasses.Types.HydraulicEfficiencyMethod.EulerNumber, peak( V_flow=0.5, dp=500, eta=0.7)), rho_default=rhoFlu, nOri=2, preVar=AixLib.Fluid.Movers.BaseClasses.Types.PrescribedVariable.Speed, computePowerUsingSimilarityLaws=true) "FlowMachineInterface with per.etaHydMet=.EulerNumber" annotation (Placement(transformation(extent={{40,-80},{60,-60}})));


AixLib/BoundaryConditions/SolarIrradiation/GlobalPerezTiltedSurface.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: DiffusePerez HDifTil( final til=til, final rho=rho, final azi=azi, final outSkyCon=outSkyCon, final outGroCon=outGroCon) "Diffuse irradiation on tilted surface" annotation (Placement(transformation(extent={{-40,20},{0,60}})));DirectTiltedSurface HDirTil( final til=til, final azi=azi) "Direct irradiation on tilted surface" annotation (Placement(transformation(extent={{-40,-60},{0,-20}})));


AixLib/Electrical/Utilities/VoltageControl.mo
1: Name 'vThresh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v, Thresh. Affected line: parameter Real vThresh(min=0.0, max=1.0) = 0.1 "Threshold that activates voltage ctrl (ratio of nominal voltage)";

2: Name 'tDelay' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: t, Delay. Affected line: parameter Modelica.Units.SI.Time tDelay=300 "Time to wait before plugging the load back";

3: Name 'Vmin' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vmin. Affected line: final parameter Modelica.Units.SI.Voltage Vmin=V_nominal*(1 - vThresh) "Low threshold";

4: Name 'Vmax' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Vmax. Affected line: final parameter Modelica.Units.SI.Voltage Vmax=V_nominal*(1 + vThresh) "High threshold";

5: Name 'ctrl' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ctrl. Affected line: AixLib.Electrical.Utilities.Controllers.StateMachineVoltCtrl ctrl( V_nominal=V_nominal, vThresh=vThresh, tDelay=tDelay) "Model that implements the state machines voltage controller";


AixLib/Electrical/AC/OnePhase/Sensors/Examples/Probe.mo
1: Name 'probe_source' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: probe_source. Affected line: AixLib.Electrical.AC.OnePhase.Sensors.Probe probe_source(V_nominal=120) "Probe that measures at the voltage source" annotation (Placement(transformation(extent={{-50,30},{-30,50}})));

2: Name 'probe_loadRC' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: probe_load. Affected line: AixLib.Electrical.AC.OnePhase.Sensors.Probe probe_loadRC(V_nominal=120) "Probe that measures at the RC load" annotation (Placement(transformation(extent={{-10,30},{10,50}})));

3: Name 'loaRL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Inductive loaRL( mode=AixLib.Electrical.Types.Load.FixedZ_steady_state, P_nominal=-10000, V_nominal=120) "Constant load" annotation (Placement(transformation(extent={{10,-70},{30,-50}})));

4: Name 'probe_loadRL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: probe_load, L. Affected line: AixLib.Electrical.AC.OnePhase.Sensors.Probe probe_loadRL(V_nominal=120) "Probe that measures at the RL load" annotation (Placement(transformation(extent={{-10,-28},{10,-8}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Lines/Examples/ACLine_L.mo
1: Name 'Lbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Lbase. Affected line: parameter Modelica.Units.SI.Inductance Lbase=10/2/Modelica.Constants.pi/60 "Base value for the line inductances";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/UnbalancedStepDown/DY.mo
1: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerStepDownDY transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));

2: Missing documentation, Name 'load3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load3. Affected line: Modelica.Blocks.Sources.Constant load3(k=-2375e3) annotation (Placement(transformation(extent={{14,76},{34,96}})));

3: Missing documentation, Name 'load2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load2(k=-1800e3) annotation (Placement(transformation(extent={{40,58},{60,78}})));

4: Missing documentation, Name 'pf1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf1(k=0.85) annotation (Placement(transformation(extent={{0,-30},{20,-10}})));

5: Missing documentation, Name 'pf2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf2(k=0.9) annotation (Placement(transformation(extent={{22,-50},{42,-30}})));

6: Missing documentation. Affected line: Modelica.Blocks.Sources.Constant pf3(k=0.95) annotation (Placement(transformation(extent={{44,-70},{64,-50}})));

7: Missing documentation, Name 'load1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load1(k=-1275e3) annotation (Placement(transformation(extent={{60,30},{80,50}})));


AixLib/Electrical/AC/OnePhase/Loads/Impedance.mo
1: Name 'omega' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: omega. Affected line: Modelica.Units.SI.AngularVelocity omega "Frequency of the quasi-stationary sine waves";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortMatrixRLC_N.mo
1: Name 'Z11' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z1. Affected line: parameter Modelica.Units.SI.Impedance Z11[2] "Element [1,1] of impedance matrix";

2: Name 'Z12' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z1. Affected line: parameter Modelica.Units.SI.Impedance Z12[2] "Element [1,2] of impedance matrix";

3: Name 'Z22' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z2. Affected line: parameter Modelica.Units.SI.Impedance Z22[2] "Element [2,2] of impedance matrix";

4: Name 'Z21' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z2. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z21=Z12 "Element [2,1] of impedance matrix";

5: Name 'Z31' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z3. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z31=Z13 "Element [3,1] of impedance matrix";

6: Name 'Z32' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z3. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z32=Z23 "Element [3,1] of impedance matrix";

7: Name 'Z41' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z4. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z41=Z14 "Element [4,1] of impedance matrix";

8: Name 'Z42' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z4. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z42=Z24 "Element [4,2] of impedance matrix";

9: Name 'B11' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B1. Affected line: parameter Modelica.Units.SI.Admittance B11 "Element [1,1] of admittance matrix";

10: Name 'B12' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B1. Affected line: parameter Modelica.Units.SI.Admittance B12 "Element [1,2] of admittance matrix";

11: Name 'B22' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B2. Affected line: parameter Modelica.Units.SI.Admittance B22 "Element [2,2] of admittance matrix";

12: Name 'B21' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B2. Affected line: final parameter Modelica.Units.SI.Admittance B21=B12 "Element [2,1] of admittance matrix";

13: Name 'B31' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B3. Affected line: final parameter Modelica.Units.SI.Admittance B31=B13 "Element [3,1] of admittance matrix";

14: Name 'B32' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B3. Affected line: final parameter Modelica.Units.SI.Admittance B32=B23 "Element [3,2] of admittance matrix";

15: Name 'B41' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B4. Affected line: final parameter Modelica.Units.SI.Admittance B41=B14 "Element [4,1] of admittance matrix";

16: Name 'B42' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: B4. Affected line: final parameter Modelica.Units.SI.Admittance B42=B24 "Element [4,2] of admittance matrix";

17: Name 'v1_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v1. Affected line: Modelica.Units.SI.Voltage v1_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=0), each stateSelect=StateSelect.never) = terminal_n.phase[1].v "Voltage in line 1 at connector N";

18: Name 'v2_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v2. Affected line: Modelica.Units.SI.Voltage v2_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=-2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_n.phase[2].v "Voltage in line 2 at connector N";

19: Name 'v3_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v3. Affected line: Modelica.Units.SI.Voltage v3_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_n.phase[3].v "Voltage in line 3 at connector N";

20: Name 'v4_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v4. Affected line: Modelica.Units.SI.Voltage v4_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(0), each stateSelect=StateSelect.never) = terminal_n.phase[4].v "Voltage in line 4 (neutral) at connector N";

21: Name 'v1_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v1. Affected line: Modelica.Units.SI.Voltage v1_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=0), each stateSelect=StateSelect.never) = terminal_p.phase[1].v "Voltage in line 1 at connector P";

22: Name 'v2_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v2. Affected line: Modelica.Units.SI.Voltage v2_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=-2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_p.phase[2].v "Voltage in line 2 at connector P";

23: Name 'v3_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v3. Affected line: Modelica.Units.SI.Voltage v3_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_p.phase[3].v "Voltage in line 3 at connector P";

24: Name 'v4_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v4. Affected line: Modelica.Units.SI.Voltage v4_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(0), each stateSelect=StateSelect.never) = terminal_p.phase[4].v "Voltage in line 4 (neutral) at connector P";

25: Name 'productAC1p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: product. Affected line: protected function productAC1p = AixLib.Electrical.PhaseSystems.OnePhase.product "Product between complex quantities";


AixLib/Fluid/SolarCollectors/Examples/FlatPlateWithTank.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = AixLib.Media.Water "Fluid in the storage tank";

2: Name 'Medium_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium_. Affected line: replaceable package Medium_2 = AixLib.Media.Water "Fluid flowing through the collector";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortResistance.mo
1: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref=298.15 "Reference temperature" annotation (Evaluate=true);

2: Name 'M' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M. Affected line: parameter Modelica.Units.SI.Temperature M=507.65 "Temperature constant (R_actual = R*(M + T_heatPort)/(M + T_ref))" annotation (Evaluate=true);


AixLib/Fluid/Movers/BaseClasses/Euler/power.mo
1: Name 'peak' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: peak. Affected line: input AixLib.Fluid.Movers.BaseClasses.Euler.peak peak "Peak operation point";

2: Name 'pressure' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pressure. Affected line: input AixLib.Fluid.Movers.BaseClasses.Characteristics.flowParametersInternal pressure "Pressure curve with both max flow rate and max pressure";

3: Name 'power' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: power. Affected line: output AixLib.Fluid.Movers.BaseClasses.Euler.powerWithDerivative power( V_flow=zeros(11),P=zeros(11),d=zeros(11)) "Power and its derivative vs. flow rate";

4: Name 'V_flow_dp_small' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: V_flow_dp. Affected line: Real V_flow_dp_small( final unit="m3.Pa/s", min = Modelica.Constants.eps) "Small value for regularisation";


AixLib/Electrical/AC/OnePhase/Loads/Examples/ParallelLoads.mo
1: Name 'varRL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Inductive varRL( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, linearized=false, V_nominal=120) "Variable inductor and resistor" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, origin={10,50})));

2: Name 'source' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: source. Affected line: AixLib.Electrical.AC.OnePhase.Sources.FixedVoltage source(f=60, V=120) "Voltage source" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, origin={-70,10})));

3: Name 'load_y' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load_y. Affected line: Modelica.Blocks.Sources.Ramp load_y(duration=0.5, startTime=0.2) "Input signal for RC load" annotation (Placement(transformation(extent={{60,0},{40,20}})));

4: Name 'RL' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Inductive RL( P_nominal=-1e3, linearized=false, V_nominal=120) "Constant inductor and resistor" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, origin={10,30})));

5: Name 'load_P' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load_. Affected line: Modelica.Blocks.Sources.Ramp load_P( startTime=0.2, duration=0.5, height=-2000, offset=1000) "Power signal for load varRL" annotation (Placement(transformation(extent={{60,40},{40,60}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/BalancedStepUp/YY.mo
1: Missing documentation, Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load(k=-1800e3) annotation (Placement(transformation(extent={{54,62},{74,82}})));

2: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformer transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/Capacitive_N.mo
1: Name 'use_pf_in' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_pf. Affected line: parameter Boolean use_pf_in = false "If true, the power factor is defined by an input" annotation(Dialog(group="Modeling assumption"));

2: Name 'pf' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: parameter Real pf(min=0, max=1) = 0.8 "Power factor" annotation(Dialog(group="Nominal conditions"));

3: Name 'pf_in_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_1( min=0, max=1, unit="1") if (use_pf_in and plugPhase1) "Power factor of load on phase 1" annotation (Placement( transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={-60,-120}), iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={-60,-100})));

4: Name 'pf_in_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_2( min=0, max=1, unit="1") if (use_pf_in and plugPhase2) "Power factor of load on phase 2" annotation (Placement( transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={30,-120}),iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={0,-100})));

5: Name 'pf_in_3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf_in_3. Affected line: Modelica.Blocks.Interfaces.RealInput pf_in_3( min=0, max=1, unit="1") if (use_pf_in and plugPhase3) "Power factor of load on phase 3" annotation (Placement( transformation( extent={{-20,-20},{20,20}}, rotation=90, origin={80,-120}),iconTransformation( extent={{-20,-20},{20,20}}, rotation=90, origin={60,-100})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Validation/IEEETests/Test4NodesFeeder/UnbalancedStepUp/DD.mo
1: Missing documentation, Name 'transformer' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: transformer. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Conversion.ACACTransformerDD transformer( VHigh=VLL_side1, VLow=VLL_side2, XoverR=6, Zperc=sqrt(0.01^2 + 0.06^2), VABase=VARbase) annotation (Placement(transformation(extent={{-26,0},{-6,20}})));

2: Missing documentation, Name 'load3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load3. Affected line: Modelica.Blocks.Sources.Constant load3(k=-2375e3) annotation (Placement(transformation(extent={{8,76},{28,96}})));

3: Missing documentation, Name 'load2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load2(k=-1800e3) annotation (Placement(transformation(extent={{34,58},{54,78}})));

4: Missing documentation, Name 'load1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Constant load1(k=-1275e3) annotation (Placement(transformation(extent={{54,30},{74,50}})));

5: Missing documentation, Name 'pf1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf1(k=0.85) annotation (Placement(transformation(extent={{-6,-30},{14,-10}})));

6: Missing documentation, Name 'pf2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Constant pf2(k=0.9) annotation (Placement(transformation(extent={{16,-50},{36,-30}})));

7: Missing documentation. Affected line: Modelica.Blocks.Sources.Constant pf3(k=0.95) annotation (Placement(transformation(extent={{38,-70},{58,-50}})));


AixLib/Utilities/Clustering/Validation/KMeans_1d.mo
1: Name 'n_clusters' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_clusters. Affected line: parameter Integer n_clusters = 3 "Number of clusters to be generated";

2: Name 'data' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: data. Affected line: parameter Real data[:,:] = [1;2;2;3;4] "Test data to be clustered";

3: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: parameter Real[n_clusters,nDim] centroids(each fixed=false) "Centroids of the clusters";parameter Integer[nDat] labels(each fixed=false) "Cluster label associated with each data point";parameter Integer[n_clusters] cluster_size(each fixed=false) "Size of the clusters";

4: Name 'labelsExp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: labels. Affected line: parameter Integer labelsExp[nDat]= {2,2,2,1,3} "Expected cluster labels";

5: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: initial equation (centroids, labels, cluster_size) = AixLib.Utilities.Clustering.KMeans( data, n_clusters, nDat, nDim);


AixLib/Electrical/DC/Sensors/Examples/GeneralizedSensor.mo
1: Missing documentation, Name 'ground' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground. Affected line: Modelica.Electrical.Analog.Basic.Ground ground annotation (Placement(transformation(extent={{-60,-32},{-40,-12}})));


AixLib/Electrical/DC/Conversion/DCDCConverter.mo
1: Name 'VHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: parameter Modelica.Units.SI.Voltage VHigh "DC voltage on side 1 of the transformer (primary side)";

2: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = true "Connect side 1 of converter to ground" annotation(Evaluate=true, Dialog(tab = "Ground", group="side 1"));

3: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "Connect side 2 of converter to ground" annotation(Evaluate=true, Dialog(tab = "Ground", group="side 2"));

4: Name 'LossPower' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Loss, Power. Affected line: Modelica.Units.SI.Power LossPower "Loss power";

5: Name 'conversionFactor' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: conversion, Factor. Affected line: protected parameter Real conversionFactor = VLow/VHigh "Ratio of high versus low voltage";

6: Missing documentation, Name 'i1;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i1. Affected line: Modelica.Units.SI.Current i1;

7: Missing documentation, Name 'i2;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i2. Affected line: Modelica.Units.SI.Current i2;

8: Missing documentation, Name 'v1;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v1. Affected line: Modelica.Units.SI.Voltage v1;

9: Missing documentation, Name 'v2;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v2. Affected line: Modelica.Units.SI.Voltage v2;


AixLib/Electrical/Transmission/BaseClasses/BaseCable.mo
1: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref=298.15 "Reference cable temperature";

2: Name 'M' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M. Affected line: parameter Modelica.Units.SI.Temperature M=228.1 + 273.15 "Temperature constant of the material";

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function lineResistance "Function that computes the resistance of a cable" extends Modelica.Icons.Function;

4: Name 'l' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: l. Affected line: input Modelica.Units.SI.Length l "Length of the cable";

5: Name 'f' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: input Modelica.Units.SI.Frequency f=50 "Frequency considered in the definition of cables properties";

6: Missing documentation, Name 'omega' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: omega. Affected line: protected parameter Modelica.Units.SI.AngularVelocity omega=2*Modelica.Constants.pi*f;

7: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function lineInductance "Function that computes the inductance of a cable" extends Modelica.Icons.Function;

8: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: output Modelica.Units.SI.Inductance L "Inductance of the cable";

9: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function lineCapacitance "Function that computes the capacitance of a cable" extends Modelica.Icons.Function;


AixLib/Fluid/SolarCollectors/Data/GenericASHRAE93.mo
1: Name 'y_intercept' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: y_intercept. Affected line: parameter Real y_intercept(final min=0, final max=1, final unit="1") "y intercept (Maximum efficiency)";

2: Name 'slope' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: slope. Affected line: parameter Modelica.Units.SI.CoefficientOfHeatTransfer slope(final max=0) "Slope from rating data";


AixLib/BoundaryConditions/SolarIrradiation/Examples/GlobalPerezTiltedSurface.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: WeatherData.ReaderTMY3 weaDat(filNam= Modelica.Utilities.Files.loadResource("modelica://AixLib/Resources/weatherdata/USA_CA_San.Francisco.Intl.AP.724940_TMY3.mos")) annotation (Placement(transformation(extent={{-40,0},{-20,20}})));


AixLib/Electrical/PhaseSystems/PartialPhaseSystem.mo
1: Name 'phaseSystemName' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: phase, System, Name. Affected line: constant String phaseSystemName = "UnspecifiedPhaseSystem" "Name of the phase system represented by the package";

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: type Current = Real(unit = "A", quantity = "Current." + phaseSystemName) "Current for connector" annotation (Documentation(info="<html> This type defines the current for a specific connector that extends <a href=\"modelica://AixLib.Electrical.PhaseSystems.PartialPhaseSystem\"> AixLib.Electrical.PhaseSystems.PartialPhaseSystem</a>. </html>"));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: type Voltage = Real(unit = "V", quantity = "Voltage." + phaseSystemName) "Voltage for connector" annotation (Documentation(info="<html> This type defines the voltage for a specific connector that extends <a href=\"modelica://AixLib.Electrical.PhaseSystems.PartialPhaseSystem\"> AixLib.Electrical.PhaseSystems.PartialPhaseSystem</a>. </html>"));

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: type ReferenceAngle "Reference angle for connector" extends Modelica.Units.SI.Angle;

5: Name 'equalityConstraint' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: equality, Constraint. Affected line: function equalityConstraint "Assert that angles are equal" extends Modelica.Icons.Function;

6: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: input ReferenceAngle theta1[:];input ReferenceAngle theta2[:];

7: Missing documentation, Name 'residue' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: residue. Affected line: output Real residue[0];

8: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: algorithm for i in 1:size(theta1, 1) loop assert(abs(theta1[i] - theta2[i]) < Modelica.Constants.eps, "Angles theta1 and theta2 are not equal over the connection.");

9: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function j "Return vector rotated by 90 degrees" extends Modelica.Icons.Function;

10: Missing documentation, Name 'x' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: x. Affected line: input Real x[n];

11: Missing documentation. Affected line: output Real y[n];

12: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function jj "Vectorized version of j" extends Modelica.Icons.Function;

13: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: input Real[:,:] xx "array of voltage or current vectors";output Real[size(xx,1),size(xx,2)] yy "array of rotated vectors";algorithm //yy := {j(xx[:,k]) for k in 1:size(xx,2)};// Note: Dymola 2013 fails to expand for k in 1:size(xx,2) loop yy[:,k] := j(xx[:,k]);end for;end jj;

14: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function rotate "Rotate a vector of an angle theta (anti-counterclock)" extends Modelica.Icons.Function;

15: Missing documentation, Name 'theta;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: theta. Affected line: input Modelica.Units.SI.Angle theta;

16: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function product "Multiply two vectors" extends Modelica.Icons.Function;

17: Missing documentation. Affected line: input Real y[n];

18: Missing documentation, Name 'z' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: z. Affected line: output Real z[n];

19: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function divide "Divide two vectors" extends Modelica.Icons.Function;

20: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function thetaRel "Return absolute angle of rotating system as offset to thetaRef" extends Modelica.Icons.Function;

21: Missing documentation, Name 'theta' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: theta. Affected line: input Modelica.Units.SI.Angle theta[m];

22: Missing documentation, Name 'thetaRel;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: theta. Affected line: output Modelica.Units.SI.Angle thetaRel;

23: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function thetaRef "Return absolute angle of rotating reference system" extends Modelica.Icons.Function;

24: Missing documentation, Name 'thetaRef;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: theta. Affected line: output Modelica.Units.SI.Angle thetaRef;

25: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function phase "Return phase" extends Modelica.Icons.Function;

26: Missing documentation, Name 'phase;' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: phase. Affected line: output Modelica.Units.SI.Angle phase;

27: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function phaseVoltages "Return phase to neutral voltages" extends Modelica.Icons.Function;

28: Name 'v' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: output Modelica.Units.SI.Voltage v[n] "phase to neutral voltages";

29: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function phaseCurrents "Return phase currents" extends Modelica.Icons.Function;

30: Name 'i' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: output Modelica.Units.SI.Current i[n] "phase currents";

31: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function phasePowers "Return phase powers" extends Modelica.Icons.Function;

32: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function phasePowers_vi "Return phase powers" extends Modelica.Icons.Function;

33: Name 'v' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: input Modelica.Units.SI.Voltage v[n] "phase voltages";

34: Name 'i' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: input Modelica.Units.SI.Current i[n] "phase currents";

35: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function systemVoltage "Return system voltage as function of phase voltages" extends Modelica.Icons.Function;

36: Missing documentation, Name 'v' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: input Modelica.Units.SI.Voltage v[n];

37: Missing documentation. Affected line: output Modelica.Units.SI.Voltage V;

38: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function systemCurrent "Return system current as function of phase currents" extends Modelica.Icons.Function;

39: Missing documentation, Name 'i' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: input Modelica.Units.SI.Current i[n];

40: Missing documentation. Affected line: output Modelica.Units.SI.Current I;

41: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable partial function activePower "Return total power as function of phase powers" extends Modelica.Icons.Function;


AixLib/Fluid/Movers/Validation/PressureCurve.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package Medium = AixLib.Media.Air "Medium model";

2: Name 'rho_default' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: rho_default. Affected line: parameter Modelica.Units.SI.Density rho_default= Medium.density_pTX( p=Medium.p_default, T=Medium.T_default, X=Medium.X_default) "Default medium density";


AixLib/Electrical/Interfaces/Load.mo
1: Name 'mode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mode. Affected line: parameter AixLib.Electrical.Types.Load mode( min=AixLib.Electrical.Types.Load.FixedZ_steady_state, max=AixLib.Electrical.Types.Load.VariableZ_y_input) = AixLib.Electrical.Types.Load.FixedZ_steady_state "Type of load model (e.g., steady state, dynamic, prescribed power consumption, etc.)" annotation (Evaluate=true, Dialog(group="Modeling assumption"));

2: Name 'initMode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: init, Mode. Affected line: parameter AixLib.Electrical.Types.InitMode initMode( min=AixLib.Electrical.Types.InitMode.zero_current, max=AixLib.Electrical.Types.InitMode.linearized) = AixLib.Electrical.Types.InitMode.zero_current "Initialization mode for homotopy operator" annotation(Dialog(tab = "Initialization"));

3: Name 'v' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v. Affected line: Modelica.Units.SI.Voltage v[:](start=PhaseSystem.phaseVoltages(V_nominal)) = terminal.v "Voltage vector";

4: Name 'i' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: Modelica.Units.SI.Current i[:](each start=0) = terminal.i "Current vector";

5: Name 'S' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: S. Affected line: Modelica.Units.SI.Power S[PhaseSystem.n]=PhaseSystem.phasePowers_vi(v, -i) "Phase powers";

6: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Real load(min=eps, max=1) "Internal representation of control signal, used to avoid singularity";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sensors/GeneralizedSensor.mo
1: Name 'S' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: S. Affected line: Modelica.Blocks.Interfaces.RealOutput S[3, AixLib.Electrical.PhaseSystems.OnePhase.n]( each final quantity="Power", each final unit="W") "Phase powers" annotation (Placement( transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={-50,-40}),iconTransformation( extent={{-10,-10},{10,10}}, rotation=270, origin={-60,-90})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Interfaces/Connection3to3Ground_p.mo
1: Name 'ground4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground4. Affected line: AixLib.Electrical.AC.OnePhase.Interfaces.Terminal_p ground4 "Connector for neutral" annotation (Placement(transformation(extent={{-114,-70},{-94,-50}}), iconTransformation(extent={{-114,-70},{-94,-50}})));


AixLib/Fluid/Storage/BaseClasses/PartialTwoPortInterface.mo
1: Name 'm_flow_small' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: m_flow. Affected line: parameter Modelica.Units.SI.MassFlowRate m_flow_small(min=0) = 1E-4*abs( m_flow_nominal) "Small mass flow rate for regularization of zero flow" annotation (Dialog(tab="Advanced"));

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Medium.ThermodynamicState sta_a= if allowFlowReversal then Medium.setState_phX(port_a.p, noEvent(actualStream(port_a.h_outflow)), noEvent(actualStream(port_a.Xi_outflow))) else Medium.setState_phX(port_a.p, noEvent(inStream(port_a.h_outflow)), noEvent(inStream(port_a.Xi_outflow))) if show_T "Medium properties in port_a";Medium.ThermodynamicState sta_b= if allowFlowReversal then Medium.setState_phX(port_b.p, noEvent(actualStream(port_b.h_outflow)), noEvent(actualStream(port_b.Xi_outflow))) else Medium.setState_phX(port_b.p, noEvent(port_b.h_outflow), noEvent(port_b.Xi_outflow)) if show_T "Medium properties in port_b";

3: Name '_m_flow_start' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: _m_flow. Affected line: protected final parameter Modelica.Units.SI.MassFlowRate _m_flow_start=0 "Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window";


AixLib/Utilities/Math/Functions/Examples/Interpolate.mo
1: Name 'table' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: table. Affected line: parameter Real table[:,:]=[-50,-0.08709; -25,-0.06158; -10,-0.03895; -5,-0.02754;-3,-0.02133; -2,-0.01742; -1,-0.01232; 0,0; 1,0.01232; 2,0.01742; 3,0.02133;4.5,0.02613; 50,0.02614] "Table of mass flow rate in kg/s (second column) as a function of pressure difference in Pa (first column)";

2: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: protected parameter Real[:] xd=table[:,1] "x-axis support points";parameter Real[size(xd, 1)] yd=table[:,2] "y-axis support points";parameter Real[size(xd, 1)] d(each fixed=false) "Derivatives at the support points";

3: Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( duration=500, height=100, offset=-50) "Ramp from -50Pa to +50Pa";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Sensors/BaseClasses/GeneralizedProbe.mo
1: Name 'perUnit' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Unit. Affected line: parameter Boolean perUnit = true "This flag display voltage in p.u.";

2: Name 'theta' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: theta. Affected line: Modelica.Blocks.Interfaces.RealOutput theta[3](each unit="rad", each displayUnit="deg") "Angle" annotation (Placement( transformation(extent={{60,-40},{80,-20}}), iconTransformation(extent={{60, -40},{80,-20}})));


AixLib/Fluid/SolarCollectors/Controls/Examples/SolarPumpController.mo
1: Name 'sine' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: sine. Affected line: Modelica.Blocks.Sources.Sine sine( amplitude=20, f=0.0001, offset=273.15 + 40) "Water inlet temperature" annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));


AixLib/Electrical/Transmission/LowVoltageCables/Generic.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends lineResistance "Function that computes the resistance of a cable" input AixLib.Electrical.Transmission.LowVoltageCables.Generic cable "Record that contains cable properties";

2: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: algorithm R :=cable.RCha*l;annotation(Inline=true, Documentation(revisions="<html> <ul> <li> September 23, 2014, by Marco Bonvini:<br/> Added function and documentation </li> </ul> </html>", info="<html> <p> This function computes the overall resistance of a cable. </p> <p> The low voltage cable is described by a characteristic resistance per unit length, given this value the overall resistance is computed as </p> <p align=\"center\" style=\"font-style:italic;\"> R = R<sub>CHA</sub> l<sub>CABLE</sub>, </p> <p> where <i>R<sub>CHA</sub></i> is the characteristic resistance per unit length, and <i>l<sub>CABLE</sub></i> is the length of the cable. </p> </html>"));end lineResistance;

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends lineInductance "Function that computes the resistance of a cable" input AixLib.Electrical.Transmission.LowVoltageCables.Generic cable "Record that contains cable properties";

4: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: algorithm L := l*(cable.XCha/omega);annotation(Inline=true, Documentation(revisions="<html> <ul> <li> September 23, 2014, by Marco Bonvini:<br/> Added function and documentation </li> </ul> </html>", info="<html> <p> This function computes the overall inductance of a cable. </p> <p> When the voltage level is low, the cables have a characteristic reactance per unit length, which is specified at <i>f = 50 Hz</i>. The overall inductance is computed as </p> <p align=\"center\" style=\"font-style:italic;\"> L = (X<sub>CHA</sub>/&omega;) l<sub>CABLE</sub>, </p> <p> where <i>X<sub>CHA</sub></i> is the characteristic reactance per unit length, <i>&omega; = 2 &pi; f</i> is the angular velocity, and <i>l<sub>CABLE</sub></i> is the length of the cable. </p> </html>"));end lineInductance;

5: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends lineCapacitance "Function that computes the capacitance of a cable" input AixLib.Electrical.Transmission.LowVoltageCables.Generic cable "Record that contains cable properties";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/BaseClasses/PartialConverterStepUpDY.mo
1: Name 'wye_to_wyeg' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: wye_to_wyeg. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToWyeGround wye_to_wyeg "Wye to wye grounded connection" annotation (Placement(transformation(extent={{78,-10},{58,10}})));

2: Name 'delta_to_wye' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: delta_to_wye. Affected line: AixLib.Electrical.AC.ThreePhasesUnbalanced.Interfaces.WyeToDelta delta_to_wye "Delta to wye connection" annotation (Placement(transformation(extent={{-76,-10},{-56,10}})));


AixLib/Electrical/AC/ThreePhasesBalanced/Loads/Examples/ParallelLoads.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.FixedVoltage E(f=60, V=480) "Voltage source" annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));Resistive R(P_nominal=-2000, V_nominal=480) "Resistive load" annotation (Placement(transformation(extent={{-20,40},{0,60}})));Inductive RL_pf( pf=0.8, P_nominal=-2000, use_pf_in=true, V_nominal=480) "Inductive load with variable power factor" annotation (Placement(transformation(extent={{-20,-10},{0,10}})));

2: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Ramp load( startTime=0.2, duration=0.3) "Power signal profile" annotation (Placement(transformation(extent={{60,-50},{40,-30}})));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Inductive varRL_y( P_nominal=-2000, V_nominal=480, mode=AixLib.Electrical.Types.Load.VariableZ_y_input) "Inductive load with y as input" annotation (Placement(transformation(extent={{-20,-36},{0,-16}})));Capacitive varRC_y( P_nominal=-2000, V_nominal=480, mode=AixLib.Electrical.Types.Load.VariableZ_y_input) "Capacitive load with y as input" annotation (Placement(transformation(extent={{-20,-60},{0,-40}})));Inductive varRL_P(pf=0.8, V_nominal=480, mode=AixLib.Electrical.Types.Load.VariableZ_P_input) "Inductive load with P as input" annotation (Placement(transformation(extent={{-20,14},{0,34}})));

4: Name 'pf' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: pf. Affected line: Modelica.Blocks.Sources.Ramp pf( height=0.2, duration=0.2, offset=0.8, startTime=0.7) "Power factor profile" annotation (Placement(transformation(extent={{60,-20},{40,0}})));


AixLib/Electrical/AC/OnePhase/Loads/Examples/ParallelResistors.mo
1: Name 'source' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: source. Affected line: AixLib.Electrical.AC.OnePhase.Sources.FixedVoltage source(f=60, V=120) "Voltage source" annotation (Placement(transformation( extent={{-10,-10},{10,10}}, origin={-70,10})));

2: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: Modelica.Blocks.Sources.Ramp load(duration=0.5, startTime=0.2, height=2400, offset=-1200) "Power signal for load R" annotation (Placement(transformation(extent={{40,0},{20,20}})));


AixLib/Examples/SimpleHouse.mo
1: Missing documentation, Name 'MediumAir' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package MediumAir = AixLib.Media.Air;

2: Missing documentation, Name 'MediumWater' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium, Water. Affected line: package MediumWater = AixLib.Media.Water;

3: Name 'AWall' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Wall. Affected line: parameter Modelica.Units.SI.Area AWall=100 "Wall area";

4: Name 'gWin' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: g. Affected line: parameter Real gWin(min=0, max=1, unit="1") = 0.3 "Solar heat gain coefficient of window";

5: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.MixingVolumes.MixingVolume zon( redeclare package Medium = MediumAir, V=VZone, nPorts=2, energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial, m_flow_nominal=mAir_flow_nominal, massDynamics=Modelica.Fluid.Types.Dynamics.DynamicFreeInitial) "Very based zone air model" annotation (Placement(transformation(extent={{160,50},{180,30}})));

6: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.HeatExchangers.Radiators.RadiatorEN442_2 rad( redeclare package Medium = MediumWater, T_a_nominal=273.15 + 50, T_b_nominal=273.15 + 40, energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial, allowFlowReversal=allowFlowReversal, Q_flow_nominal=QHea_flow_nominal) "Radiator" annotation (Placement(transformation(extent={{120,-140},{140,-120}})));Fluid.Sources.Boundary_pT bouAir( redeclare package Medium = MediumAir, nPorts=2, use_T_in=true) "Air boundary with constant temperature" annotation ( Placement(transformation(extent={{-10,-10},{10,10}}, origin={-110,140})));Fluid.Sources.Boundary_pT bouWat(redeclare package Medium = MediumWater, nPorts=1) "Pressure bound for water circuit" annotation (Placement( transformation(extent={{-10,-10},{10,10}}, origin={20,-180})));BoundaryConditions.WeatherData.ReaderTMY3 weaDat( filNam=Modelica.Utilities.Files.loadResource("modelica://AixLib/Resources/weatherdata/USA_IL_Chicago-OHare.Intl.AP.725300_TMY3.mos")) "Weather data reader" annotation (Placement(transformation(extent={{-180,-10},{-160,10}})));BoundaryConditions.WeatherData.Bus weaBus "Weather data bus" annotation (Placement(transformation(extent={{-140,-10},{-120,10}}), iconTransformation(extent={{-160,-10},{-140,10}})));

7: Documentation too short, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.HeatExchangers.HeaterCooler_u heaWat( redeclare package Medium = MediumWater, m_flow_nominal=mWat_flow_nominal, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, allowFlowReversal=allowFlowReversal, dp_nominal=5000, Q_flow_nominal=QHea_flow_nominal) "Heater for water circuit" annotation (Placement(transformation(extent={{60,-140},{80,-120}})));Fluid.Movers.FlowControlled_m_flow pum( redeclare package Medium = MediumWater, use_inputFilter=false, m_flow_nominal=mWat_flow_nominal, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, allowFlowReversal=allowFlowReversal, nominalValuesDefineDefaultPressureCurve=true, inputType=AixLib.Fluid.Types.InputType.Stages, massFlowRates=mWat_flow_nominal*{1}) "Pump" annotation (Placement(transformation(extent={{140,-190},{120,-170}})));

8: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.Actuators.Dampers.Exponential vavDam( redeclare package Medium = MediumAir, from_dp=true, m_flow_nominal=mAir_flow_nominal, dpDamper_nominal=10, dpFixed_nominal=dpAir_nominal - 10) "Damper" annotation (Placement( transformation(extent={{-10,10},{10,-10}}, origin={110,130})));Fluid.Movers.FlowControlled_dp fan( redeclare package Medium = MediumAir, dp_nominal=dpAir_nominal, use_inputFilter=false, energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, nominalValuesDefineDefaultPressureCurve=true, m_flow_nominal=mAir_flow_nominal, show_T=true) "Constant head fan" annotation (Placement(transformation( extent={{-10,10},{10,-10}}, origin={-10,130})));

9: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.HeatExchangers.ConstantEffectiveness hexRec( redeclare package Medium1 = MediumAir, redeclare package Medium2 = MediumAir, dp1_nominal=0, dp2_nominal=0, m1_flow_nominal=mAir_flow_nominal, m2_flow_nominal=mAir_flow_nominal, eps=0.85) "Heat exchanger for heat recuperation" annotation (Placement(transformation(extent={{-45,124},{-75,156}})));

10: Name 'con_dp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: con_dp. Affected line: Modelica.Blocks.Sources.Constant con_dp(k=dpAir_nominal) "Pressure head" annotation (Placement(transformation(extent={{-50,90},{-30,110}})));

11: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Controls.Continuous.LimPID conDam( controllerType=Modelica.Blocks.Types.SimpleController.P, yMin=0.25) "Controller for damper" annotation (Placement(transformation(extent={{80,90},{100,110}})));

12: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Fluid.HeatExchangers.SensibleCooler_T cooAir( energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState, allowFlowReversal=allowFlowReversal, m_flow_nominal=mAir_flow_nominal, dp_nominal=0, redeclare package Medium = MediumAir) "Cooling for supply air" annotation (Placement(transformation(extent={{30,140},{50,120}})));


AixLib/Fluid/SolarCollectors/Examples/FlatPlate.mo
1: Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package Medium = Modelica.Media.Incompressible.Examples.Glycol47 "Medium in the system";

2: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.Boundary_pT sou( redeclare package Medium = Medium, T=273.15 + 10, nPorts=1, use_p_in=true) "Inlet for water flow" annotation (Placement( transformation( extent={{10,-10},{-10,10}}, rotation=180, origin={-48,0})));

3: Name 'sine' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: sine. Affected line: Modelica.Blocks.Sources.Sine sine( f=3/86400, amplitude=-solCol.dp_nominal, offset=1E5) "Pressure source" annotation (Placement(transformation(extent={{-88,-18},{-68,2}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortRLC.mo
1: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance L "Inductance";

2: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref=298.15 "Reference temperature" annotation (Evaluate=true);

3: Name 'M' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M. Affected line: parameter Modelica.Units.SI.Temperature M=507.65 "Temperature constant (R_actual = R*(M + T_heatPort)/(M + T_ref))" annotation (Evaluate=true);

4: Name 'mode' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: mode. Affected line: parameter AixLib.Electrical.Types.Load mode( min=AixLib.Electrical.Types.Load.FixedZ_steady_state, max=AixLib.Electrical.Types.Load.FixedZ_dynamic)= AixLib.Electrical.Types.Load.FixedZ_steady_state "Type of model (e.g., steady state, dynamic, prescribed power consumption, etc.)" annotation (Evaluate=true, Dialog(group="Modeling assumption"));


AixLib/Electrical/Transmission/MediumVoltageCables/Generic.mo
1: Name 'size' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: size. Affected line: parameter String size(start="") "AWG or kcmil code representing the conductor size";

2: Name 'D' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: D. Affected line: parameter Modelica.Units.SI.Length D "Outer diameter";

3: Name 'GMR' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G, M. Affected line: parameter Modelica.Units.SI.Length GMR "Geometrical Mean Radius of the cable";

4: Name 'GMD' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: G, M, D. Affected line: parameter Modelica.Units.SI.Length GMD "Geometrical Mean Diameter of the cable";

5: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends lineResistance "Function that computes the resistance of a cable" input AixLib.Electrical.Transmission.MediumVoltageCables.Generic cable "Record that contains cable properties";

6: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: algorithm R := l*cable.Rdc*AixLib.Electrical.Transmission.Functions.R_AC_correction( cable.size, cable.material);

7: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends lineInductance "Function that computes the resistance of a cable" input AixLib.Electrical.Transmission.MediumVoltageCables.Generic cable "Record that contains cable properties";

8: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: algorithm L := l*2e-7*log(cable.GMD/cable.GMR);annotation(Inline=true, Documentation(revisions="<html> <ul> <li> September 23, 2014, by Marco Bonvini:<br/> Added function and documentation </li> </ul> </html>", info="<html> <p> This function computes the overall inductance of a cable. </p> <p> When the voltage level is medium or high, the cables have geometric parameters that can be used to compute the inductance as </p> <p align=\"center\" style=\"font-style:italic;\"> R = l<sub>CABLE</sub> 2 10<sup>-7</sup> log(GMD/GMR), </p> <p> where <i>l<sub>CABLE</sub></i> is the length of the cable, and <i>GMD</i> and <i>GMR</i> are the geometric mean distance and the geometric mean radius of the cable. </p> </html>"));end lineInductance;

9: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: redeclare function extends lineCapacitance "Function that computes the capacitance of a cable" input AixLib.Electrical.Transmission.MediumVoltageCables.Generic cable "Record that contains cable properties";

10: Name 'r' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: r. Affected line: protected Modelica.Units.SI.Length r "Radius";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortInductance_N.mo
1: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance L "Inductance";

2: Name 'Ln' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Ln. Affected line: parameter Modelica.Units.SI.Inductance Ln "Inductance of neutral cable";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/ACACTransformerFull.mo
1: Name 'VHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: parameter Modelica.Units.SI.Voltage VHigh "Rms voltage on side 1 of the transformer (primary side)";

2: Name 'VABase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.ApparentPower VABase "Nominal power of the transformer";

3: Name 'f' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: f. Affected line: parameter Modelica.Units.SI.Frequency f(start=60) "Nominal frequency";

4: Name 'L1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter AixLib.Electrical.Types.PerUnit L1(min=0) "Inductance on side 1 of the transformer (pu)";

5: Name 'L2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter AixLib.Electrical.Types.PerUnit L2(min=0) "Inductance on side 2 of the transformer (pu)";

6: Name 'magEffects' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Effects. Affected line: parameter Boolean magEffects = false "If =true introduce magnetization effects" annotation(Dialog(group="Magnetization"));

7: Name 'Rm' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Rm. Affected line: parameter AixLib.Electrical.Types.PerUnit Rm(min=0,start=0) "Magnetization resistance (pu)" annotation(Dialog(group="Magnetization", enable = magEffects));

8: Name 'Lm' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Lm. Affected line: parameter AixLib.Electrical.Types.PerUnit Lm(min=0,start=0) "Magnetization inductance (pu)" annotation(Dialog(group="Magnetization", enable = magEffects));

9: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "Connect side 1 of converter to ground" annotation(Dialog(tab = "Ground", group="side 1"));

10: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "Connect side 2 of converter to ground" annotation(Dialog(tab = "Ground", group="side 2"));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/ACACTransformerStepDownYD.mo
1: Name 'VHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: parameter Modelica.Units.SI.Voltage VHigh "Rms voltage on side 1 of the transformer (primary side)";

2: Name 'VABase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.ApparentPower VABase "Nominal power of the transformer";

3: Name 'XoverR' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Xover. Affected line: parameter Real XoverR "Ratio between the complex and real components of the impedance (XL/R)";

4: Name 'Zperc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zperc. Affected line: parameter Real Zperc "Short circuit impedance";

5: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "Connect side 1 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 1"));

6: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "Connect side 2 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 2"));


AixLib/Electrical/Interfaces/VariableVoltageSource.mo
1: Name 'V_in_internal' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: V_in. Affected line: protected Modelica.Blocks.Interfaces.RealInput V_in_internal(unit="V") "Hidden value of the input voltage for the conditional connector";


AixLib/Electrical/AC/OnePhase/Conversion/Examples/ACACTransformerFull.mo
1: Name 'tra_load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_load. Affected line: AixLib.Electrical.AC.OnePhase.Conversion.ACACTransformerFull tra_load( R1=0.0001, L1=0.0001, R2=0.0001, L2=0.0001, VABase=4000, magEffects=true, Rm=10, Lm=10, VHigh=120, VLow=60, f=60) "Transformer with load" annotation (Placement(transformation(extent={{-18,40},{2,60}})));

2: Name 'load' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: load. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Inductive load( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, pf=0.8, V_nominal=60) "Load model" annotation (Placement(transformation(extent={{10,40},{30,60}})));

3: Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( duration=0.5, startTime=0.3, offset=0, height=-4000*0.8) "Load power consumption profile" annotation (Placement(transformation(extent={{70,40},{50,60}})));

4: Name 'tra_cc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_cc. Affected line: AixLib.Electrical.AC.OnePhase.Conversion.ACACTransformerFull tra_cc( VABase=4000, R1=0.01, L1=0.01, R2=0.01, L2=0.01, magEffects=false, Rm=100, Lm=100, VHigh=120, VLow=60, f=60) "Transformer with short circuit connection" annotation (Placement(transformation(extent={{-16,0},{4,20}})));

5: Name 'shortCircuit' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: short, Circuit. Affected line: AixLib.Electrical.AC.OnePhase.Loads.Impedance shortCircuit(R=1e-8) "Short circuit" annotation (Placement(transformation(extent={{10,0},{30,20}})));

6: Name 'tra_void' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: tra_void. Affected line: AixLib.Electrical.AC.OnePhase.Conversion.ACACTransformerFull tra_void( VABase=4000, R1=0.01, L1=0.01, R2=0.01, L2=0.01, magEffects=false, Rm=100, Lm=100, VHigh=120, VLow=60, f=60) "Transformer with open connection" annotation (Placement(transformation(extent={{-16,-30},{4,-10}})));


AixLib/Fluid/Geothermal/Borefields/BaseClasses/HeatTransfer/ThermalResponseFactors/finiteLineSource_Equivalent.mo
1: Documentation too short, Name 't' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: t. Affected line: input Modelica.Units.SI.Time t "Time";

2: Name 'aSoi' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: a. Affected line: input Modelica.Units.SI.ThermalDiffusivity aSoi "Ground thermal diffusivity";

3: Name 'wDis' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: w. Affected line: input Integer wDis[n_dis] "Number of occurences of each distance";

4: Name 'n_dis' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: n_dis. Affected line: input Integer n_dis "Number of unique distances";

5: Name 'includeRealSource' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: include, Real, Source. Affected line: input Boolean includeRealSource = true "True if contribution of real source is included";

6: Name 'includeMirrorSource' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: include, Mirror, Source. Affected line: input Boolean includeMirrorSource = true "True if contribution of mirror source is included";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortMatrixRL_N.mo
1: Name 'Z11' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z1. Affected line: parameter Modelica.Units.SI.Impedance Z11[2] "Element [1,1] of impedance matrix";

2: Name 'Z12' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z1. Affected line: parameter Modelica.Units.SI.Impedance Z12[2] "Element [1,2] of impedance matrix";

3: Name 'Z22' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z2. Affected line: parameter Modelica.Units.SI.Impedance Z22[2] "Element [2,2] of impedance matrix";

4: Name 'Z21' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z2. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z21=Z12 "Element [2,1] of impedance matrix";

5: Name 'Z31' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z3. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z31=Z13 "Element [3,1] of impedance matrix";

6: Name 'Z32' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z3. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z32=Z23 "Element [3,1] of impedance matrix";

7: Name 'Z41' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z4. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z41=Z14 "Element [4,1] of impedance matrix";

8: Name 'Z42' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z4. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z42=Z24 "Element [4,2] of impedance matrix";

9: Name 'i1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: Modelica.Units.SI.Current i1[2](each stateSelect=StateSelect.prefer)= terminal_n.phase[1].i "Current in line 1";

10: Name 'i2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: Modelica.Units.SI.Current i2[2](each stateSelect=StateSelect.prefer)= terminal_n.phase[2].i "Current in line 2";

11: Name 'i3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i3. Affected line: Modelica.Units.SI.Current i3[2](each stateSelect=StateSelect.prefer)= terminal_n.phase[3].i "Current in line 3";

12: Name 'i4' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i4. Affected line: Modelica.Units.SI.Current i4[2](each stateSelect=StateSelect.prefer)= terminal_n.phase[4].i "Current in line 4 (neutral)";

13: Name 'v1_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v1. Affected line: Modelica.Units.SI.Voltage v1_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=0), each stateSelect=StateSelect.never) = terminal_n.phase[1].v "Voltage in line 1 at connector N";

14: Name 'v2_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v2. Affected line: Modelica.Units.SI.Voltage v2_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=-2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_n.phase[2].v "Voltage in line 2 at connector N";

15: Name 'v3_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v3. Affected line: Modelica.Units.SI.Voltage v3_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_n.phase[3].v "Voltage in line 3 at connector N";

16: Name 'v4_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v4. Affected line: Modelica.Units.SI.Voltage v4_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(0), each stateSelect=StateSelect.never) = terminal_n.phase[4].v "Voltage in line 4 (neutral) at connector N";

17: Name 'v1_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v1. Affected line: Modelica.Units.SI.Voltage v1_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=0), each stateSelect=StateSelect.never) = terminal_p.phase[1].v "Voltage in line 1 at connector P";

18: Name 'v2_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v2. Affected line: Modelica.Units.SI.Voltage v2_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=-2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_p.phase[2].v "Voltage in line 2 at connector P";

19: Name 'v3_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v3. Affected line: Modelica.Units.SI.Voltage v3_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_p.phase[3].v "Voltage in line 3 at connector P";

20: Name 'v4_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v4. Affected line: Modelica.Units.SI.Voltage v4_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(0), each stateSelect=StateSelect.never) = terminal_p.phase[4].v "Voltage in line 4 (neutral) at connector P";

21: Name 'productAC1p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: product. Affected line: protected function productAC1p = AixLib.Electrical.PhaseSystems.OnePhase.product "Product between complex quantities";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Lines/TwoPortMatrixRL.mo
1: Name 'Z11' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z1. Affected line: parameter Modelica.Units.SI.Impedance Z11[2] "Element [1,1] of impedance matrix";

2: Name 'Z12' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z1. Affected line: parameter Modelica.Units.SI.Impedance Z12[2] "Element [1,2] of impedance matrix";

3: Name 'Z22' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z2. Affected line: parameter Modelica.Units.SI.Impedance Z22[2] "Element [2,2] of impedance matrix";

4: Name 'Z21' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z2. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z21=Z12 "Element [2,1] of impedance matrix";

5: Name 'Z31' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z3. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z31=Z13 "Element [3,1] of impedance matrix";

6: Name 'Z32' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Z3. Affected line: final parameter Modelica.Units.SI.Impedance[2] Z32=Z23 "Element [3,1] of impedance matrix";

7: Name 'i1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: Modelica.Units.SI.Current i1[2](each stateSelect=StateSelect.prefer)= terminal_n.phase[1].i "Current in line 1";

8: Name 'i2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: Modelica.Units.SI.Current i2[2](each stateSelect=StateSelect.prefer)= terminal_n.phase[2].i "Current in line 2";

9: Name 'i3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i3. Affected line: Modelica.Units.SI.Current i3[2](each stateSelect=StateSelect.prefer)= terminal_n.phase[3].i "Current in line 3";

10: Name 'v1_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v1. Affected line: Modelica.Units.SI.Voltage v1_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=0), each stateSelect=StateSelect.never) = terminal_n.phase[1].v "Voltage in line 1 at connector N";

11: Name 'v2_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v2. Affected line: Modelica.Units.SI.Voltage v2_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=-2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_n.phase[2].v "Voltage in line 2 at connector N";

12: Name 'v3_n' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v3. Affected line: Modelica.Units.SI.Voltage v3_n[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_n.phase[3].v "Voltage in line 3 at connector N";

13: Name 'v1_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v1. Affected line: Modelica.Units.SI.Voltage v1_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=0), each stateSelect=StateSelect.never) = terminal_p.phase[1].v "Voltage in line 1 at connector P";

14: Name 'v2_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v2. Affected line: Modelica.Units.SI.Voltage v2_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=-2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_p.phase[2].v "Voltage in line 2 at connector P";

15: Name 'v3_p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: v3. Affected line: Modelica.Units.SI.Voltage v3_p[2]( start=AixLib.Electrical.PhaseSystems.OnePhase.phaseVoltages(V_nominal/ sqrt(3), phi=2*Modelica.Constants.pi/3), each stateSelect=StateSelect.never) = terminal_p.phase[3].v "Voltage in line 3 at connector P";

16: Name 'productAC1p' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: product. Affected line: protected function productAC1p = AixLib.Electrical.PhaseSystems.OnePhase.product "Product between complex quantities";


AixLib/Fluid/SolarCollectors/Controls/CollectorPump.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: BoundaryConditions.SolarIrradiation.DiffusePerez HDifTilIso( final til=til, final azi=azi, final rho=rho) "Diffuse solar irradiation on a tilted surface" annotation (Placement(transformation(extent={{-60,50},{-40,70}})));BoundaryConditions.SolarIrradiation.DirectTiltedSurface HDirTil( final til=til, final azi=azi) "Direct solar irradiation on a tilted surface" annotation (Placement(transformation(extent={{-60,20},{-40,40}})));

2: Missing documentation. Affected line: Modelica.Blocks.Logical.Hysteresis hys( final uLow=0, final uHigh=delQ_flow) annotation (Placement(transformation(extent={{60,-10},{80,10}})));


AixLib/Electrical/Transmission/BaseClasses/PartialTwoPortResistance.mo
1: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref=298.15 "Reference temperature";

2: Name 'M' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M. Affected line: parameter Modelica.Units.SI.Temperature M=507.65 "Temperature constant (R_actual = R*(M + T_heatPort)/(M + T_ref))";

3: Name 'R_actual' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: R_actual. Affected line: Modelica.Units.SI.Resistance R_actual "Actual resistance = R*(M + T_heatPort)/(M + T_ref) ";


AixLib/Electrical/AC/ThreePhasesUnbalanced/Loads/Examples/Loads_N.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.FixedVoltage_N sou(definiteReference=true, f=60, V=480) "Voltage source" annotation (Placement(transformation(extent={{-94,-10},{-74,10}})));

2: Name 'ph_23' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ph_23. Affected line: Modelica.Blocks.Sources.Constant ph_23(k=-1000) "Power signal for loads on phase 2 and 3" annotation (Placement(transformation(extent={{100,-10},{80,10}})));


AixLib/Electrical/Transmission/BaseClasses/PartialTwoPortRLC.mo
1: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref=298.15 "Reference temperature";

2: Name 'M' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: M. Affected line: parameter Modelica.Units.SI.Temperature M=507.65 "Temperature constant (R_actual = R*(M + T_heatPort)/(M + T_ref))";

3: Name 'L' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: L. Affected line: parameter Modelica.Units.SI.Inductance L "Inductance";

4: Name 'R_actual' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: R_actual. Affected line: Modelica.Units.SI.Resistance R_actual "Actual resistance = R*(M + T_heatPort)/(M + T_ref) ";


AixLib/Electrical/DC/Loads/Examples/LinearizedLoad.mo
1: Name 'error' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: error. Affected line: Real error = (sen_nlin.P - sen_lin.P)*100/sen_nlin.P "Percentage of error between the linearized and actual power consumption";

2: Name 'deltaV' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: delta. Affected line: Real deltaV = LinearLoad.V_nominal - sen_lin.V "Voltage distance between nominal condition and actual voltage";

3: Name 'NonlinearLoad' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Nonlinear, Load. Affected line: AixLib.Electrical.DC.Loads.Conductor NonlinearLoad( linearized=false, mode=AixLib.Electrical.Types.Load.VariableZ_P_input, V_nominal=100, P_nominal=0) "Nonlinear load model" annotation (Placement(transformation(extent={{30,-40},{50,-20}})));

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sources.ConstantVoltage sou(V=100) "Voltage source" annotation (Placement(transformation(extent={{-90,-10},{-70,10}})));

5: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Lines.TwoPortResistance Rline1(R=2) "Line resistance" annotation (Placement(transformation(extent={{-50,-40},{-30,-20}})));Sensors.GeneralizedSensor sen_nlin "Sensor" annotation (Placement(transformation(extent={{-10,-40},{10,-20}})));

6: Name 'LinearLoad' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Linear, Load. Affected line: AixLib.Electrical.DC.Loads.Conductor LinearLoad( mode=AixLib.Electrical.Types.Load.VariableZ_P_input, V_nominal=100, linearized=true, P_nominal=0) "Linearized load model" annotation (Placement(transformation(extent={{30,20},{50,40}})));

7: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Sensors.GeneralizedSensor sen_lin "Sensor" annotation (Placement(transformation(extent={{-10,20},{10,40}})));Lines.TwoPortResistance Rline2(R=2) "Line resistance" annotation (Placement(transformation(extent={{-50,20},{-30,40}})));

8: Name 'ramp' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ramp. Affected line: Modelica.Blocks.Sources.Ramp ramp( duration=0.5, startTime=0.2, offset=-50, height=-950) "Power consumption" annotation (Placement(transformation(extent={{90,-10},{70,10}})));


AixLib/Fluid/SolarCollectors/BaseClasses/Examples/EN12975HeatLoss.mo
1: Name 'T3' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T3. Affected line: Modelica.Blocks.Sources.Sine T3( f=0.1, amplitude=15, offset=273.15 + 20) "Temperature of the third segment" annotation (Placement(transformation(extent={{-50,-50},{-30,-30}})));


AixLib/Utilities/Math/Functions/Examples/SmoothInterpolation.mo
1: Name 'Real' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Real. Affected line: parameter Real[:] xSup={-1,1,5,6} "Support points";parameter Real[size(xSup, 1)] ySup={-1,1,2,10} "Support points";

2: Name 'x' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: x. Affected line: Real x "Independent variable";

3: Name 'yMonotone' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Monotone. Affected line: Real yMonotone "Dependent variable with monotone interpolation";

4: Name 'y2Monotone' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Monotone. Affected line: Real y2Monotone "Dependent variable with monotone interpolation for n=2";

5: Name 'y1Monotone' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Monotone. Affected line: Real y1Monotone "Dependent variable with monotone interpolation for n=1";


AixLib/Utilities/Math/Functions/smoothInterpolation.mo
1: Name 'x' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: x. Affected line: input Real x "Abscissa value";

2: Name 'xSup' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: x. Affected line: input Real xSup[:] "Support points (strictly increasing)";

3: Name 'ensureMonotonicity' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ensure, Monotonicity. Affected line: input Boolean ensureMonotonicity=isMonotonic(ySup, strict=false) "Set to true to ensure monotonicity of the cubic hermite";

4: Name 'dy_dx' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: dy_dx. Affected line: Real dy_dx[size(xSup,1)] "Derivative at xSup";

5: Name 'i' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: i. Affected line: Integer i "Integer to select data interval";


AixLib/ThermalZones/ISO13790/Examples/FreeFloatingHVAC.mo
1: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Zone5R1C.ZoneHVAC zonHVAC( airRat=0.5, AWin={0,0,3,0}, UWin=1.8, AWal={12,12,9,12}, ARoo=16, UWal=1.3, URoo=1.3, UFlo=1, AFlo=16, VRoo=16*3, nOrientations=4, surTil={1.5707963267949,1.5707963267949,1.5707963267949,1.5707963267949}, surAzi={3.1415926535898,-1.5707963267949,0,1.5707963267949}, gFac=0.5, redeclare package Medium = AixLib.Media.Air, redeclare AixLib.ThermalZones.ISO13790.Data.Light buiMas) "Thermal zone" annotation (Placement(transformation(extent={{26,-12},{54,16}})));

2: Name 'intGains' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Gains. Affected line: Modelica.Blocks.Sources.Constant intGains(k=10) "Internal heat gains" annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));

3: Name 'latGains' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Gains. Affected line: Modelica.Blocks.Sources.Constant latGains(k=0) "Latent gains" annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));


AixLib/Electrical/AC/ThreePhasesUnbalanced/Conversion/ACACTransformerStepDownDY.mo
1: Name 'VHigh' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: High. Affected line: parameter Modelica.Units.SI.Voltage VHigh "Rms voltage on side 1 of the transformer (primary side)";

2: Name 'VABase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Base. Affected line: parameter Modelica.Units.SI.ApparentPower VABase "Nominal power of the transformer";

3: Name 'XoverR' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Xover. Affected line: parameter Real XoverR "Ratio between the complex and real components of the impedance (XL/R)";

4: Name 'Zperc' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Zperc. Affected line: parameter Real Zperc "Short circuit impedance";

5: Name 'ground_1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_1 = false "Connect side 1 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 1"));

6: Name 'ground_2' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: ground_. Affected line: parameter Boolean ground_2 = true "Connect side 2 of transformer to ground" annotation(Dialog(tab = "Ground", group="side 2"));


AixLib/Fluid/Movers/BaseClasses/Validation/NegativePressureOrFlow.mo
1: Missing documentation, Name 'Medium' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: package Medium = AixLib.Media.Air;

2: Name 'rho_default' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: rho_default. Affected line: parameter Modelica.Units.SI.Density rho_default=1.2 "Fluid density at medium default state";


AixLib/Fluid/HeatPumps/ModularReversible/Validation/BaseClasses/PartialValidation.mo
1: Name 'MediumSou' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Medium. Affected line: replaceable package MediumSou = AixLib.Media.Water constrainedby Modelica.Media.Interfaces.PartialMedium "Medium of source side" annotation (choicesAllMatching=true);


AixLib/Electrical/AC/OnePhase/Lines/Examples/ACLine_L.mo
1: Name 'Lbase' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Lbase. Affected line: parameter Modelica.Units.SI.Inductance Lbase=10/2/Modelica.Constants.pi/60 "Base value for the line inductances";