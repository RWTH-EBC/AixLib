


AixLib/ThermalZones/HighOrder/Rooms/BaseClasses/PartialRoomFourWalls.mo
1: Name 'room_height' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: room_height. Affected line: parameter Modelica.Units.SI.Height room_height=2.7 "height" annotation (Dialog(group="Dimensions", descriptionLabel=true));

2: Name 'room_width' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: room_width. Affected line: parameter Modelica.Units.SI.Length room_width=8 "width" annotation (Dialog(group="Dimensions", descriptionLabel=true));

3: Name 'Win_Area' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Win_, Area. Affected line: parameter Modelica.Units.SI.Area Win_Area=12 "Window area " annotation ( Dialog( group="Windows", descriptionLabel=true));

4: Name 'use_shortWaveRadIn' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_short, Wave, In. Affected line: parameter Boolean use_shortWaveRadIn=true "Use bus connector for incoming shortwave radiation" annotation (Dialog(tab="Inner walls", group="Shortwave Radiation"));

5: Name 'use_shortWaveRadOut' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_short, Wave. Affected line: parameter Boolean use_shortWaveRadOut=true "Use bus connector for outgoing shortwave radiation" annotation (Dialog(tab="Inner walls", group="Shortwave Radiation", enable=use_shortWaveRadIn));

6: Name 'use_dynamicShortWaveRadMethod' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: use_dynamic, Short, Wave, Method. Affected line: parameter Boolean use_dynamicShortWaveRadMethod=false "True = dynamic as holistic approach, false = static approach to obtain the same values as provided in tables of the ASHREA" annotation (Dialog(tab="Inner walls", group="Shortwave Radiation", enable= use_shortWaveRadIn));

7: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: parameter Components.Types.selectorCoefficients absInnerWallSurf "Coefficients for interior solar absorptance of wall surface abs={0.6, 0.9, 0.1}" annotation (Dialog(tab="Inner walls", group="Shortwave Radiation", enable= use_shortWaveRadIn and not use_dynamicShortWaveRadMethod));replaceable parameter ThermalZones.HighOrder.Components.Types.PartialCoeffTable coeffTableSolDistrFractions constrainedby AixLib.ThermalZones.HighOrder.Components.Types.PartialCoeffTable(final abs=absInnerWallSurf) "Record holding the values to reproduce the tables" annotation (choicesAllMatching=true, Dialog(tab="Inner walls", group="Shortwave Radiation", enable= use_shortWaveRadIn and not use_dynamicShortWaveRadMethod), Placement(transformation(extent={{78,78},{98,98}})));AixLib.ThermalZones.HighOrder.Components.Walls.Wall wallSouth( use_shortWaveRadIn=use_shortWaveRadIn, use_shortWaveRadOut=use_shortWaveRadOut, energyDynamics=energyDynamicsWalls, radLongCalcMethod=radLongCalcMethod, T_ref=T_ref, calcMethodIn=calcMethodIn, WindowType=Type_Win, redeclare model WindowModel = WindowModel, redeclare model CorrSolarGainWin = CorrSolarGainWin, T0=TWalls_start, wall_length=room_width, solar_absorptance=solar_absorptance_OW, calcMethodOut=calcMethodOut, withSunblind=use_sunblind, Blinding=1 - ratioSunblind, LimitSolIrr=solIrrThreshold, TOutAirLimit=TOutAirLimit, wall_height=room_height, surfaceType=AixLib.DataBase.Surfaces.RoughnessForHT.Brick_RoughPlaster()) annotation (Placement(transformation( extent={{-5,-35},{5,35}}, rotation=90, origin={18,-68})));AixLib.ThermalZones.HighOrder.Components.Walls.Wall wallWest( use_shortWaveRadIn=use_shortWaveRadIn, use_shortWaveRadOut=use_shortWaveRadOut, energyDynamics=energyDynamicsWalls, radLongCalcMethod=radLongCalcMethod, T_ref=T_ref, calcMethodIn=calcMethodIn, wall_length=room_length, wall_height=room_height, WindowType=Type_Win, redeclare model WindowModel = WindowModel, redeclare model CorrSolarGainWin = CorrSolarGainWin, T0=TWalls_start, withSunblind=use_sunblind, Blinding=1 - ratioSunblind, LimitSolIrr=solIrrThreshold, TOutAirLimit=TOutAirLimit, solar_absorptance=solar_absorptance_OW, surfaceType=DataBase.Surfaces.RoughnessForHT.Brick_RoughPlaster(), calcMethodOut=calcMethodOut) annotation (Placement(transformation( extent={{-5,-27},{5,27}}, rotation=0, origin={-83,13})));AixLib.ThermalZones.HighOrder.Components.Walls.Wall wallEast( use_shortWaveRadIn=use_shortWaveRadIn, use_shortWaveRadOut=use_shortWaveRadOut, energyDynamics=energyDynamicsWalls, radLongCalcMethod=radLongCalcMethod, T_ref=T_ref, calcMethodIn=calcMethodIn, wall_length=room_length, wall_height=room_height, WindowType=Type_Win, redeclare model WindowModel = WindowModel, redeclare model CorrSolarGainWin = CorrSolarGainWin, T0=TWalls_start, withSunblind=use_sunblind, Blinding=1 - ratioSunblind, LimitSolIrr=solIrrThreshold, TOutAirLimit=TOutAirLimit, solar_absorptance=solar_absorptance_OW, surfaceType=DataBase.Surfaces.RoughnessForHT.Brick_RoughPlaster(), calcMethodOut=calcMethodOut) annotation (Placement(transformation( extent={{-5,-27},{5,27}}, rotation=180, origin={69,13})));AixLib.ThermalZones.HighOrder.Components.Walls.Wall wallNorth( use_shortWaveRadIn=use_shortWaveRadIn, use_shortWaveRadOut=use_shortWaveRadOut, energyDynamics=energyDynamicsWalls, radLongCalcMethod=radLongCalcMethod, T_ref=T_ref, calcMethodIn=calcMethodIn, wall_height=room_height, WindowType=Type_Win, redeclare model WindowModel = WindowModel, redeclare model CorrSolarGainWin = CorrSolarGainWin, T0=TWalls_start, wall_length=room_width, withSunblind=use_sunblind, Blinding=1 - ratioSunblind, LimitSolIrr=solIrrThreshold, TOutAirLimit=TOutAirLimit, solar_absorptance=solar_absorptance_OW, surfaceType=DataBase.Surfaces.RoughnessForHT.Brick_RoughPlaster(), calcMethodOut=calcMethodOut) annotation (Placement(transformation( extent={{5.00001,-30},{-5.00001,30}}, rotation=90, origin={18,69})));AixLib.ThermalZones.HighOrder.Components.Walls.Wall ceiling( use_shortWaveRadIn=use_shortWaveRadIn, use_shortWaveRadOut=use_shortWaveRadOut, energyDynamics=energyDynamicsWalls, radLongCalcMethod=radLongCalcMethod, T_ref=T_ref, calcMethodIn=calcMethodIn, wall_length=room_length, wall_height=room_width, WindowType=Type_Win, redeclare model WindowModel = WindowModel, redeclare model CorrSolarGainWin = CorrSolarGainWin, T0=TWalls_start, withSunblind=use_sunblind, Blinding=1 - ratioSunblind, LimitSolIrr=solIrrThreshold, TOutAirLimit=TOutAirLimit, solar_absorptance=solar_absorptance_OW, surfaceType=DataBase.Surfaces.RoughnessForHT.Brick_RoughPlaster(), calcMethodOut=calcMethodOut) annotation (Placement(transformation( extent={{-2,-12},{2,12}}, rotation=270, origin={-42,80})));AixLib.ThermalZones.HighOrder.Components.Walls.Wall floor( use_shortWaveRadIn=use_shortWaveRadIn, use_shortWaveRadOut=use_shortWaveRadOut, outside=false, energyDynamics=energyDynamicsWalls, radLongCalcMethod=radLongCalcMethod, T_ref=T_ref, calcMethodIn=calcMethodIn, wall_length=room_length, wall_height=room_width, WindowType=Type_Win, redeclare model WindowModel = WindowModel, redeclare model CorrSolarGainWin = CorrSolarGainWin, T0=TWalls_start, solar_absorptance=solar_absorptance_OW, withSunblind=use_sunblind, Blinding=1 - ratioSunblind, LimitSolIrr=solIrrThreshold, TOutAirLimit=TOutAirLimit, calcMethodOut=calcMethodOut) annotation (Placement(transformation( extent={{-2.00031,-12},{2.00003,12}}, rotation=90, origin={-42,-68})));Utilities.Interfaces.SolarRad_in SolarRadiationPort[5] "N,E,S,W,Hor" annotation (Placement(transformation(extent={{-120,46},{-100,66}}), iconTransformation(extent={{-120,46},{-100,66}})));

8: Missing documentation, Name 'WindSpeedPort' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: Wind, Speed, Port. Affected line: Modelica.Blocks.Interfaces.RealInput WindSpeedPort annotation (Placement(transformation(extent={{-116,28},{-100,44}}), iconTransformation(extent={{-120,-16},{-100,4}})));

9: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: Utilities.HeatTransfer.SolarRadInRoom solarRadInRoom( final use_dynamicMethod=use_dynamicShortWaveRadMethod, final nWalls=4, final nWin=nWin, final nFloors=1, final nCei=1, final floor_length=room_length, final floor_width=room_height, final staticCoeffTable=coeffTableSolDistrFractions) if use_shortWaveRadIn and nWin > 0 annotation (Placement(transformation(extent={{-50,26},{-30,46}})));

10: Documentation too short, Name 'transShoWaveRadWin' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: trans, Wave. Affected line: Modelica.Blocks.Interfaces.RealOutput transShoWaveRadWin(final quantity="Power", final unit="W") if use_shortWaveRadOut annotation (Placement(transformation( extent={{-10,-10},{10,10}}, rotation=270, origin={60,-110})));

11: Missing documentation, Name 'multiSum' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: multi. Affected line: Modelica.Blocks.Math.MultiSum multiSum(nu=nWin) if use_shortWaveRadOut annotation (Placement(transformation( extent={{2,-2},{-2,2}}, rotation=90, origin={60,-96})));

12: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: protected Utilities.Interfaces.ShortRadSurf shortRadSurf[nWin] if use_shortWaveRadOut annotation (Placement(transformation(extent={{58,-92}, {62,-88}}), iconTransformation(extent={{58,-92}, {62,-88}})));

13: Missing documentation, Name 'usesWindow' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: uses, Window. Affected line: protected parameter Boolean usesWindow[4] = {wallEast.withWindow, wallSouth.withWindow, wallWest.withWindow, wallNorth.withWindow};

14: Missing documentation, Name 'usesWindowInt' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: uses, Window. Affected line: parameter Integer usesWindowInt[4] = {if usesWindow[i] then 1 else 0 for i in 1:size(usesWindow, 1)};


AixLib/ThermalZones/HighOrder/Components/Walls/BaseClasses/ConvNLayerClearanceStar.mo
1: Name 'l' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: l. Affected line: parameter Modelica.Units.SI.Length l "Length" annotation (Dialog(group="Geometry"));

2: Name 'clearance' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: clearance. Affected line: parameter Modelica.Units.SI.Area clearance=0 "Area of clearance" annotation (Dialog(group="Geometry"));

3: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: replaceable parameter AixLib.DataBase.Walls.WallBaseDataDefinition wallType constrainedby AixLib.DataBase.Walls.WallBaseDataDefinition "Type of wall" annotation(Dialog(group = "Structure of wall layers"), choicesAllMatching = true, Placement(transformation(extent={{48,-98},{68,-78}})));

4: Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: parameter AixLib.ThermalZones.HighOrder.Components.Types.CalcMethodRadiativeHeatTransfer radCalcMethod= AixLib.ThermalZones.HighOrder.Components.Types.CalcMethodRadiativeHeatTransfer.No_approx "Calculation method for radiation heat transfer" annotation ( Evaluate=true, Dialog(group = "Radiation", compact=true));

5: Name 'T_ref' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T_ref. Affected line: parameter Modelica.Units.SI.Temperature T_ref= Modelica.Units.Conversions.from_degC(16) "Reference temperature for optional linearization" annotation (Dialog(group="Radiation", enable=radCalcMethod == AixLib.ThermalZones.HighOrder.Components.Types.CalcMethodRadiativeHeatTransfer.Linear_constant_T_ref));

6: Name 'T0' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: T0. Affected line: parameter Modelica.Units.SI.Temperature T0= Modelica.Units.Conversions.from_degC(16) "Initial temperature" annotation (Dialog(group="Thermal"));

7: Missing documentation. Affected line: Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a port_a annotation ( Placement(transformation(extent={{-110,-10},{-90,10}}), iconTransformation(extent={{-110,-10},{-90,10}})));

8: Missing documentation. Affected line: Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b port_b annotation ( Placement(transformation(extent={{90,-10},{110,10}}), iconTransformation( extent={{90,-10},{110,10}})));

9: Missing documentation, Could not extract name from line and check correctness, is your type specification correct (full library path)?. Affected line: AixLib.ThermalZones.HighOrder.Components.Walls.BaseClasses.SimpleNLayer simpleNLayer( final A=A, each final T_start=fill(T0, n), final wallRec=wallType, final energyDynamics=energyDynamics) annotation (Placement(transformation(extent={{-14,-12},{12,12}})));

10: Missing documentation, Name 'port_b1' contains parts with more/less than 3 characters or which are not part of special cases. Affected parts: port_b. Affected line: Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b port_b1 annotation ( Placement(transformation(extent={{-10,88},{10,108}}), iconTransformation( extent={{-12,88},{8,108}})));

11: Missing documentation. Affected line: protected parameter Modelica.Units.SI.Area A=h*l - clearance;