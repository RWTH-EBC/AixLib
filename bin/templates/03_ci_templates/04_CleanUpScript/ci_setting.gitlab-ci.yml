stages:    - check_setting    - build_templates    Test_CI_Setting:    stage: check_setting    before_script:        - source activate python36        - export PYTHONIOENCODING=utf-8    script:        - python bin/CITests/01_CleanUp/setting_check.py --github-private-key $GITHUB_PRIVATE_KEY --github-token $GITHUB_API_TOKEN    only:        variables:        - $CI_COMMIT_MESSAGE  =~ /ci_setting/    except:        refs:            - external_pull_requestsCreate_templates:    stage: build_templates    before_script:        - source activate python36        - export PYTHONIOENCODING=utf-8        - pip install pandas toml mako        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'        - eval $(ssh-agent -s)        - mkdir -p ~/.ssh        - ssh-keyscan github.com >> ~/.ssh/known_hosts        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null        - echo "$GITHUB_PRIVATE_KEY" > ~/.ssh/id_rsa        - chmod 600 ~/.ssh/id_rsa        - git config --global user.name "$GITLAB_USER_NAME"        - git config --global user.email "$GITLAB_USER_EMAIL"    script:        - mkdir build_template && cd build_template        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:$Github_Repository.git        - cd $CI_PROJECT_NAME        - python bin/CITests/07_ci_templates/ci_templates.py --setting        - message="Automatic push of CI with new created CI templates. Please pull the new files before push again. [skip ci]"        - git add .        - git commit -m "$message"        - git push git@github.com:$Github_Repository.git    only:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_setting/    except:        refs:            - external_pull_requests    artifacts:        when: always        paths:            - build_template/$CI_PROJECT_NAME/.gitlab-ci.yml            - build_template/$CI_PROJECT_NAME/bin/07_templates/03_ci_templates/*            