stages:    - check    - create_whitelist    .check_model_job:    stage: check    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - pip install natsort        - export PYTHONIOENCODING=utf-8 # just in case    script:        - python bin/CITests/02_UnitTests/CheckPackages/validatetest.py  --single-package "${lib_package}" --library AixLib -DS 2022 --wh-library IBPSA --filterwhitelist     artifacts:        when: on_failure        paths:            - AixLib/AixLib.${lib_package}-log.txt            - AixLib/AixLib.${lib_package}-errorlog.txt        expire_in: 7 day     only:        - external_pull_requests    retry:        max: 2        when: runner_system_failure      except:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./            - $CI_COMMIT_MESSAGE  =~ /ci_show_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_regression_test/            - $CI_COMMIT_MESSAGE  =~ /ci_check/            - $CI_COMMIT_MESSAGE  =~ /ci_simulate/            - $CI_COMMIT_MESSAGE  =~ /ci_create_html_whitelist/            - $CI_COMMIT_MESSAGE  =~ /ci_html/            - $CI_COMMIT_MESSAGE  =~ /ci_setting/            Check_AixLib_Airflow:    variables:        lib_package: Airflow    extends: .check_model_jobCheck_AixLib_BoundaryConditions:    variables:        lib_package: BoundaryConditions    extends: .check_model_jobCheck_AixLib_Controls:    variables:        lib_package: Controls    extends: .check_model_jobCheck_AixLib_Electrical:    variables:        lib_package: Electrical    extends: .check_model_jobCheck_AixLib_Fluid:    variables:        lib_package: Fluid    extends: .check_model_jobCheck_AixLib_Media:    variables:        lib_package: Media    extends: .check_model_jobCheck_AixLib_Systems:    variables:        lib_package: Systems    extends: .check_model_jobCheck_AixLib_ThermalZones:    variables:        lib_package: ThermalZones    extends: .check_model_jobCheck_AixLib_Utilities:    variables:        lib_package: Utilities    extends: .check_model_job.check_changed_models_job:    stage: check    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - pip install natsort        - export PYTHONIOENCODING=utf-8 # just in case    script:        - git diff --raw --diff-filter=AMT HEAD^1 >  bin/Configfiles/ci_changed_model_list.txt        - python bin/CITests/02_UnitTests/CheckPackages/validatetest.py --single-package "${lib_package}" --library AixLib -DS 2022 -CM     artifacts:        when: on_failure        paths:            - AixLib/AixLib.${lib_package}-log.txt            - AixLib/AixLib.${lib_package}-errorlog.txt        expire_in: 7 day    except:        refs:            - external_pull_requests            - IBPSA_Merge        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./            - $CI_COMMIT_MESSAGE  =~ /ci_show_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_regression_test/            - $CI_COMMIT_MESSAGE  =~ /ci_check/            - $CI_COMMIT_MESSAGE  =~ /ci_simulate/            - $CI_COMMIT_MESSAGE  =~ /ci_create_html_whitelist/            - $CI_COMMIT_MESSAGE  =~ /ci_html/            - $CI_COMMIT_MESSAGE  =~ /ci_setting/    retry:        max: 2        when: runner_system_failureCheck_AixLib_Airflow_changed_models:    variables:        lib_package: Airflow    only:        changes:            - AixLib/Airflow/**/*    extends: .check_changed_models_jobCheck_AixLib_BoundaryConditions_changed_models:    variables:        lib_package: BoundaryConditions    only:        changes:            - AixLib/BoundaryConditions/**/*    extends: .check_changed_models_jobCheck_AixLib_Controls_changed_models:    variables:        lib_package: Controls    only:        changes:            - AixLib/Controls/**/*    extends: .check_changed_models_jobCheck_AixLib_Electrical_changed_models:    variables:        lib_package: Electrical    only:        changes:            - AixLib/Electrical/**/*    extends: .check_changed_models_jobCheck_AixLib_Fluid_changed_models:    variables:        lib_package: Fluid    only:        changes:            - AixLib/Fluid/**/*    extends: .check_changed_models_jobCheck_AixLib_Media_changed_models:    variables:        lib_package: Media    only:        changes:            - AixLib/Media/**/*    extends: .check_changed_models_jobCheck_AixLib_Systems_changed_models:    variables:        lib_package: Systems    only:        changes:            - AixLib/Systems/**/*    extends: .check_changed_models_jobCheck_AixLib_ThermalZones_changed_models:    variables:        lib_package: ThermalZones    only:        changes:            - AixLib/ThermalZones/**/*    extends: .check_changed_models_jobCheck_AixLib_Utilities_changed_models:    variables:        lib_package: Utilities    only:        changes:            - AixLib/Utilities/**/*    extends: .check_changed_models_job.CI_check_model_job:    stage: check    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - pip install natsort        - export PYTHONIOENCODING=utf-8 # just in case    script:        - python bin/CITests/02_UnitTests/CheckPackages/validatetest.py  --single-package "${lib_package}" --library AixLib -DS 2022 --wh-library IBPSA --filterwhitelist     artifacts:        when: on_failure        paths:            - AixLib/AixLib.${lib_package}-log.txt            - AixLib/AixLib.${lib_package}-errorlog.txt        expire_in: 7 day     only:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_check/    except:        refs:            - external_pull_requests    retry:        max: 2        when: runner_system_failure                  CI_Check_AixLib_Airflow:    variables:        lib_package: Airflow    extends: .CI_check_model_jobCI_Check_AixLib_BoundaryConditions:    variables:        lib_package: BoundaryConditions    extends: .CI_check_model_jobCI_Check_AixLib_Controls:    variables:        lib_package: Controls    extends: .CI_check_model_jobCI_Check_AixLib_Electrical:    variables:        lib_package: Electrical    extends: .CI_check_model_jobCI_Check_AixLib_Fluid:    variables:        lib_package: Fluid    extends: .CI_check_model_jobCI_Check_AixLib_Media:    variables:        lib_package: Media    extends: .CI_check_model_jobCI_Check_AixLib_Systems:    variables:        lib_package: Systems    extends: .CI_check_model_jobCI_Check_AixLib_ThermalZones:    variables:        lib_package: ThermalZones    extends: .CI_check_model_jobCI_Check_AixLib_Utilities:    variables:        lib_package: Utilities    extends: .CI_check_model_jobwhitelist_job:    stage: create_whitelist    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - pip install natsort        - export PYTHONIOENCODING=utf-8         - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'        - eval $(ssh-agent -s)        - mkdir -p ~/.ssh        - ssh-keyscan github.com >> ~/.ssh/known_hosts        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null        - echo "${GITHUB_PRIVATE_KEY}" > ~/.ssh/id_rsa        - chmod 600 ~/.ssh/id_rsa        - git config --global user.name "${GITLAB_USER_NAME}"        - git config --global user.email "${GITLAB_USER_EMAIL}"    script:        - mkdir whitelist && cd whitelist        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:${Github_Repository}.git        - cd ${CI_PROJECT_NAME}        - echo "FAIL" > bin/Configfiles/exit.sh        - python bin/CITests/02_UnitTests/CheckPackages/validatetest.py -DS 2022 --repo-dir IBPSA --git-url https://github.com/ibpsa/modelica-ibpsa.git  --library AixLib --wh-library IBPSA --whitelist    after_script:        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - export PYTHONIOENCODING=utf-8 # just in case        - cd whitelist && cd ${CI_PROJECT_NAME}        - if cat bin/Configfiles/exit.sh | grep "FAIL"; then            message="Automatic push of CI - Update model_whitelist. Please pull the new files before push again. [skip ci]" ;            git add bin/ci_whitelist/model_whitelist.txt ;            git commit -m "$message" ;            git push git@github.com:${Github_Repository}.git ;            GREEN='\033[0;32m' ;            NC='\033[0m' ;            echo  -e "$GREEN New html whitelist files were pushed to this branch.$NC" ;            exit 0;          else             echo 'successful' > bin/Configfiles/exit.sh ;            echo  -e "$GREEN Whitelist is already up to date. Please delete the version number in file bin/ci_whitelist/model_whitelist.txt, if you want to recreate the whitelist.$NC" ;            exit 0 ;          fi    artifacts:        paths:            - whitelist/${CI_PROJECT_NAME}/bin/ci_whitelist/model_whitelist.txt        expire_in: 7 day     only:        variables:            - $CI_COMMIT_MESSAGE =~ /ci_create_whitelist/    except:        refs:            - external_pull_requests