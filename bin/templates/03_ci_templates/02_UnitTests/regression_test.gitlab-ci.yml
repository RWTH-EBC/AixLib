stages:    - RegressionTest    - Ref_Check    - Update_Ref    - plot_ref    - prepare.CI_Regressiontest:    stage: RegressionTest    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - export PYTHONIOENCODING=utf-8 # just in case        - echo 'FAIL' > bin/Configfiles/exit.sh    script:        - cd AixLib && python ../bin/CITests/02_UnitTests/reference_check.py -n 2 --tool dymola --single-package "${lib_package}" --library AixLib --batch -DS 2022        - cd .. && echo 'successful' > bin/Configfiles/exit.sh    after_script:        - if cat bin/Configfiles/exit.sh | grep "FAIL"; then            export PIP_CACHE_DIR="/opt/cache/pip" ;            source activate myenv ;            pip install pandas mako matplot ;            python bin/CITests/05_Converter/google_charts.py --line-html --error --funnel-comp --single-package ${lib_package} ;            mkdir -p data ;            cp -r AixLib/simulator-dymola.log data ;            cp -r AixLib/unitTests-dymola.log data ;            cp -r AixLib/funnel_comp data ;          else            echo "Test was succesful!" ;          fi    artifacts:        when: on_failure        paths:          - data          - bin/templates/02_charts/${lib_package}        expire_in: 7 day    only:        refs:            - external_pull_requests        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_regression_test/    retry:        max: 2        when: runner_system_failureCI_Regressiontest_AixLib_Airflow:    variables:        lib_package: AixLib.Airflow    extends: .CI_RegressiontestCI_Regressiontest_AixLib_BoundaryConditions:    variables:        lib_package: AixLib.BoundaryConditions    extends: .CI_RegressiontestCI_Regressiontest_AixLib_Controls:    variables:        lib_package: AixLib.Controls    extends: .CI_RegressiontestCI_Regressiontest_AixLib_Electrical:    variables:        lib_package: AixLib.Electrical    extends: .CI_RegressiontestCI_Regressiontest_AixLib_Fluid:    variables:        lib_package: AixLib.Fluid    extends: .CI_RegressiontestCI_Regressiontest_AixLib_Media:    variables:        lib_package: AixLib.Media    extends: .CI_RegressiontestCI_Regressiontest_AixLib_Systems:    variables:        lib_package: AixLib.Systems    extends: .CI_RegressiontestCI_Regressiontest_AixLib_ThermalZones:    variables:        lib_package: AixLib.ThermalZones    extends: .CI_RegressiontestCI_Regressiontest_AixLib_Utilities:    variables:        lib_package: AixLib.Utilities    extends: .CI_RegressiontestCI_create_plots:    stage: prepare    before_script:        - source activate myenv        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - pip install --upgrade pip &&  apt-get update -y && apt-get install zip unzip -y        - pip install requests        - pip install pandas mako matplot        - export PYTHONIOENCODING=utf-8 # just in case    script:        - mkdir -p $CI_COMMIT_REF_NAME/plots        - python bin/CITests/05_Converter/google_charts.py  --create-layout --library AixLib --single-package AixLib        - cp -r bin/templates/02_charts/* $CI_COMMIT_REF_NAME/plots        - python bin/CITests/04_api_script/api_github.py  --working-branch $CI_COMMIT_REF_NAME --github-repo ${Github_Repository} --gitlab-page ${GITLAB_Page} --github-token ${GITHUB_API_TOKEN} --post-pr-comment --prepare-plot    artifacts:        paths:         - $CI_COMMIT_REF_NAME/plots    only:        refs:            - external_pull_requests        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_regression_test/    when: on_failure    needs:    - job: CI_Regressiontest_AixLib_Airflow      artifacts: true    - job: CI_Regressiontest_AixLib_BoundaryConditions      artifacts: true    - job: CI_Regressiontest_AixLib_Controls      artifacts: true    - job: CI_Regressiontest_AixLib_Electrical      artifacts: true    - job: CI_Regressiontest_AixLib_Fluid      artifacts: true    - job: CI_Regressiontest_AixLib_Media      artifacts: true    - job: CI_Regressiontest_AixLib_Systems      artifacts: true    - job: CI_Regressiontest_AixLib_ThermalZones      artifacts: true    - job: CI_Regressiontest_AixLib_Utilities      artifacts: true.Regressiontest_job:    stage: RegressionTest    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - export PYTHONIOENCODING=utf-8 # just in case        - echo 'FAIL' > bin/Configfiles/exit.sh    script:        - cd AixLib && python ../bin/CITests/02_UnitTests/reference_check.py -n 2 --tool dymola --single-package "${lib_package}" --library AixLib --batch -DS 2022        - cd .. && echo 'successful' > bin/Configfiles/exit.sh    after_script:        - if cat bin/Configfiles/exit.sh | grep "FAIL"; then            export PIP_CACHE_DIR="/opt/cache/pip" ;            source activate myenv ;            pip install pandas mako matplot ;            python bin/CITests/05_Converter/google_charts.py --line-html --error --funnel-comp --single-package ${lib_package} ;            mkdir -p data ;            cp -r AixLib/simulator-dymola.log data ;            cp -r AixLib/unitTests-dymola.log data ;            cp -r AixLib/funnel_comp data ;          else            echo "Test was succesful!" ;          fi    artifacts:        when: on_failure        paths:          - data          - bin/templates/02_charts/${lib_package}        expire_in: 7 day    only:        refs:            - external_pull_requests    except:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./            - $CI_COMMIT_MESSAGE  =~ /ci_show_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_regression_test/            - $CI_COMMIT_MESSAGE  =~ /ci_check/            - $CI_COMMIT_MESSAGE  =~ /ci_simulate/            - $CI_COMMIT_MESSAGE  =~ /ci_create_html_whitelist/            - $CI_COMMIT_MESSAGE  =~ /ci_html/            - $CI_COMMIT_MESSAGE  =~ /ci_setting/    retry:        max: 2        when: runner_system_failureRegressiontest_AixLib_Airflow:    variables:        lib_package: AixLib.Airflow    extends: .Regressiontest_jobRegressiontest_AixLib_BoundaryConditions:    variables:        lib_package: AixLib.BoundaryConditions    extends: .Regressiontest_jobRegressiontest_AixLib_Controls:    variables:        lib_package: AixLib.Controls    extends: .Regressiontest_jobRegressiontest_AixLib_Electrical:    variables:        lib_package: AixLib.Electrical    extends: .Regressiontest_jobRegressiontest_AixLib_Fluid:    variables:        lib_package: AixLib.Fluid    extends: .Regressiontest_jobRegressiontest_AixLib_Media:    variables:        lib_package: AixLib.Media    extends: .Regressiontest_jobRegressiontest_AixLib_Systems:    variables:        lib_package: AixLib.Systems    extends: .Regressiontest_jobRegressiontest_AixLib_ThermalZones:    variables:        lib_package: AixLib.ThermalZones    extends: .Regressiontest_jobRegressiontest_AixLib_Utilities:    variables:        lib_package: AixLib.Utilities    extends: .Regressiontest_jobRegression_overall_coverage:    stage: RegressionTest    before_script:        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - export PYTHONIOENCODING=utf-8 # just in case    script:        - cd AixLib && python ../bin/CITests/02_UnitTests/reference_check.py --coverage-only    artifacts:        when: on_failure        paths:            - AixLib/simulator-dymola.log            - AixLib/unitTests-dymola.log        expire_in: 7 day    only:        refs:            - external_pull_requests    except:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./            - $CI_COMMIT_MESSAGE  =~ /ci_show_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_regression_test/            - $CI_COMMIT_MESSAGE  =~ /ci_check/            - $CI_COMMIT_MESSAGE  =~ /ci_simulate/            - $CI_COMMIT_MESSAGE  =~ /ci_create_html_whitelist/            - $CI_COMMIT_MESSAGE  =~ /ci_html/            - $CI_COMMIT_MESSAGE  =~ /ci_setting/    retry:        max: 2        when: runner_system_failureprepare_create_plots:    stage: prepare    before_script:        - source activate myenv        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - pip install --upgrade pip &&  apt-get update -y && apt-get install zip unzip -y        - pip install requests        - pip install pandas mako matplot        - export PYTHONIOENCODING=utf-8 # just in case    script:        - mkdir -p $CI_COMMIT_REF_NAME/plots        - python bin/CITests/05_Converter/google_charts.py  --create-layout --library AixLib --single-package AixLib        - cp -r bin/templates/02_charts/* $CI_COMMIT_REF_NAME/plots        - python bin/CITests/04_api_script/api_github.py  --working-branch $CI_COMMIT_REF_NAME --github-repo ${Github_Repository} --gitlab-page ${GITLAB_Page} --github-token ${GITHUB_API_TOKEN} --post-pr-comment --prepare-plot    artifacts:        paths:         - $CI_COMMIT_REF_NAME/plots    only:        refs:            - external_pull_requests    except:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./            - $CI_COMMIT_MESSAGE  =~ /ci_show_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_regression_test/            - $CI_COMMIT_MESSAGE  =~ /ci_check/            - $CI_COMMIT_MESSAGE  =~ /ci_simulate/            - $CI_COMMIT_MESSAGE  =~ /ci_create_html_whitelist/            - $CI_COMMIT_MESSAGE  =~ /ci_html/            - $CI_COMMIT_MESSAGE  =~ /ci_setting/    when: on_failure    needs:    - job: Regressiontest_AixLib_Airflow      artifacts: true    - job: Regressiontest_AixLib_BoundaryConditions      artifacts: true    - job: Regressiontest_AixLib_Controls      artifacts: true    - job: Regressiontest_AixLib_Electrical      artifacts: true    - job: Regressiontest_AixLib_Fluid      artifacts: true    - job: Regressiontest_AixLib_Media      artifacts: true    - job: Regressiontest_AixLib_Systems      artifacts: true    - job: Regressiontest_AixLib_ThermalZones      artifacts: true    - job: Regressiontest_AixLib_Utilities      artifacts: true.Regressiontest_changed_Job:    stage: RegressionTest    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - export PYTHONIOENCODING=utf-8 # just in case        - echo 'FAIL' > bin/Configfiles/exit.sh    script:        - git diff --raw --diff-filter=AMT HEAD^1 > bin/Configfiles/ci_changed_model_list.txt        - cd AixLib && python ../bin/CITests/02_UnitTests/reference_check.py -n 2 --tool dymola --single-package ${lib_package} --library AixLib --batch -DS 2022 -n 2 --modified-model        - cd .. && echo 'successful' > bin/Configfiles/exit.sh    after_script:        - if cat bin/Configfiles/exit.sh | grep "FAIL"; then            export PIP_CACHE_DIR="/opt/cache/pip";            source activate myenv;            pip install pandas mako matplot;            python bin/CITests/05_Converter/google_charts.py --line-html --error --funnel-comp --single-package ${lib_package};            mkdir -p data ;            cp -r AixLib/simulator-dymola.log data ;            cp -r AixLib/unitTests-dymola.log data ;            cp -r AixLib/funnel_comp data ;          else            echo "Test was succesful!";          fi    artifacts:        when: on_failure        paths:            - data            - bin/templates/02_charts/${lib_package}        expire_in: 7 day    except:        refs:            - external_pull_requests            - IBPSA_Merge        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./            - $CI_COMMIT_MESSAGE  =~ /ci_show_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_regression_test/            - $CI_COMMIT_MESSAGE  =~ /ci_check/            - $CI_COMMIT_MESSAGE  =~ /ci_simulate/            - $CI_COMMIT_MESSAGE  =~ /ci_create_html_whitelist/            - $CI_COMMIT_MESSAGE  =~ /ci_html/            - $CI_COMMIT_MESSAGE  =~ /ci_setting/    only:            changes:            - AixLib/**/*    retry:        max: 2        when: runner_system_failureChanged_Regressiontest_AixLib_Airflow:    variables:        lib_package: AixLib.Airflow    extends: .Regressiontest_changed_JobChanged_Regressiontest_AixLib_BoundaryConditions:    variables:        lib_package: AixLib.BoundaryConditions    extends: .Regressiontest_changed_JobChanged_Regressiontest_AixLib_Controls:    variables:        lib_package: AixLib.Controls    extends: .Regressiontest_changed_JobChanged_Regressiontest_AixLib_Electrical:    variables:        lib_package: AixLib.Electrical    extends: .Regressiontest_changed_JobChanged_Regressiontest_AixLib_Fluid:    variables:        lib_package: AixLib.Fluid    extends: .Regressiontest_changed_JobChanged_Regressiontest_AixLib_Media:    variables:        lib_package: AixLib.Media    extends: .Regressiontest_changed_JobChanged_Regressiontest_AixLib_Systems:    variables:        lib_package: AixLib.Systems    extends: .Regressiontest_changed_JobChanged_Regressiontest_AixLib_ThermalZones:    variables:        lib_package: AixLib.ThermalZones    extends: .Regressiontest_changed_JobChanged_Regressiontest_AixLib_Utilities:    variables:        lib_package: AixLib.Utilities    extends: .Regressiontest_changed_JobChanged_create_plots:    stage: prepare    before_script:        - source activate myenv        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - pip install --upgrade pip &&  apt-get update -y && apt-get install zip unzip -y        - pip install requests        - pip install pandas mako matplot        - export PYTHONIOENCODING=utf-8 # just in case    script:        - mkdir -p $CI_COMMIT_REF_NAME/plots        - python bin/CITests/05_Converter/google_charts.py  --create-layout --library AixLib --single-package AixLib        - cp -r bin/templates/02_charts/* $CI_COMMIT_REF_NAME/plots            artifacts:        paths:         - $CI_COMMIT_REF_NAME/plots    except:        refs:            - external_pull_requests            - IBPSA_Merge        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./            - $CI_COMMIT_MESSAGE  =~ /ci_show_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_regression_test/            - $CI_COMMIT_MESSAGE  =~ /ci_check/            - $CI_COMMIT_MESSAGE  =~ /ci_simulate/            - $CI_COMMIT_MESSAGE  =~ /ci_create_html_whitelist/            - $CI_COMMIT_MESSAGE  =~ /ci_html/            - $CI_COMMIT_MESSAGE  =~ /ci_setting/    only:            changes:            - AixLib/**/*    retry:        max: 2        when: runner_system_failure    when: on_failure    needs:    - job: Changed_Regressiontest_AixLib_Airflow      artifacts: true    - job: Changed_Regressiontest_AixLib_BoundaryConditions      artifacts: true    - job: Changed_Regressiontest_AixLib_Controls      artifacts: true    - job: Changed_Regressiontest_AixLib_Electrical      artifacts: true    - job: Changed_Regressiontest_AixLib_Fluid      artifacts: true    - job: Changed_Regressiontest_AixLib_Media      artifacts: true    - job: Changed_Regressiontest_AixLib_Systems      artifacts: true    - job: Changed_Regressiontest_AixLib_ThermalZones      artifacts: true    - job: Changed_Regressiontest_AixLib_Utilities      artifacts: trueRegressionTest_Check_References:    stage: Ref_Check    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - export PYTHONIOENCODING=utf-8 # just in case        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'        - eval $(ssh-agent -s)        - mkdir -p ~/.ssh        - ssh-keyscan github.com >> ~/.ssh/known_hosts        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null        - echo "${GITHUB_PRIVATE_KEY}" > ~/.ssh/id_rsa        - chmod 600 ~/.ssh/id_rsa        - git config --global user.name "${GITLAB_USER_NAME}"        - git config --global user.email "${GITLAB_USER_EMAIL}"    script:        - mkdir CorrectedVersion && cd CorrectedVersion        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:${Github_Repository}.git        - cd ${CI_PROJECT_NAME}        - echo "FAIL" > bin/Configfiles/exit.sh        - cd AixLib && python ../bin/CITests/02_UnitTests/reference_check.py --create-ref -n 2 < ../bin/Configfiles/EOF.sh    after_script:        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - export PYTHONIOENCODING=utf-8 # just in case        - cd CorrectedVersion && cd ${CI_PROJECT_NAME}        - git ls-files --others --exclude-standard        - if cat bin/Configfiles/exit.sh | grep "FAIL"; then            pushmodel=$(git ls-files --others --exclude-standard) ;            echo $pushmodel ;            (git ls-files --others --exclude-standard) > bin/Configfiles/ci_new_created_reference.txt ;            python bin/CITests/06_deploy/deploy_artifacts.py --library AixLib --ref --new-ref;            message="Automatic push of CI with new regression reference files.Please pull the new files before push again. Plottet Results ${GITLAB_Page}/$CI_COMMIT_REF_NAME/plots/ [skip ci]" ;            git add $pushmodel ;            git commit -m "$message";            git push git@github.com:${Github_Repository}.git ;            GREEN='\033[0;32m' ;            NC='\033[0m' ;            echo  -e "$GREEN New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit. $NC " ;            pip install pandas mako matplot;            python bin/CITests/05_Converter/google_charts.py --line-html --new-ref --single-package AixLib ;            cd .. ;             cd .. ;            mkdir -p $CI_COMMIT_REF_NAME/plots ;            mkdir -p data ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/AixLib/simulator-dymola.log data ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/AixLib/unitTests-dymola.log data ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/AixLib/funnel_comp data ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/Referencefiles data ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/bin/templates/02_charts/* $CI_COMMIT_REF_NAME/plots ;            exit 1 ;          else            echo 'successful' > bin/Configfiles/exit.sh ;            exit 0 ;          fi    artifacts:        when: on_failure        paths:            - data            - $CI_COMMIT_REF_NAME/plots        expire_in: 7 day    except:        refs:            - IBPSA_Merge        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_dif_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_correct_html/            - $CI_COMMIT_MESSAGE  =~ /ci_create_whitelist/            - $CI_COMMIT_MESSAGE  =~ /Automatic push of CI with new regression reference files. Please pull the new files before push again./            - $CI_COMMIT_MESSAGE  =~ /New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit./            - $CI_COMMIT_MESSAGE  =~ /ci_show_ref/            - $CI_COMMIT_MESSAGE  =~ /ci_regression_test/            - $CI_COMMIT_MESSAGE  =~ /ci_check/            - $CI_COMMIT_MESSAGE  =~ /ci_simulate/            - $CI_COMMIT_MESSAGE  =~ /ci_create_html_whitelist/            - $CI_COMMIT_MESSAGE  =~ /ci_html/            - $CI_COMMIT_MESSAGE  =~ /ci_setting/    only:        - external_pull_requestsUpdate_Regression_Results:    stage: Update_Ref    before_script:        - Xvfb :77 -extension RANDR -extension GLX & export DISPLAY=:77.0 &&        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - export PYTHONIOENCODING=utf-8 # just in case        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'        - eval $(ssh-agent -s)        - mkdir -p ~/.ssh        - ssh-keyscan github.com >> ~/.ssh/known_hosts        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null        - echo "${GITHUB_PRIVATE_KEY}" > ~/.ssh/id_rsa        - chmod 600 ~/.ssh/id_rsa        - git config --global user.name "${GITLAB_USER_NAME}"        - git config --global user.email "${GITLAB_USER_EMAIL}"            script:        - mkdir CorrectedVersion && cd CorrectedVersion        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:${Github_Repository}.git        - cd ${CI_PROJECT_NAME}        - echo "FAIL" > bin/Configfiles/exit.sh        - cd AixLib && python ../bin/CITests/02_UnitTests/reference_check.py --update-ref --single-package AixLib -n 2 < ../bin/Configfiles/EOF.sh    after_script:        - export PIP_CACHE_DIR="/opt/cache/pip"        - source activate myenv        - export PYTHONIOENCODING=utf-8 # just in case        - cd CorrectedVersion && cd ${CI_PROJECT_NAME}        - git ls-files --others --exclude-standard        - if cat bin/Configfiles/exit.sh | grep "FAIL"; then            pushmodel=$(git ls-files --others --exclude-standard) ;            echo $pushmodel ;            (git ls-files --others --exclude-standard) > bin/Configfiles/ci_new_created_reference.txt ;            python bin/CITests/06_deploy/deploy_artifacts.py --library AixLib --ref --updated-ref;            message="Automatic push of CI with updated or new regression reference files.Please pull the new files before push again. Plottet Results ${GITLAB_Page}/$CI_COMMIT_REF_NAME/plots/ [skip ci]" ;            git add AixLib/Resources/ReferenceResults/Dymola/* ;            git commit -m "$message";            git push git@github.com:${Github_Repository}.git ;            GREEN='\033[0;32m' ;            NC='\033[0m' ;            echo  -e "$GREEN New or updated reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit. $NC " ;            pip install pandas mako matplot;            python bin/CITests/05_Converter/google_charts.py --line-html --update-ref --single-package AixLib ;            cd .. ;             cd .. ;            mkdir -p $CI_COMMIT_REF_NAME/plots ;            mkdir -p data ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/AixLib/simulator-dymola.log data ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/AixLib/unitTests-dymola.log data ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/AixLib/funnel_comp data ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/Referencefiles data ;            cp -r CorrectedVersion/${CI_PROJECT_NAME}/bin/templates/02_charts/* $CI_COMMIT_REF_NAME/plots ;            exit 0 ;          else            echo 'successful' > bin/Configfiles/exit.sh ;            exit 0 ;          fi    artifacts:        when: always        paths:            - data            - $CI_COMMIT_REF_NAME/plots        expire_in: 7 day    retry:        max: 2        when: runner_system_failure    only:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_update_ref/    except:        refs:            - external_pull_requests    plot_reference_results:    stage: plot_ref    before_script:        - source activate myenv        - pip install --upgrade pip &&  apt-get update -y && apt-get install zip unzip -y        - pip install requests        - pip install pandas mako matplot        - export PYTHONIOENCODING=utf-8 # just in case    script:        - mkdir -p $CI_COMMIT_REF_NAME/plots        - python bin/CITests/05_Converter/google_charts.py --line-html --show-ref --single-package AixLib --library AixLib         - cp -r bin/templates/02_charts/* $CI_COMMIT_REF_NAME/plots         - python bin/CITests/04_api_script/api_github.py --working-branch $CI_COMMIT_REF_NAME --github-repo ${Github_Repository} --gitlab-page ${GITLAB_Page} --github-token ${GITHUB_API_TOKEN} --post-pr-comment --show-plot     artifacts:        when: always        paths:            - $CI_COMMIT_REF_NAME/plots    only:        variables:            - $CI_COMMIT_MESSAGE  =~ /ci_show_ref/         refs:            - external_pull_requests