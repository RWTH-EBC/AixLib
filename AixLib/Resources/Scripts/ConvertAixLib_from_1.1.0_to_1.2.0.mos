// Generated by conversion of AixLib
convertElement("AixLib.Airflow.AirHandlingUnit.Examples.AHU","tempAddInRoom.freqHz","tempAddInRoom.f");
convertElement("AixLib.Airflow.AirHandlingUnit.Examples.AHU","tempOutside.freqHz","tempOutside.f");
convertElement("AixLib.Airflow.AirHandlingUnit.Examples.AHU","waterLoadOutside.freqHz","waterLoadOutside.f");
convertElement("AixLib.Airflow.FacadeVentilationUnit.Examples.FacadeVentilationUnit","outdoorTemperature.freqHz","outdoorTemperature.f");
convertElement("AixLib.Airflow.FacadeVentilationUnit.Examples.FacadeVentilationUnit","roomSetTemperature.freqHz","roomSetTemperature.f");
convertElement("AixLib.Airflow.FacadeVentilationUnit.Examples.FacadeVentilationUnit","roomTemperature.freqHz","roomTemperature.f");
convertElement("AixLib.BoundaryConditions.InternalGains.Examples.InternalGains.HumansSenTDep","sine.freqHz","sine.f");
convertElement("AixLib.BoundaryConditions.InternalGains.Examples.InternalGains.HumansSenTIndep","sine.freqHz","sine.f");
convertElement("AixLib.BoundaryConditions.InternalGains.Examples.InternalGains.HumansTotTDep","sine.freqHz","sine.f");
convertElement("AixLib.BoundaryConditions.InternalGains.Examples.InternalGains.BaseClasses.Humans","sine.freqHz","sine.f");
convertElement("AixLib.Controls.HeatPump.Examples.HeatPumpController","T_meas.freqHz","T_meas.f");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.CHPCombustionMixtureGasNasa","data.R","data.R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.CHPCombustionMixtureGasNasa.BaseProperties","R","R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.CHPCombustionMixtureGasNasa.gasConstant","R","R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.CHPCoolantPropyleneGlycolWater.BaseProperties","R","R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.CHPFlueGasLambdaOnePlus","data.R","data.R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.LiquidFuel_Diesel","data.R","data.R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.LiquidFuel_LPG","data.R","data.R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.LiquidFuel_Petrol","data.R","data.R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.NaturalGasMixture_GeneralType","data.R","data.R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.NaturalGasMixture_TypeAachen","data.R","data.R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.NaturalGasMixture_TypeH","data.R","data.R_s");
convertElement("AixLib.DataBase.CHP.ModularCHPEngineMedia.NaturalGasMixture_TypeL","data.R","data.R_s");
convertElement("AixLib.Fluid.Actuators.Valves.ExpansionValves.Examples.ExpansionValveMassFlowRate","valOpe.freqHz","valOpe.f");
convertElement("AixLib.Fluid.Actuators.Valves.ExpansionValves.Examples.ExpansionValvePressureDifference","valOpe.freqHz","valOpe.f");
convertElement("AixLib.Fluid.Actuators.Valves.ExpansionValves.Examples.ModularExpansionValvesMassFlowRate","valOpe.freqHz","valOpe.f");
convertElement("AixLib.Fluid.Actuators.Valves.ExpansionValves.Examples.ModularExpansionValvesPressureDifference","valOpe.freqHz","valOpe.f");
convertElement("AixLib.Fluid.BoilerCHP.Examples.BoilerSystem","sine.freqHz","sine.f");
convertElement("AixLib.Fluid.Chillers.Examples.Chiller","sine.freqHz","sine.f");
convertElement("AixLib.Fluid.DistrictHeatingCooling.Demands.Examples.OpenLoopHeatPumpCarnot","sine.freqHz","sine.f");
convertElement("AixLib.Fluid.DistrictHeatingCooling.Demands.Examples.OpenLoopVarTSupplyDp","sine.freqHz","sine.f");
convertElement("AixLib.Fluid.DistrictHeatingCooling.Demands.Examples.OpenLoopVarTSupplyDpBypass","sine.freqHz","sine.f");
convertElement("AixLib.Fluid.DistrictHeatingCooling.Demands.Examples.OpenLoopVarTSupplyDpFixedTempDifferenceBypass","sine.freqHz","sine.f");
convertElement("AixLib.Fluid.HeatPumps.Examples.HeatPump","sine.freqHz","sine.f");
convertElement("AixLib.Fluid.MassExchangers.MembraneBasedEnthalpyExchangers.Examples.Test_EnthalpyExchanger","sine.freqHz","sine.f");
convertElement("AixLib.Fluid.MassExchangers.MembraneBasedEnthalpyExchangers.Examples.Test_EnthalpyExchanger","sine1.freqHz","sine1.f");
convertElement("AixLib.Fluid.Movers.Compressors.Examples.ModularRotaryCompressor","rotSpe.freqHz","rotSpe.f");
convertElement("AixLib.Fluid.Movers.Compressors.Examples.ModularRotaryCompressor","valOpe.freqHz","valOpe.f");
convertElement("AixLib.Fluid.Movers.Compressors.Examples.RotaryCompressor","rotSpe.freqHz","rotSpe.f");
convertElement("AixLib.Fluid.Movers.Compressors.Examples.RotaryCompressor","valOpe.freqHz","valOpe.f");
convertElement("AixLib.Fluid.Movers.Compressors.Examples.RotaryCompressorPressureHeatLosses","rotSpe.freqHz","rotSpe.f");
convertElement("AixLib.Fluid.Movers.Compressors.Examples.RotaryCompressorPressureHeatLosses","valOpe.freqHz","valOpe.f");
convertElement("AixLib.Fluid.Movers.Compressors.Examples.RotaryCompressorPressureLosses","rotSpe.freqHz","rotSpe.f");
convertElement("AixLib.Fluid.Movers.Compressors.Examples.RotaryCompressorPressureLosses","valOpe.freqHz","valOpe.f");
convertElement("AixLib.Fluid.Movers.Compressors.Validation.ModularInactiveCompressors","rotSpe.freqHz","rotSpe.f");
convertElement("AixLib.Fluid.Movers.Compressors.Validation.ModularInactiveCompressors","valOpe.freqHz","valOpe.f");
convertElement("AixLib.Media.AirIncompressible.BaseProperties","R","R_s");
convertElement("AixLib.Media.AirIncompressible.gasConstant","R","R_s");
convertElement("AixLib.Media.Refrigerants.Interfaces.PartialHybridTwoPhaseMediumFormula.BaseProperties","R","R_s");
convertElement("AixLib.ThermalZones.HighOrder.Components.Examples.DryAir.DryAir_test","sine.freqHz","sine.f");
convertElement("AixLib.ThermalZones.HighOrder.Components.Examples.DryAir.DryAir_test","sine1.freqHz","sine1.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Windows.Validation.SkylineShadowingTest","solAziSine.freqHz","solAziSine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Windows.Validation.SelfShadowing.SelfShadowingTestAbove","altSine.freqHz","altSine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Windows.Validation.SelfShadowing.SelfShadowingTestAbove","solAziSine.freqHz","solAziSine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Windows.Validation.SelfShadowing.SelfShadowingTestBelow","altSine.freqHz","altSine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Windows.Validation.SelfShadowing.SelfShadowingTestBelow","altSine1.freqHz","altSine1.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Windows.Validation.SelfShadowing.SelfShadowingTestLeft","solAziSine.freqHz","solAziSine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Windows.Validation.SelfShadowing.SelfShadowingTestRight","solAziSine.freqHz","solAziSine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.ComparisonThermalZoneMoistAndDryAir","sine.freqHz","sine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.ComparisonThermalZoneMoistAndDryAir","sine1.freqHz","sine1.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.Multizone","sine.freqHz","sine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.MultizoneEquipped","sine.freqHz","sine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.MultizoneMoistAirCO2","sine.freqHz","sine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.MultizoneMoistAirCO2Equipped","sine.freqHz","sine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.MultizonePartlyCooled","sine.freqHz","sine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.ThermalZone","sine.freqHz","sine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.ThermalZoneAirExchange","sine.freqHz","sine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.ThermalZoneMoistAir","sine.freqHz","sine.f");
convertElement("AixLib.ThermalZones.ReducedOrder.Examples.ThermalZoneMoistCO2AirExchange","sine.freqHz","sine.f");
convertElement("AixLib.Utilities.Sensors.Examples.ExergyMeters","pulse.freqHz","pulse.f");
convertElement("AixLib.Utilities.Examples.HeatTransfer_test","sine.freqHz","sine.f");
convertElement("AixLib.Utilities.Examples.HeatTransfer_test","sineWindSpeed.freqHz","sineWindSpeed.f");
convertElement("AixLib.Obsolete.Year2019.Fluid.HeatPumps.Examples.HeatPumpDetailed","sine.freqHz","sine.f");
convertElement("AixLib.Obsolete.Year2021.Fluid.Examples.PumpRadiatorThermostaticValve","Source_opening.freqHz","Source_opening.f");
convertElement("AixLib.Obsolete.Year2021.Fluid.Examples.PumpRadiatorValve","Source_opening.freqHz","Source_opening.f");
convertElement("AixLib.Obsolete.YearIndependent.FastHVAC.Examples.Chiller.Chiller","sine.freqHz","sine.f");
convertElement("AixLib.Obsolete.YearIndependent.FastHVAC.Examples.HeatGenerators.HeatPump.HeatPump","sine.freqHz","sine.f");
convertElement("AixLib.Obsolete.YearIndependent.FastHVAC.Examples.Valves.ThermostaticValveRadiator","sine1.freqHz","sine1.f");
convertElement("AixLib.Obsolete.YearIndependent.FastHVAC.Examples.Valves.ThreeWayValve","sine.freqHz","sine.f");
