// Conversion script for IBPSA library
//  from: Version 3.0
//  to:   Version 4.0

convertClear();
// Conversion for https://github.com/ibpsa/modelica-ibpsa/issues/1956
convertModifiers("AixLib.Fluid.SolarCollectors.ASHRAE93",
                {"nPanelsSer"}, fill("",0), true);
convertModifiers("AixLib.Fluid.SolarCollectors.EN12975",
                {"nPanelsSer"}, fill("",0), true);

// Conversion for https://github.com/ibpsa/modelica-ibpsa/issues/1926
convertModifiers("AixLib.Fluid.Movers.FlowControlled_dp",
                 {"use_inputFilter"}, {"use_riseTime"}, true);
convertModifiers("AixLib.Fluid.Movers.FlowControlled_m_flow",
                 {"use_inputFilter"}, {"use_riseTime"}, true);
convertModifiers("AixLib.Fluid.Movers.SpeedControlled_y",
                 {"use_inputFilter"}, {"use_riseTime"}, true);
convertModifiers("AixLib.Fluid.Movers.Preconfigured.FlowControlled_dp",
                 {"use_inputFilter"}, {"use_riseTime"}, true);
convertModifiers("AixLib.Fluid.Movers.Preconfigured.FlowControlled_m_flow",
                 {"use_inputFilter"}, {"use_riseTime"}, true);
convertModifiers("AixLib.Fluid.Movers.Preconfigured.SpeedControlled_y",
                 {"use_inputFilter"}, {"use_riseTime"}, true);

convertModifiers("AixLib.Fluid.Actuators.Dampers.Exponential",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Dampers.MixingBox",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Dampers.MixingBoxMinimumFlow",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Dampers.PressureIndependent",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Valves.ThreeWayEqualPercentageLinear",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Valves.ThreeWayLinear",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Valves.ThreeWayTable",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Valves.TwoWayButterfly",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Valves.TwoWayEqualPercentage",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Valves.TwoWayLinear",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Valves.TwoWayPolynomial",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Valves.TwoWayPressureIndependent",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Valves.TwoWayQuickOpening",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);
convertModifiers("AixLib.Fluid.Actuators.Valves.TwoWayTable",
                 {"use_inputFilter", "riseTime"}, {"use_strokeTime", "strokeTime"}, true);


// Conversion for https://github.com/ibpsa/modelica-ibpsa/issues/1885
convertModifiers("AixLib.Fluid.Geothermal.Borefields.BaseClasses.PartialBorefield",
                {"dynFil"}, fill("",0), true);
convertModifiers("AixLib.Fluid.Geothermal.Borefields.BaseClasses.Boreholes.OneUTube",
                {"dynFil"}, fill("",0), true);
convertModifiers("AixLib.Fluid.Geothermal.Borefields.BaseClasses.Boreholes.TwoUTube",
                {"dynFil"}, fill("",0), true);


// Conversion for https://github.com/ibpsa/modelica-ibpsa/issues/1614
convertModifiers("AixLib.Fluid.Storage.ExpansionVessel", {"p"}, fill("",0), true);
